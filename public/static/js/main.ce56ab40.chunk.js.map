{"version":3,"sources":["translations/TopNavigation.js","components/TopNavigation.js","components/Footer.js","helpers/Helpers.js","actions/testing.js","types/index.js","translations/actions/loginsignup.js","actions/loginsignup.js","actions/users.js","translations/actions/subjects.js","actions/subjects.js","actions/results.js","actions/settings.js","translations/actions/contribution.js","actions/contribution.js","translations/Home.js","components/Home.js","translations/CountDown.js","components/formelements/Countdown.js","translations/Test.js","styled/StyledModal.js","components/Modal.js","components/Test.js","translations/Login.js","components/formelements/SmartField.js","components/forms/loginForm.js","components/Login.js","components/Captcha.js","translations/Signupform.js","components/forms/signupForm.js","components/forms/signupFormNoRecaptcha.js","translations/Signup.js","components/Signup.js","translations/EditSubjRow.js","components/Prompt.js","components/forms/EditUsertRow.js","translations/EditSubjectForm.js","components/forms/EditUsersForm.js","translations/Users.js","styled/StyledAccordeon.js","components/Users.js","components/formelements/Checkbox.js","components/formelements/Select.js","styled/StyledPagination.js","components/formelements/Pagination.js","translations/Resultsn.js","components/Resultsn.js","translations/AddSubjForm.js","components/forms/addSubjectForm.js","components/forms/EditSubjectRow.js","components/forms/EditSubjectForm.js","translations/Subjects.js","components/Subjects.js","translations/AboutCookie.js","components/AboutCookie.js","styled/StyledFlashMessage.js","components/FlashMessage.js","styled/StyledCookieConsent.js","translations/CookieConsent.js","components/CookieConsent.js","components/forms/passwordresetform.js","translations/PasswordReset.js","components/PasswordReset.js","components/AdminSettings.js","translations/Forgotpassword.js","components/forms/ForgotPasswordForm.js","components/ForgotPassword.js","translations/AccountSettings.js","components/forms/ChangePasswordForm.js","components/AccountSettings.js","translations/AdminContribution.js","components/forms/EditContributionRow.js","translations/EditContributionForm.js","components/forms/EditContributionForm.js","components/AdminContribution.js","translations/forms/AddContributionForm.js","components/formelements/SmartTextArea.js","components/forms/AdminEditContributionForm.js","components/AdminContributionDetails.js","components/forms/UserEditContributionForm.js","components/UserContributionDetails.js","reducers/testing.js","reducers/users.js","reducers/results.js","reducers/settings.js","reducers/subjects.js","reducers/loginsignup.js","translations/Contribution.js","components/forms/AddContributionForm.js","components/AddMyQuestions.js","reducers/contribution.js","components/forms/EditMyContributionRow.js","components/forms/MyContributionStatus.js","components/MyQuestionsStatus.js","components/authorization/NonAuthorized.js","components/authorization/AuthorizedRouteUser.js","components/authorization/AuthorizedRouteAdmin.js","index.js"],"names":["messages","en","home","test","testYourKnow","login","register","logout","testResults","users","subjects","admin","hi","settings","contibute","makeContribution","myContrributionStatus","ru","TopNavigation","state","this","props","logoutUser","setState","isLogoutHidden","e","toggleLanguage","target","value","locale","language","className","style","backgroundColor","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","position","top","right","bottom","left","zIndex","width","opacity","roleId","display","href","role","aria-haspopup","aria-labelledby","userName","onClick","bind","onChange","React","Component","window","setTimeout","height","$","containerHeight","console","log","helpers","UrlSniffer","location","host","includes","X_CSRF_TOKEN","undefined","document","getElementsByTagName","content","FilterBySubjectsAndSort","initialResults","activeSubjects","sortingOption","filteredBySubjects","filter","result","subjectName","sort","a","b","createdAt","quality","PaginatedResults","filteredBySubjectsAndSort","resultsFilterPerPage","resultsFilterPaginationNumber","index","makeRandom","text","possible","i","charAt","Math","floor","random","length","BaseUrl","processTesting","testingSessionHash","answerId","headers","store","getState","loginSignUpReducer","JWToken","dispatch","axios","post","then","response","data","payload","success","message","testReducer","toShowTestingHints","setCurrentQuestion","question","setAnswers","answersToShow","setNumberOfAnswered","answered","setNumberOfCorrect","correct","setIfRemainQuestions","ifRemainQuestions","setCorrectAnswerId","correctAnswerId","setHintsBorderVisibility","catch","error","startNewTest","currentSubjectId","testingSessionId","saveTestingSessionHash","setIfToShowTestingHints","setIfToShowTestingHintsDispatch","destroyTemporaryTestingQuestions","ifToDestroyTemporaryQuestions","setCurrentSubjectId","setCurrSubjectIdRedux","setCurrentSubjectName","name","setCurrSubjectNameRedux","setTestingSessionHash","currentQuestion","answers","ifToShowTestingHints","number","visibility","accountCreateSuccess","wrongRecaptcha","logoutSuccess","emailConfirmationSuccess","forgotPasswordSuccess","verifyaddress","enterTextInBlue","newpasswordsavedsucess","loginUserRedux","email","form","loginFormRedux","values","password","setRoleId","role_id","setUserName","suspensionReason","suspension_reason","setJWToken","jwt_token","setUserId","setCookieConsenGiven","cookie_consent_given","clearSensitiveinfo","showFlashMessage","createHideLoginError","signup","signupForm","recaptchaFromStore","signupCaptchaText","recaptchaFromForm","captcha","ifRecaptchaEnabled","settingsReducer","needToShowRecaptcha","translations","reset","setRedirectFlagForPasswordResetFunction","setRedirectFlagForPasswordResetFunctioDispatch","sentForgotPasswordForm","username","forgotPasswordFormRedux","resetPassword","passwordresetform","passwordRepeat","repeatpassword","resendEmailConfirmation","userId","flashMessagesTimeout","get","responce","alert","setRecaptchaText","recaptchaText","setRecaptchaTextDispatch","redirectFlagForPasswordResetFunction","cookieConsenGiven","loginError","loginErrorVisibility","timeout","changeFlashMessageVisibility","flashMessageMessage","changeFlashMessageMessage","flashMessageType","changeFlashMessageType","flashMessageVisibility","loadUsers","setUsers","deleteUser","delete","toggleuserconfirm","toggleusersuspend","reason","subjEditSuccess","subjdeleteSuccess","subjAddSuccess","loadSubjects","changeSubjectsAdmin","saveSubject","deleteSubject","addSubjectOne","JWT","subject","addSubjectForm","loadSubjectsAdmin","toggleSubjectActivity","selectedCheckboxes","Set","map","add","ResultsFilterActiveSubjects","changeSubjectsUser","loadSubjectsUsers","subjectsUser","resultsFilterActiveSubjects","loadResults","itemsPerPage","resultsReducer","resultsFilterBySubjectsAndSort","results","resultsFilterSortingOption","setNumberOfPaginationAction","ceil","setResultsFiltered","setResultsFilterActiveSubjects","numberOfPagination","setNumberOfPagination","resultsFiltered","setItemsPerPage","items","setItemPerPage","setCurrentPaginationAction","currentPagination","setCurrentPagination","setSortingOptionAction","setSortingOption","setLanguage","lang","setLanguageDispatch","changePassword","changePasswordFormRedux","toggleEmailConfirmation","changeSettingsAdmin","toggleRecaptcha","loadGlobalSettings","setCookieConsentVisibility","setCookieConsentVisibilityDispatch","cookieConsentVisibility","questionAddSuccess","setCurrentContributionSubjectId","subjectId","setCurrSubjectContributionIdRedux","setCurrentContributionSubjectname","setCurrSubjectContributionNameRedux","sentMyContribution","addContibutionFormRedux","firstAnswer","secondAnswer","thirdAnswer","fourthAnswer","contributionsReducer","contributionSubjectId","dir","saveContributionAdmin","editContibutionFormAdminRedux","uncorrect0","uncorrect1","uncorrect2","answerCorrect","contibutionid","setContributionItemAdminResults","setRedirectFlagForAdminDispatch","declineContributionAdmin","clearAdminContributionItem","loadContributionAdmin","contributionAdminResults","contibution","loadContributionItemAdmin","loadContributionItemUser","contributionUserItemResults","loadContributionUser","userContribution","setRedirectFlagForAdmin","redirectFlagForAdmin","contributionAdminItemResults","aboutProject","atTheMomentWeHave","aboutSystem","thanksforregistration","haventReceivedLink","numberofqiestions","resendLink","accountHasBeenSuspended","pleasedContactAdminToRestoreAccountStatus","Home","child","createRef","cookies","mycookie","mycookieRedirectToResetPassword","needToRedirectToLogin","needToRedirectToresetPassword","history","push","columns","dataField","buttonText","ref","keyField","Footer","connect","subjectsReducer","actionCreators","withCookies","timeLeft","seconds","Countdown","time","widthh","bgcolor","timer","startTimer","countDown","resetTimer","secs","divisor_for_minutes","divisor_for_seconds","timeLeftVar","secondsToTime","setInterval","dynamicWidth","s","clearInterval","stopFunction","tests","noRegistrationNeeded","ifYouWouldLike","herre","firstt","select","currentSubject","answeredQuestions","justClickCorrectAnswer","clickToStop","allQuestionAreAnswered","correctAnswers","doneThanks","startYour","pleaseConfirmTestStop","StyledModal","styled","div","Modal","show","showModal","hideModal","clickYes","toExecute","handleChildClick","stopPropagation","titlle","Test","onDropdownChange","event","subjName","currentSubjectName","answerClicked","countdown","current","corrAnswerId","startTestingButtonClicked","stopTestingButtonClicked","modall","resetAll","submit","formattedValue","key","numberOfAnsweredQuestions","numberOfCorrectQuestions","toShowTestHintsBorder","outline","data-id","openModal","clearValues","emailAddress","forgotpassword","senddata","SmartField","isHidden","word","color","input","label","toShowPasswordMeter","meta","touched","warning","dirty","placeholder","togglePasswordVisibility","aria-hidden","padding","marginTop","fontSize","renderField","reduxForm","validate","errors","handleSubmit","pristine","submitting","errorMessage","errorMessageVisibility","onSubmit","Field","component","disabled","Login","handleChangeMail","handleChangePassword","cook","remove","Captcha","canvasRef","useRef","useEffect","context","getContext","fillStyle","fillRect","canvas","font","fillText","ctx","beginPath","arc","PI","fill","confirmPasword","SignupForm","onRecaptcaClick","passwordretype","initialValues","SignupFormNoRecaptcha","Signup","componentDidMount","recaptchaClick","recaptcatext","active","questionNumber","edit","save","hidden","active1","Prompt","rows","cols","EditUserRow","user","user_id","status","promptt","resultsNumber","openPromptt","EditSubjectForm","StyledAccordeon","Users","allowMultipleExpanded","allowZeroExpanded","EditUsersForm","usersReducer","Checkbox","isChecked","toggleCheckboxChange","handleCheckboxChange","checked","Select","options","defaultt","StyledPagination","Pagination","paginationQuantity","paginationNumber","paginationClick","Array","_","belowAreResults","filterResults","sortingOptons","score","testDateAsc","testDateDesc","resultsAsc","resultsDesc","subjAsc","subjsDesc","Resultsn","filterresults","toggleCheckbox","has","createCheckbox","createCheckboxes","onDropdownChangeItemsPerPage","onDropdownChangeSortingOptions","resultsPerPage","sortOptions","resultsFilterPaginationQuantity","clearVal","EditSubjectRow","handleChangeName","isInputHidden","editMode","questions_number","activePhrase","toggleEditModeTrue","subjControlCenter","atTheMomentSubjList","Subjects","subjectsAdmin","aboutCookieTitle","aboutCookieText","AboutCookie","StyledFlashMessage","ifVisible","bGcolorr","FlashMessage","flashMessagesVisibility","flashMessagesType","flashMessagesMessage","StyledCookieConsent","consent","agree","details","CookieConsent","cookieConsentObtained","set","path","expires","Date","now","hideConsent","passwordreset","PasswordReset","redirectFlagForPasswordresetFunctionality","AdminSettings","needEmailConfirmation","send","pleaseEnter","andor","ForgotPassword","accountSettings","setCurrentLanguage","wantToSeeHints","ifYesHints","pleaseKeepInMind","enterNewPassw","repeatNewPassw","repeatPassword","submitLabel","valid","AccountSettings","toggleLanguageInternal","toggleShowHintsInternal","minHeight","editContibution","myConrtibutionDetails","EditContributionRow","contribution","resultId","statusWord","url","EditContributionForm","contributions","from","AdminContribution","adminContribution","sendQuestion","approveAndsaveQuestion","declineQuestion","backToContributionPage","SmartTextArea","marginBottom","fontWeight","AdminEditContributionForm","declineFunction","backNavigation","class","enableReinitialize","AdminContributionDetails","handleChange","match","params","redirectAfterSuccesfullAdministeringForAdmin","adminContributionItem","UserEditContributionForm","UserContributionDetails","userContributionItem","testState","testHintsBorderTimeout","action","usersState","resultsState","settingsState","emailConfirmation","signupRecaptcha","subjectsState","subjectsN","loginSignUpState","addMyQuestions","myQuestionsStatus","youCanAddQuestions","onceAdded","AddMyQuestions","contributionState","contributionSubjectName","EditMyContributionRow","MyContributionStatus","MyQuestionsStatus","rootReducer","combineReducers","formReducer","createStore","composeWithDevTools","applyMiddleware","thunk","App","exact","NonAuthorized","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ce56ab40.chunk.js","sourcesContent":["const messages = {\n    en: {\n      home: \"Home\",\n      test: \"Test\",\n      testYourKnow: \"Test your knoweledge\",\n      login: \"Login\",\n      register: \"Sign up\",\n      logout: \"Logout\",\n      testResults: \"Test results\",\n      users: \"Users\",\n      subjects: \"Subjects\",\n      admin: \"Admin\",\n      hi: \"Hi, \",\n      settings: \"Settings\",\n      contibute: \"Contribute\",\n      makeContribution: \"Make contribution\",\n      myContrributionStatus: \"My contribution status\",\n    },\n    ru: {\n      home: \"Домой\",\n      test: \"Teст\",\n      testYourKnow: \"Проверьте свои знания\",\n      login: \"Логин\",\n      register: \"Зарегистрироваться\",\n      logout: \"Выход\",\n      testResults: \"Результаты теста\",\n      users: \"Пользователи\",\n      subjects: \"Предметы\",\n      admin: \"Админ\",\n      hi: \"Привет, \",\n      settings: \"Настройки\",\n      contibute: \"Мои вопросы\",\n      makeContribution: \"Добавить вопросы\",\n      myContrributionStatus: \"Cтатус моих вопросов\",\n    }\n  };\n\n  export default messages;","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/TopNavigation';\n\nclass TopNavigation extends React.Component {\n    constructor () {\n        super()\n        this.state = {\n        }\n    }\n\n    logoutUser (){\n        this.props.logoutUser();\n        this.setState({\n            isLogoutHidden: true\n        })\n    }\n\n    toggleLanguage(e){\n        this.props.toggleLanguage(e.target.value);\n    }\n\n    render() {\n        return (\n            <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n                <nav className=\"navbar navbar-dark navbar-expand-md sticky-top\" style={{ backgroundColor: \"#00549a !important\" }}>\n                    <Link className=\"navbar-brand\" to=\"/app\">\n                        <i className=\"fa fa-home\"></i>\n                    </Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <i className=\"fa fa-bars\"></i>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n                    style={{     position: \"fixed\",\n                        backgroundColor: \"black\",\n                        top: \"0\",\n                        right: \"0\",\n                        bottom: \"0\",\n                        left: \"0\",\n                        zIndex: \"-10\",\n                        width: \"100%\",\n                        opacity: \".1\" }}></button>\n\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item active\" style={this.props.roleId === 0 ? {} : {display: 'none'}}>\n                            <Link className=\"nav-link\" to=\"/app/test\">\n                                <FormattedMessage id=\"test\" />\n                            </Link>\n                        </li>\n                        <li className=\"nav-item dropdown active\" style={(this.props.roleId === 1 || this.props.roleId === 2) ? {} : {display: 'none'}}>\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown1\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <span>\n                                    <FormattedMessage id=\"test\" />\n                                </span>\n                            </a>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown1\">\n                                <Link className=\"dropdown-item\" to=\"/app/test\">\n                                    <FormattedMessage id=\"test\" />\n                                </Link>\n                                <Link className=\"dropdown-item\" to=\"/app/resultsn\">\n                                    <FormattedMessage id=\"testResults\" />\n                                </Link>\n                            </div>\n                        </li>\n\n                        <li className=\"nav-item active dropdown\"style={(this.props.roleId === 1 || this.props.roleId === 2) ? {} : {display: 'none'}}>\n                            <a className=\"nav-link dropdown-toggle\" href =\"#\" id=\"navbarDropdown11\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <span>\n                                    <FormattedMessage id=\"settings\" />\n                                </span>\n                            </a>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown11\">\n                                <Link className=\"dropdown-item\" to=\"/app/accountsettings\">\n                                    <FormattedMessage id=\"settings\" />\n                                </Link>\n                            </div>\n                        </li>\n\n                        <li className=\"nav-item active dropdown\" style={(this.props.roleId === 1 || this.props.roleId === 2) ? {} : {display: 'none'}} >\n                            <a className=\"nav-link dropdown-toggle\" href =\"#\" id=\"navbarDropdown12\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <span>\n                                    <FormattedMessage id=\"contibute\" />\n                                </span>\n                            </a>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown12\">\n                                <Link className=\"dropdown-item\" to=\"/app/addmyquestion\">\n                                    <FormattedMessage id=\"makeContribution\" />\n                                </Link>\n                                <Link className=\"dropdown-item\" to=\"/app/myquestionstatus\">\n                                    <FormattedMessage id=\"myContrributionStatus\" />\n                                </Link>\n                            </div>\n                        </li>\n\n                        <li className=\"nav-item active dropdown\" style={this.props.roleId === 2 ? {} : {display: 'none'}}>\n                            <a className=\"nav-link dropdown-toggle\" href =\"#\" id=\"navbarDropdown2\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <span>\n                                    <FormattedMessage id=\"admin\" />\n                                </span>\n                            </a>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown2\">\n                                <Link className=\"dropdown-item\" to=\"/app/users\">\n                                    <FormattedMessage id=\"users\" />\n                                </Link>\n                                <Link className=\"dropdown-item\" to=\"/app/subjects\">\n                                    <FormattedMessage id=\"subjects\" />\n                                </Link>\n                                <Link className=\"dropdown-item\" to=\"/app/adminsettings\">\n                                    Global settings\n                                </Link>\n                                <Link className=\"dropdown-item\" to=\"/app/admincontribution\">\n                                    Contribution\n                                </Link>\n                            </div>\n                        </li>\n                    </ul>\n                    <ul className=\"navbar-nav ml-auto\" style={this.props.roleId === 0 ? {} : {display: 'none'}}>\n                        <li className=\"nav-item active\">\n                            <Link className=\"nav-link\" to=\"/app/login\">\n                                <FormattedMessage id=\"login\" />\n                            </Link>\n                        </li> \n                        <li className=\"nav-item active\">\n                            <Link className=\"nav-link\" to=\"/app/signup\">\n                                <FormattedMessage id=\"register\" />\n                            </Link>\n                        </li>\n                    </ul>\n                    <ul className=\"navbar-nav mi-auto\" style={this.props.roleId === 0 ? {display: 'none'} : {}}>                            \n                        <li className=\"nav-item active dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" id=\"navbarDropdown2\" data-toggle=\"dropdown\">\n                                <span>\n                                    <FormattedMessage id=\"hi\" />{this.props.userName}\n                                </span>\n                            </a>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown2\">\n                                <a className=\"dropdown-item\" href=\"#\" onClick={this.logoutUser.bind(this)}>\n                                    <FormattedMessage id=\"logout\" />\n                                </a>\n                            </div>\n                        </li>\n                    </ul>\n                    <select onChange={this.toggleLanguage.bind(this)} value={this.props.language} className=\"languageSelect form-select\">\n                        <option id=\"en\">en</option>\n                        <option id=\"ru\">ru</option>\n                    </select>\n                </div>\n                </nav>\n            </IntlProvider>\n        )\n    }\n}\nexport default TopNavigation\n\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/TopNavigation';\nimport $ from 'jquery';\n\nclass TopNavigation extends React.Component {\n    constructor () {\n        super()\n        this.state = {\n        }\n    }\n\n    componentDidMount(){\n        window.setTimeout(\n            function(){\n                let height = $(window).height();\n                let containerHeight = $(\".container\").height();\n                console.log(\"height = \", height);\n                console.log(\"containerHeight = \", containerHeight);\n            }, 1000\n        )\n    }\n\n\n    logoutUser (){\n        this.props.logoutUser();\n        this.setState({\n            isLogoutHidden: true\n        })\n    }\n\n    toggleLanguage(e){\n        this.props.toggleLanguage(e.target.value);\n    }\n\n    render() {\n        return (\n            <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n                    <footer className=\"text-center text-md-start text-white navbar-expand-lg\">\n                    <nav className=\"navbar\">\n                        <ul className=\"navbar-nav mr horizontal\" >\n                            <li className=\"nav-item active\">\n                                <Link className=\"nav-link\" to=\"/app\">\n                                <i className=\"fa fa-home\"></i>\n                                </Link>\n                            </li>\n                            <li className=\"nav-item active\">\n                                <Link className=\"nav-link\" to=\"/app/test\">\n                                    <FormattedMessage id=\"test\" />\n                                </Link>\n                            </li>\n                            <li className=\"nav-item active\" style={this.props.roleId !== 0 ? {} : {display: 'none'}}>\n                                <Link className=\"nav-link\" to=\"/app/resultsn\">\n                                    <FormattedMessage id=\"testResults\" />\n                                </Link>\n                            </li>\n                            <li className=\"nav-item active\" style={this.props.roleId !== 0 ? {} : {display: 'none'}}>\n                                <Link className=\"nav-link\" to=\"/app/accountsettings\">\n                                    <FormattedMessage id=\"settings\" />\n                                </Link>\n                            </li>\n                            <li className=\"nav-item active\" style={this.props.roleId === 0 ? {} : {display: 'none'}}>\n                                <Link className=\"nav-link\" to=\"/app/login\">\n                                    <FormattedMessage id=\"login\" />\n                                </Link>\n                            </li> \n                            <li className=\"nav-item active\" style={this.props.roleId === 0 ? {} : {display: 'none'}}>\n                                <Link className=\"nav-link\" to=\"/app/signup\">\n                                    <FormattedMessage id=\"register\" />\n                                </Link>\n                            </li>\n                        </ul>\n                        <ul className=\"navbar-nav mr horizontal\">\n                            <li>\n                                <Link className=\"nav-link\" to=\"/app/\">\n                                    © 2020 Copyright: Petro Niemkov\n                                </Link>\n                            </li>\n                        </ul>\n                    </nav>\n                    </footer>\n            </IntlProvider>\n        )\n    }\n}\nexport default TopNavigation\n\n","const helpers = {\n    UrlSniffer: function(){\n        return (window.location.host.includes('localhost') || window.location.host.includes('127.0.0.1')) ? 'http://127.0.0.1:8000/' : 'http://knowledgedepot.ca/';\n    },\n    X_CSRF_TOKEN: function(){\n        if(document.getElementsByTagName(\"meta\")[2] !== undefined){\n            return document.getElementsByTagName(\"meta\")[2].content;\n        }\n        //return 'R1W0UPCe9OGkYIMqdBcR70sJIxbuXXZG8FbUbUNf';// this needed for local development to be able to POST data from  http://localhost:3000/ to 127.0.0.1\n        // first, don't forget to disable CORS in LARAVEL ....\\config\\cors.php\n    },\n    FilterBySubjectsAndSort: function(initialResults, activeSubjects, sortingOption){\n        let filteredBySubjects = initialResults.filter(function (result) { return (activeSubjects.includes(result.subjectName))});\n            switch(sortingOption) {\n            case \"1\":\n                filteredBySubjects.sort((a, b) => a.createdAt > b.createdAt ? 1:-1);\n                break;\n            case \"2\":\n                filteredBySubjects.sort((a, b) => a.createdAt < b.createdAt ? 1:-1);\n                break;\n            case \"3\":\n                filteredBySubjects.sort((a, b) => a.quality > b.quality ? 1:-1);\n                break;\n            case \"4\":\n                filteredBySubjects.sort((a, b) => a.quality < b.quality ? 1:-1);\n                break;\n            case \"5\":\n                filteredBySubjects.sort((a, b) => a.subjectName > b.subjectName ? 1:-1);\n                break;\n            case \"6\":\n                filteredBySubjects.sort((a, b) => a.subjectName < b.subjectName ? 1:-1);\n                break;\n            default:\n                filteredBySubjects.sort((a, b) => a.createdAt > b.createdAt ? -1:1);\n            }\n            \n            return filteredBySubjects;\n        },\n        PaginatedResults: function(filteredBySubjectsAndSort, resultsFilterPerPage, resultsFilterPaginationNumber){\n            return filteredBySubjectsAndSort.filter(function(result, index){ \n                return (index >= resultsFilterPerPage*resultsFilterPaginationNumber) && (index < resultsFilterPerPage*(resultsFilterPaginationNumber + 1))\n            });\n        },\n\n        makeRandom: function (){\n            var text = \"\";\n            var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n            for (var i = 0; i < 7; i++)\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n            return text;\n        }\n}\n\nexport default helpers;\n\n","import axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport { SET_CURRENT_SUBJECT_ID, SET_TESTING_SESSION_HASH, SET_CURRENT_SUBJECT_NAME, \n    SET_CURRENT_QUESTION, SET_ANSWERS, SET_NUMBER_OF_ANSWERED, SET_NUMBER_OF_CORRECT, SET_IF_REMAIN_QUESTIONS, SET_CORRECT_ANSWER_ID, SET_IF_TO_SHOW_TEST_HINTS_BORDER,\n    SET_IF_TO_SHOW_TEST_HINTS } from '../types';\nimport store from '../index.js';\n\nconst BaseUrl = helpers.UrlSniffer();\n\nexport const processTesting = (testingSessionHash, answerId) => {\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n     return (dispatch) => {\n        return axios.post(BaseUrl + 'react/processTesting/', {testingSessionHash, answerId}, {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                if (store.getState().testReducer.toShowTestingHints === 1){\n                    setTimeout(() => {\n                        dispatch(setCurrentQuestion(response.data.payload.question));\n                        dispatch(setAnswers(response.data.payload.answersToShow));\n                        dispatch(setNumberOfAnswered(response.data.payload.answered));\n                        dispatch(setNumberOfCorrect(response.data.payload.correct));\n                        dispatch(setIfRemainQuestions(response.data.payload.ifRemainQuestions));\n                        dispatch(setCorrectAnswerId(response.data.payload.correctAnswerId));\n                        //dispatch(setHintsBorderVisibility(0))\n                    }, 5000);///store.getState().testReducer.testHintsBorderTimeout\n                } else {\n                    dispatch(setCurrentQuestion(response.data.payload.question));\n                    dispatch(setAnswers(response.data.payload.answersToShow));\n                    dispatch(setNumberOfAnswered(response.data.payload.answered));\n                    dispatch(setNumberOfCorrect(response.data.payload.correct));\n                    dispatch(setIfRemainQuestions(response.data.payload.ifRemainQuestions));\n                    dispatch(setCorrectAnswerId(response.data.payload.correctAnswerId));\n                    ///dispatch(setHintsBorderVisibility(0))\n                }\n                dispatch(setHintsBorderVisibility(0))\n            } else {\n                throw(response.data.payload.message);\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport function startNewTest(currentSubjectId, testingSessionId){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.post(BaseUrl + 'react/startTesting', {currentSubjectId, testingSessionId}, {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                dispatch(saveTestingSessionHash(response.data.payload.testingSessionHash));\n                this.processTesting(response.data.payload.testingSessionHash);\n            } else {\n                throw(response.data.payload.message);\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport function setIfToShowTestingHints(value){\n    return (dispatch) => {\n        dispatch(setIfToShowTestingHintsDispatch(value))\n    };\n}\n\nexport const destroyTemporaryTestingQuestions = (testingSessionHash, ifToDestroyTemporaryQuestions) => {\n    return (dispatch) => {\n        return axios.post(BaseUrl + 'react/processTesting/', {testingSessionHash, ifToDestroyTemporaryQuestions})\n        .then(response => {\n            if(response.data.payload.success === \"true\"){} else { throw(response.data.payload.message); };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport const setCurrentSubjectId = (id) => {\n    return (dispatch) => {\n        dispatch(setCurrSubjectIdRedux(id))\n    };\n}\n\nexport function setCurrSubjectIdRedux(id){\n    return{\n        type: SET_CURRENT_SUBJECT_ID,\n        id: id\n    }\n}\n\nexport const setCurrentSubjectName = (name) => {\n    return (dispatch) => {\n        dispatch(setCurrSubjectNameRedux(name))\n    };\n}\n\nexport const setTestingSessionHash = (data) => {\n    return (dispatch) => {\n        dispatch(saveTestingSessionHash(data))\n    };\n}\n\nexport function setCurrSubjectNameRedux(name){\n    return{\n        type: SET_CURRENT_SUBJECT_NAME,\n        name: name\n    }\n}\n\nexport function setCurrentQuestion(currentQuestion){\n    return {\n        type: SET_CURRENT_QUESTION,\n        currentQuestion: currentQuestion,\n    }\n}\n\nexport function saveTestingSessionHash(data){\n    return{\n        type: SET_TESTING_SESSION_HASH,\n        testingSessionHash: data\n    }\n}\n\nexport function setAnswers(answers){\n    return {\n        type: SET_ANSWERS,\n        answers: answers,\n    }\n}\n\nexport function setIfToShowTestingHintsDispatch(value){\n    return {\n        type: SET_IF_TO_SHOW_TEST_HINTS,\n        ifToShowTestingHints: value,\n    }\n}\n\nexport function setNumberOfAnswered(number){\n    return {\n        type: SET_NUMBER_OF_ANSWERED,\n        number: number,\n    }\n}\n\nexport function setHintsBorderVisibility(number){\n    return {\n        type: SET_IF_TO_SHOW_TEST_HINTS_BORDER,\n        visibility: number,\n    }\n}\n\nexport function setNumberOfCorrect(number){\n    return {\n        type: SET_NUMBER_OF_CORRECT,\n        number: number,\n    }\n}\n\nexport function setCorrectAnswerId(id){\n    return {\n        type: SET_CORRECT_ANSWER_ID,\n        id: id,\n    }\n}\n\nexport function setIfRemainQuestions(number){\n    return {\n        type: SET_IF_REMAIN_QUESTIONS,\n        number: number,\n    }\n}\n\n","export const LOGIN_SEND = 'LOGIN_SEND';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const HIDE_LOGIN_ERROR = 'HIDE_LOGIN_ERROR';\nexport const LOAD_SUBJECTS_ADMIN = 'LOAD_SUBJECTS_ADMIN';\nexport const LOAD_SUBJECTS_USER = 'LOAD_SUBJECTS_USER';\nexport const LOAD_USERS = 'LOAD_USERS';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const ADMIN_ERROR = 'ADMIN_ERROR';\nexport const LOAD_RESULTS = 'LOAD_RESULTS';\nexport const USER_ERROR = 'USER_ERROR';\nexport const SET_CURRENT_SUBJECT_ID = 'SET_CURRENT_SUBJECT_ID';\nexport const SET_TESTING_SESSION_HASH = 'SET_TESTING_SESSION_HASH';\nexport const SET_CURRENT_SUBJECT_NAME = 'SET_CURRENT_SUBJECT_NAME';\nexport const SET_CURRENT_QUESTION = 'SET_CURRENT_QUESTION';\nexport const SET_ANSWERS = 'SET_ANSWERS';\nexport const SET_NUMBER_OF_ANSWERED = 'SET_NUMBER_OF_ANSWERED';\nexport const SET_NUMBER_OF_CORRECT = 'SET_NUMBER_OF_CORRECT';\nexport const SET_IF_REMAIN_QUESTIONS = 'SET_IF_REMAIN_QUESTIONS';\nexport const SET_USERS = 'SET_USERS';\n//refactoring login logout//\nexport const SET_USER_NAME = 'SET_USER_NAME';\nexport const SET_ROLE_ID = 'SET_ROLE_ID';\nexport const SET_JWT_TOKEN = 'SET_JWT_TOKEN';\nexport const SET_USER_ID = 'SET_USER_ID';\nexport const FULL_LOGOUT = 'FULL_LOGOUT';\n// try to combine different reducers in one action\nexport const CLEAR_SENSITIVE_INFO = 'CLEAR_SENSITIVE_INFO';\n// filter results subproject:\nexport const SET_RESULTS_FILTER_ACTIVE_SUBJECTS = 'SET_RESULTS_FILTER_ACTIVE_SUBJECTS';\nexport const SET_RESULTS_FILTERED = 'SET_RESULTS_FILTERED';\nexport const SET_RESULTS_FILTER_ITEMS_PAGE = 'SET_RESULTS_FILTER_ITEMS_PAGE';\nexport const SET_RESULTS_FILTER_NUMBER_OF_PAGINATIONS = 'SET_RESULTS_FILTER_NUMBER_OF_PAGINATIONS';\nexport const SET_RESULTS_FILTER_CURRENT_PAGINATION = 'SET_RESULTS_FILTER_CURRENT_PAGINATION';\nexport const SET_RESULTS_FILTER_SORTING_OPTION = 'SET_RESULTS_FILTER_SORTING_OPTION';\nexport const SET_CORRECT_ANSWER_ID = 'SET_CORRECT_ANSWER_ID';\nexport const SET_IF_TO_SHOW_TEST_HINTS_BORDER = 'SET_IF_TO_SHOW_TEST_HINTS_BORDER';\nexport const SET_IF_TO_SHOW_TEST_HINTS = 'SET_IF_TO_SHOW_TEST_HINTS';\n//settings\nexport const SET_LANGUAGE = 'SET_LANGUAGE';\nexport const SET_FLASH_MESSAGES_VISIBILITY = 'SET_FLASH_MESSAGES_VISIBILITY';\nexport const SET_FLASH_MESSAGES_MESSAGE = 'SET_FLASH_MESSAGES_MESSAG';\nexport const SET_FLASH_MESSAGES_TYPE = 'SET_FLASH_MESSAGES_TYPE';\nexport const SET_GLOBAL_SETTINGS = 'SET_GLOBAL_SETTINGS';\n//signup\nexport const SET_SIGNUP_CAPTCHA_TEXT = 'SET_SIGNUP_CAPTCHA_TEXT';\nexport const SET_FAKE_CAPTCHA_TEXT = 'SET_FAKE_CAPTCHA_TEXT';//when recaptcha is disabled, we set fake recaptcha text to aviod signup form validation error for recaptcha field\n////cookie consent\nexport const SET_COOKIE_CONSENT_VISIBILITY = 'SET_COOKIE_CONSENT_VISIBILITY';\nexport const SET_COOKIE_CONSENT_OBTAINED = 'SET_COOKIE_CONSENT_OBTAINED';\n//suspended account\nexport const SET_SUSPENSION_REASON = 'SET_SUSPENSION_REASON';\n//reset password functionality\nexport const SET_REDIRECT_FLAG_FOR_RESET_PASWORD_FUNCTION = 'SET_REDIRECT_FLAG_FOR_RESET_PASWORD_FUNCTION';\n/// my contribution functionality\nexport const SET_CURRENT_CONTRIBUTION_SUBJECT_ID = 'SET_CURRENT_CONTRIBUTION_SUBJECT_ID';\nexport const SET_CURRENT_CONTRIBUTION_SUBJECT_NAME = 'SET_CURRENT_CONTRIBUTION_SUBJECT_NAME';\nexport const SENT_MY_CONTRIBUTION = 'SENT_MY_CONTRIBUTION'; \nexport const SET_ADMIN_CONTRIBUTION = 'SET_ADMIN_CONTRIBUTION';\nexport const SET_CONTRIBUTION_CONTENT = 'SET_CONTRIBUTION_CONTENT';\nexport const SET_REDIRECT_FLAG_FORADMIN = 'SET_REDIRECT_FLAG_FORADMIN';//will redirect to contributions page from contribution item page\nexport const SET_USER_CONTRIBUTION = 'SET_USER_CONTRIBUTION';\nexport const SET_USER_CONTRIBUTION_ITEM = 'SET_USER_CONTRIBUTION_ITEM';\n\n\n\n\n\n\n\n\n\n\n","const messages = {\n    en: {\n        accountCreateSuccess: \"Account has been created successfully\",\n        wrongRecaptcha: \"Wrong recaptch text\",\n        logoutSuccess: \"User has been logged out successfully\",\n        emailConfirmationSuccess: \"Email confirmation link has been resent successfully\",\n        forgotPasswordSuccess: \"Password reset link has been sent successfully\", \n        verifyaddress: \"Password reset link will be sent to the email address/username specified. Usually it takes up to 3 minutes for system to send email. Just click this link and fill password reset form\",\n        enterTextInBlue: \"Enter text in blue below\",\n        newpasswordsavedsucess: \"New password has been saved successfully\",\n    },\n    ru: {\n        accountCreateSuccess: \"Аккаунт успешно создан\",\n        wrongRecaptcha: \"Неверный текст recaptcha\",\n        logoutSuccess: \"Пользователь успешно вышел из системы\",\n        emailConfirmationSuccess: \"Электронное письмо с подтверждением успешно отправлено повторно\",\n        forgotPasswordSuccess: \"Ссылка для сброса пароля была успешно отправлена\",\n        verifyaddress: \"Ссылка для сброса пароля будет отправлена ​​на указанный адрес электронной почты/имя пользователя. Обычно система отправляет электронное письмо в течение 3 минут. Просто нажмите на эту ссылку и заполните форму сброса пароля\",\n        enterTextInBlue: \"Введите текст, выделенный синим цветом\",\n        newpasswordsavedsucess: \"Новый пароль успешно сохранен\",\n    }\n  };\n\n  export default messages;","import axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport { LOGIN_ERROR, SET_ROLE_ID, SET_USER_NAME, SET_JWT_TOKEN, SET_USER_ID, CLEAR_SENSITIVE_INFO,\n    SET_FLASH_MESSAGES_VISIBILITY, SET_FLASH_MESSAGES_MESSAGE, SET_FLASH_MESSAGES_TYPE, \n    SET_SIGNUP_CAPTCHA_TEXT, SET_COOKIE_CONSENT_OBTAINED, SET_SUSPENSION_REASON, SET_REDIRECT_FLAG_FOR_RESET_PASWORD_FUNCTION } from '../types';\nimport store from '../index.js';\nimport {reset} from 'redux-form';\nimport messages from '../translations/actions/loginsignup';\n\n\nconst BaseUrl = helpers.UrlSniffer();\n\nexport const loginUserRedux = () => {\n    const email = store.getState().form.loginFormRedux.values.email;// in this case store is available\n    const password = store.getState().form.loginFormRedux.values.password;// in this case store is available\n    return (dispatch) => {\n        return axios.post(BaseUrl + 'react/login', {email, password})\n        .then(response => {\n            if(response.data.data.success === \"true\"){\n                dispatch(setRoleId(response.data.data.role_id));\n                dispatch(setUserName(response.data.data.name));\n                dispatch(setUserSuspensionReason(response.data.data.suspension_reason));\n                dispatch(setJWToken(response.data.data.jwt_token));\n                dispatch(setUserId(response.data.data.id));\n                dispatch(setCookieConsenGiven(response.data.data.cookie_consent_given));\n            } else {\n                dispatch(clearSensitiveinfo())\n                showFlashMessage(dispatch, response.data.data.message , 'error');\n                setTimeout(function(){ \n                        dispatch(createHideLoginError()) \n                 }, 2000);\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport function signup(){\n    const name = store.getState().form.signupForm.values.name;// in this case store is available\n    const email = store.getState().form.signupForm.values.email;// in this case store is available\n    const password = store.getState().form.signupForm.values.password;// in this case store is available\n    const recaptchaFromStore = store.getState().loginSignUpReducer.signupCaptchaText;\n    const recaptchaFromForm = store.getState().form.signupForm.values.captcha;\n    const ifRecaptchaEnabled = store.getState().settingsReducer.needToShowRecaptcha;\n    const translations = {\n        accountCreateSuccess:  store.getState().settingsReducer.language === 'en' ? messages.en.accountCreateSuccess : messages.ru.accountCreateSuccess,\n        wrongRecaptcha:  store.getState().settingsReducer.language === 'en' ? messages.en.wrongRecaptcha : messages.ru.wrongRecaptcha,\n    }\n    return (dispatch) => {\n        if((ifRecaptchaEnabled == 1) && (recaptchaFromStore !== recaptchaFromForm)){\n            showFlashMessage(dispatch, translations.wrongRecaptcha, 'error');\n            return false;\n        } \n        return axios.post(BaseUrl + 'react/signup', {name, email, password})\n        .then(response => {\n            if(response.data.data.success === \"true\"){\n                dispatch(setRoleId(response.data.data.role_id));\n                dispatch(setUserName(response.data.data.name));\n                dispatch(setJWToken(response.data.data.jwt_token));\n                dispatch(setUserId(response.data.data.id));\n                dispatch(setCookieConsenGiven(response.data.data.cookie_consent_given));\n                dispatch(reset('signupForm'));\n                showFlashMessage(dispatch, translations.accountCreateSuccess, 'success');\n            } else {\n                dispatch(clearSensitiveinfo())\n                showFlashMessage(dispatch, response.data.data.message , 'error');\n                setTimeout(function(){ \n                    dispatch(createHideLoginError()) \n             }, 2000);\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport function setRedirectFlagForPasswordResetFunction(value){\n    return (dispatch) => {\n        dispatch(setRedirectFlagForPasswordResetFunctioDispatch(value));\n    };\n}\n\nexport function sentForgotPasswordForm(){\n    const username = store.getState().form.forgotPasswordFormRedux.values.username;// in this case store is available\n    const email = store.getState().form.forgotPasswordFormRedux.values.email;// in this case store is available\n    const recaptchaFromStore = store.getState().loginSignUpReducer.signupCaptchaText;\n    const recaptchaFromForm = store.getState().form.forgotPasswordFormRedux.values.captcha;\n    const translations = {\n        forgotPasswordSuccess:  store.getState().settingsReducer.language === 'en' ? messages.en.forgotPasswordSuccess : messages.ru.forgotPasswordSuccess,\n        wrongRecaptcha:  store.getState().settingsReducer.language === 'en' ? messages.en.wrongRecaptcha : messages.ru.wrongRecaptcha,\n    }\n    return (dispatch) => {\n        if((recaptchaFromStore !== recaptchaFromForm)){\n            showFlashMessage(dispatch, translations.wrongRecaptcha, 'error');\n            return false;\n        } \n        return axios.post(BaseUrl + 'react/forgotpassword', {username, email})\n        .then(response => {\n            if(response.data.data.success === \"true\"){\n                dispatch(reset('forgotPasswordFormRedux'));\n                showFlashMessage(dispatch, translations.forgotPasswordSuccess, 'success');\n            } else {\n                dispatch(clearSensitiveinfo())\n                showFlashMessage(dispatch, response.data.data.message , 'error');\n                setTimeout(function(){ \n                    dispatch(createHideLoginError()) \n             }, 2000);\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport function resetPassword(){\n    const password = store.getState().form.passwordresetform.values.password;// in this case store is available\n    const passwordRepeat = store.getState().form.passwordresetform.values.repeatpassword;// in this case store is available\n    //const recaptchaFromStore = store.getState().loginSignUpReducer.signupCaptchaText;\n    const translations = {\n        newpasswordsavedsucess:  store.getState().settingsReducer.language === 'en' ? messages.en.newpasswordsavedsucess : messages.ru.newpasswordsavedsucess,\n        wrongRecaptcha:  store.getState().settingsReducer.language === 'en' ? messages.en.wrongRecaptcha : messages.ru.wrongRecaptcha,\n    }\n    return (dispatch) => {\n        //if((recaptchaFromStore !== recaptchaFromForm)){\n           // showFlashMessage(dispatch, translations.wrongRecaptcha, 'error');\n            //return false;\n        //} \n        return axios.post(BaseUrl + 'react/resetpassword', {password, passwordRepeat})\n        .then(response => {\n            if(response.data.data.success === \"true\"){\n                dispatch(reset('passwordresetform'));\n                showFlashMessage(dispatch, translations.newpasswordsavedsucess, 'success');\n                dispatch(setRedirectFlagForPasswordResetFunctioDispatch(2));//this is done for redirecting from reset form page to login page upon succesfull password reset\n            } else {\n                dispatch(clearSensitiveinfo())\n                showFlashMessage(dispatch, response.data.data.message , 'error');\n                setTimeout(function(){ \n                    dispatch(createHideLoginError()) \n             }, 2000);\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\n///react/forgotpassword\n\nexport function logoutUser(){\n    const translations = {\n        logoutSuccess:  store.getState().settingsReducer.language === 'en' ? messages.en.logoutSuccess : messages.ru.logoutSuccess,\n    }\n    return(dispatch) => {\n        dispatch(clearSensitiveinfo())\n        showFlashMessage(dispatch, translations.logoutSuccess, 'success');\n    }\n}\n\nexport function resendEmailConfirmation(){\n    const userId = store.getState().loginSignUpReducer.userId;\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    const translations = {\n        emailConfirmationSuccess:  store.getState().settingsReducer.language === 'en' ? messages.en.emailConfirmationSuccess : messages.ru.emailConfirmationSuccess,\n    }\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/resendemailconfirmation/' + userId, {\n            headers: headers\n        }).then((responce)=>{\n            if(responce.data.payload.success === \"true\"){\n                showFlashMessage(dispatch, translations.emailConfirmationSuccess, 'success');\n            } else {\n                alert(\"Network error, please try again later\");\n            };\n        })\n    }\n}\n\nexport function setRecaptchaText(text){\n    return(dispatch) => {\n        dispatch(setRecaptchaTextDispatch(text))\n    }\n}\n\nfunction setRecaptchaTextDispatch(text){\n    return{\n        type: SET_SIGNUP_CAPTCHA_TEXT,\n        recaptchaText: text    \n    }\n}\n\nfunction setRoleId(roleId){\n    return{\n        type: SET_ROLE_ID,\n        roleId: roleId    \n    }\n}\n\nfunction setUserSuspensionReason(reason){\n    return{\n        type: SET_SUSPENSION_REASON,\n        suspensionReason: reason    \n    }\n}\n\nfunction setRedirectFlagForPasswordResetFunctioDispatch(value){\n    return{\n        type: SET_REDIRECT_FLAG_FOR_RESET_PASWORD_FUNCTION,\n        redirectFlagForPasswordResetFunction: value    \n    }\n}\n\nfunction setCookieConsenGiven(value){\n    return{\n        type: SET_COOKIE_CONSENT_OBTAINED,\n        cookieConsenGiven: value    \n    }\n}\n\nfunction setUserName(userName){\n    return{\n        type: SET_USER_NAME,\n        userName: userName    \n    }\n}\n\nfunction setUserId(userId){\n    return{\n        type: SET_USER_ID,\n        userId: userId    \n    }\n}\n\nfunction setJWToken(JWToken){\n    return{\n        type: SET_JWT_TOKEN,\n        JWToken: JWToken    \n    }\n}\n\nfunction createLoginError(data){\n    return{\n        type: LOGIN_ERROR,\n        loginError: data.data.message,\n        loginErrorVisibility: 'visible'\n    }\n}\n\nfunction createHideLoginError(){\n    return{\n        type: LOGIN_ERROR,\n        loginError: '',\n        loginErrorVisibility: 'hidden'\n    }\n}\n\nfunction clearSensitiveinfo(){\n    return{\n        type: CLEAR_SENSITIVE_INFO,\n    }\n}\n\nfunction showFlashMessage(dispatch, message, type){\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n    dispatch(changeFlashMessageVisibility(1));\n    dispatch(changeFlashMessageMessage(message));\n    dispatch(changeFlashMessageType(type));\n    setTimeout(function(){ dispatch(changeFlashMessageVisibility(0)); }, timeout);\n}\n\nfunction changeFlashMessageVisibility(value){\n    return{\n        type: SET_FLASH_MESSAGES_VISIBILITY,\n        flashMessageVisibility: value    \n    } \n}\n\nfunction changeFlashMessageMessage(message){\n    return{\n        type: SET_FLASH_MESSAGES_MESSAGE,\n        flashMessageMessage: message    \n    }\n}\n\nfunction changeFlashMessageType(type){\n    return{\n        type: SET_FLASH_MESSAGES_TYPE,\n        flashMessageType: type    \n    }\n}","import axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport { SET_USERS, CLEAR_SENSITIVE_INFO, SET_FLASH_MESSAGES_VISIBILITY, SET_FLASH_MESSAGES_MESSAGE, SET_FLASH_MESSAGES_TYPE } from '../types';\nimport store from '../index.js';\n\nconst BaseUrl = helpers.UrlSniffer();\n\nexport function loadUsers(){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/users', {\n            headers: headers\n        })\n        .then((response)=>{\n            if(response.data.payload.success === \"true\"){\n                dispatch(setUsers(response.data.payload.users))\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n    }\n}\n\nexport const deleteUser = ({id}) => {\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.delete(BaseUrl + 'react/deleteusers/'+ id,  {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                return axios.get(BaseUrl + 'react/users', {\n                    headers: headers\n                })\n                .then((response)=>{\n                    if(response.data.payload.success === \"true\"){\n                        dispatch(setUsers(response.data.payload.users))\n                        showFlashMessage(dispatch, 'User has been deleted successfully', 'success');\n                    } else {\n                        dispatch(clearSensitiveinfo())\n                    };\n                })\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            dispatch(clearSensitiveinfo());\n        });\n    };\n}\n\nexport const toggleuserconfirm = ({id}) => {\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/toggleuserconfirm/'+ id,  {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                return axios.get(BaseUrl + 'react/users', {\n                    headers: headers\n                })\n                .then((response)=>{\n                    if(response.data.payload.success === \"true\"){\n                        dispatch(setUsers(response.data.payload.users))\n                        showFlashMessage(dispatch, 'User has been confirmed successfully', 'success');\n                    } else {\n                        dispatch(clearSensitiveinfo())\n                    };\n                })\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            dispatch(clearSensitiveinfo());\n        });\n    };\n}\n\nexport const toggleusersuspend = ({id, reason}) => {\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/toggleusersuspended/' +  id + '/' + reason,  {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                return axios.get(BaseUrl + 'react/users', {\n                    headers: headers\n                })\n                .then((response)=>{\n                    if(response.data.payload.success === \"true\"){\n                        dispatch(setUsers(response.data.payload.users))\n                        showFlashMessage(dispatch, 'Users status has been changed successfully', 'success');\n                    } else {\n                        dispatch(clearSensitiveinfo())\n                    };\n                })\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            dispatch(clearSensitiveinfo());\n        });\n    };\n}\n\nfunction setUsers(users){\n    return{\n        type: SET_USERS,\n        users: users    \n    }\n}\n\nfunction clearSensitiveinfo(){\n    return{\n        type: CLEAR_SENSITIVE_INFO,\n    }\n}\n\nfunction showFlashMessage(dispatch, message, type){\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n    dispatch(changeFlashMessageVisibility(1));\n    dispatch(changeFlashMessageMessage(message));\n    dispatch(changeFlashMessageType(type));\n    setTimeout(function(){ dispatch(changeFlashMessageVisibility(0)); }, timeout);\n}\n\nfunction changeFlashMessageVisibility(value){\n    return{\n        type: SET_FLASH_MESSAGES_VISIBILITY,\n        flashMessageVisibility: value    \n    } \n}\n\nfunction changeFlashMessageMessage(message){\n    return{\n        type: SET_FLASH_MESSAGES_MESSAGE,\n        flashMessageMessage: message    \n    }\n}\n\nfunction changeFlashMessageType(type){\n    return{\n        type: SET_FLASH_MESSAGES_TYPE,\n        flashMessageType: type    \n    }\n}","const messages = {\n    en: {\n        subjEditSuccess: \"Subject has been edited successfully\",\n        subjdeleteSuccess: \"Subject has been deleted successfully\",\n        subjAddSuccess: \"Subject has been added successfully\",\n    },\n    ru: {\n        subjEditSuccess: \"Предмет успешно отредактирован\",\n        subjdeleteSuccess: \"Предмет успешно удален\",\n        subjAddSuccess: \"Предмет успешно добавлен\",\n    }\n  };\n\n  export default messages;","import axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport { LOAD_SUBJECTS_ADMIN, LOAD_SUBJECTS_USER, CLEAR_SENSITIVE_INFO, SET_RESULTS_FILTER_ACTIVE_SUBJECTS, \n    SET_FLASH_MESSAGES_VISIBILITY, SET_FLASH_MESSAGES_MESSAGE, SET_FLASH_MESSAGES_TYPE } from '../types';\nimport store from '../index.js';\nimport {reset} from 'redux-form';\nimport messages from '../translations/actions/subjects';\n\nconst BaseUrl = helpers.UrlSniffer();\n\nexport function loadSubjects(){// this is for user, no JWT token needed\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/subjects').then((responce)=>{\n            dispatch(changeSubjectsAdmin(responce.data.payload.subjects))\n        })\n    }\n}\n\nexport const saveSubject = ({id, name}) => {\n    const translations = {\n        subjEditSuccess:  store.getState().settingsReducer.language === 'en' ? messages.en.subjEditSuccess : messages.ru.subjEditSuccess,\n    }\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.post(BaseUrl + 'react/editsubjects', {id, name}, {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                return axios.get(BaseUrl + 'react/subjectsadmin', {\n                    headers: headers\n                }).then((responce)=>{\n                    dispatch(changeSubjectsAdmin(responce.data.payload.subjects))\n                    showFlashMessage(dispatch, translations.subjEditSuccess, 'success');\n                })\n            } else {\n                dispatch(clearSensitiveinfo([]))\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport const deleteSubject = ({id}) => {\n    const translations = {\n        subjdeleteSuccess:  store.getState().settingsReducer.language === 'en' ? messages.en.subjdeleteSuccess : messages.ru.subjdeleteSuccess,\n    }\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.delete(BaseUrl + 'react/deletesubjects/'+ id,  {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                return axios.get(BaseUrl + 'react/subjectsadmin', {\n                    headers: headers\n                }).then((responce)=>{\n                    dispatch(changeSubjectsAdmin(responce.data.payload.subjects))\n                    showFlashMessage(dispatch, translations.subjdeleteSuccess, 'success');\n                })\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            throw(error.message);\n        });\n    };\n}\n\nexport function addSubjectOne(){\n    const translations = {\n        subjAddSuccess:  store.getState().settingsReducer.language === 'en' ? messages.en.subjAddSuccess : messages.ru.subjAddSuccess,\n    }\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const subject = store.getState().form.addSubjectForm.values.subject;// in this case store is available\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.post(BaseUrl + 'react/addsubjects', {subject}, {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                this.loadSubjectsAdmin();\n                dispatch(reset('addSubjectForm'));\n                showFlashMessage(dispatch, translations.subjAddSuccess, 'success');\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport const toggleSubjectActivity = ({id}) => {\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/togglesubjectactivity/'+ id,  {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                return axios.get(BaseUrl + 'react/subjectsadmin', {\n                    headers: headers\n                })\n        .then((responce)=>{\n                    if(response.data.payload.success === \"true\"){\n                        dispatch(changeSubjectsAdmin(responce.data.payload.subjects));\n                        dispatch(changeFlashMessageVisibility(1));\n                        dispatch(changeFlashMessageMessage('Subject activity has been changed successfully'));\n                        dispatch(changeFlashMessageType('success'));\n                        setTimeout(function(){ dispatch(changeFlashMessageVisibility(0)); }, timeout);\n                        return axios.get(BaseUrl + 'react/subjects')\n        .then(responce => {\n                            if(responce.data.payload.success === \"true\"){\n                                let selectedCheckboxes = new Set();// we need this to be able to filter results in advance, this is one of the filters to show results\n                                responce.data.payload.subjects.map((subject) =>selectedCheckboxes.add(subject.name))// we need this to be able to filter.......\n                                dispatch(ResultsFilterActiveSubjects([...selectedCheckboxes]))// we need this to be able to filter results.......\n                                dispatch(changeSubjectsUser(responce.data.payload.subjects))\n                            } \n                        })\n                        .catch(error => {\n                            throw(error);\n                        });\n                    } else {\n                        dispatch(clearSensitiveinfo())\n                    };\n                })\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            throw(error.message);\n        });\n    };\n}\n\nexport function loadSubjectsAdmin(){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/subjectsadmin', {\n            headers: headers\n        })\n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n                dispatch(changeSubjectsAdmin(responce.data.payload.subjects))\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nexport function loadSubjectsUsers(){\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/subjects')\n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n                let selectedCheckboxes = new Set();// we need this to be able to filter results in advance, this is one of the filters to show results\n                responce.data.payload.subjects.map((subject) =>selectedCheckboxes.add(subject.name))// we need this to be able to filter.......\n                dispatch(ResultsFilterActiveSubjects([...selectedCheckboxes]))// we need this to be able to filter results.......\n                dispatch(changeSubjectsUser(responce.data.payload.subjects))\n            } \n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nfunction showFlashMessage(dispatch, message, type){\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n    dispatch(changeFlashMessageVisibility(1));\n    dispatch(changeFlashMessageMessage(message));\n    dispatch(changeFlashMessageType(type));\n    setTimeout(function(){ dispatch(changeFlashMessageVisibility(0)); }, timeout);\n}\n\nfunction changeSubjectsAdmin(subjects){\n    return{\n        type: LOAD_SUBJECTS_ADMIN,\n        subjects: subjects    \n    }\n}\n\nfunction changeSubjectsUser(subjects){\n    return{\n        type: LOAD_SUBJECTS_USER,\n        subjectsUser: subjects    \n    }\n}\n\nfunction clearSensitiveinfo(){\n    return{\n        type: CLEAR_SENSITIVE_INFO,\n    }\n}\n\nfunction changeFlashMessageVisibility(value){\n    return{\n        type: SET_FLASH_MESSAGES_VISIBILITY,\n        flashMessageVisibility: value    \n    } \n}\n\nfunction changeFlashMessageMessage(message){\n    return{\n        type: SET_FLASH_MESSAGES_MESSAGE,\n        flashMessageMessage: message    \n    }\n}\n\nfunction changeFlashMessageType(type){\n    return{\n        type: SET_FLASH_MESSAGES_TYPE,\n        flashMessageType: type    \n    }\n}\n\nfunction ResultsFilterActiveSubjects(subjects){\n    return{\n        type: SET_RESULTS_FILTER_ACTIVE_SUBJECTS,\n        resultsFilterActiveSubjects: subjects    \n    }\n}","import axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport { LOAD_RESULTS, CLEAR_SENSITIVE_INFO, SET_RESULTS_FILTERED, SET_RESULTS_FILTER_ACTIVE_SUBJECTS, \n    SET_RESULTS_FILTER_ITEMS_PAGE, SET_RESULTS_FILTER_NUMBER_OF_PAGINATIONS, SET_RESULTS_FILTER_CURRENT_PAGINATION, SET_RESULTS_FILTER_SORTING_OPTION } from '../types';\nimport store from '../index.js';\n\nconst BaseUrl = helpers.UrlSniffer();\n\nexport function loadResults(){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const itemsPerPage = store.getState().resultsReducer.resultsFilterPerPage;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/results', {\n            headers: headers\n        })\n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n                let resultsFilterBySubjectsAndSort = helpers.FilterBySubjectsAndSort(responce.data.payload.results, store.getState().resultsReducer.resultsFilterActiveSubjects, store.getState().resultsReducer.resultsFilterSortingOption);\n                dispatch(setNumberOfPaginationAction(Math.ceil(resultsFilterBySubjectsAndSort.length/itemsPerPage)));\n                dispatch(setResultsFiltered(helpers.PaginatedResults(resultsFilterBySubjectsAndSort, itemsPerPage, store.getState().resultsReducer.resultsFilterPaginationNumber)))\n                dispatch(changeResults(responce.data.payload.results))\n            } else {\n                dispatch(clearSensitiveinfo([]))\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nexport function setResultsFilterActiveSubjects(subjects){\n    return(dispatch) => {\n        dispatch(ResultsFilterActiveSubjects(subjects))\n    }\n}\n\nexport function setNumberOfPaginationAction(number){\n    return(dispatch) => {\n        dispatch(setNumberOfPagination(number))\n    }\n}\n\nexport function setResultsFiltered(results){\n    return(dispatch) => {\n        dispatch(ResultsFiltered(results))\n    }\n}\n\nexport function setItemsPerPage(items){\n    return(dispatch) => {\n        dispatch(setItemPerPage(items))\n    }\n}\n\nexport function setCurrentPaginationAction(number){\n    return(dispatch) => {\n        dispatch(setCurrentPagination(number))\n    }\n}\n\nexport function setSortingOptionAction(number){\n    return(dispatch) => {\n        dispatch(setSortingOption(number))\n    }\n}\n\nfunction setSortingOption(number){\n    return {\n        type: SET_RESULTS_FILTER_SORTING_OPTION,\n        sortingOption: number \n    }\n}\n\nfunction setCurrentPagination(number){\n    return {\n        type: SET_RESULTS_FILTER_CURRENT_PAGINATION,\n        currentPagination: number \n    }\n}\n\nfunction setNumberOfPagination(number){\n    return {\n        type: SET_RESULTS_FILTER_NUMBER_OF_PAGINATIONS,\n        numberOfPagination: number \n    }\n}\n\nfunction setItemPerPage(items){\n    return {\n        type: SET_RESULTS_FILTER_ITEMS_PAGE,\n        items: items \n    }\n}\n\nfunction ResultsFiltered(ResultsFiltered){\n    return{\n        type: SET_RESULTS_FILTERED,\n        resultsFiltered: ResultsFiltered    \n    }\n}\n\nfunction ResultsFilterActiveSubjects(subjects){\n    return{\n        type: SET_RESULTS_FILTER_ACTIVE_SUBJECTS,\n        resultsFilterActiveSubjects: subjects    \n    }\n}\n\nfunction changeResults(results){\n    return{\n        type: LOAD_RESULTS,\n        results: results    \n    }\n}\n\n\nfunction clearSensitiveinfo(){\n    return{\n        type: CLEAR_SENSITIVE_INFO,\n    }\n}","import axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport { CLEAR_SENSITIVE_INFO, SET_FLASH_MESSAGES_VISIBILITY, SET_FLASH_MESSAGES_MESSAGE, SET_FLASH_MESSAGES_TYPE, SET_LANGUAGE, SET_GLOBAL_SETTINGS, \n    SET_COOKIE_CONSENT_VISIBILITY, SET_COOKIE_CONSENT_OBTAINED } from '../types';\nimport store from '../index.js';\nimport {reset} from 'redux-form';\n\nconst BaseUrl = helpers.UrlSniffer();\n\nexport function setLanguage(lang){\n    return(dispatch) => {\n        dispatch(setLanguageDispatch(lang))\n    }\n}\n\nexport function changePassword(){\n    const password = store.getState().form.changePasswordFormRedux.values.password;// in this case store is available\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.post(BaseUrl + 'react/changepassword', { password }, {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                dispatch(clearSensitiveinfo())\n                dispatch(changeFlashMessageVisibility(1));\n                dispatch(changeFlashMessageMessage('Password has been changed successfully, please login with new credentials'));\n                dispatch(changeFlashMessageType('success'));\n                setTimeout(function(){ dispatch(changeFlashMessageVisibility(0)); }, timeout);\n            } else {\n                alert(\"Network error, please try again later\");\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport function toggleEmailConfirmation(){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/toggleemailconfirmation', {\n            headers: headers\n        }).then((responce)=>{\n            if(responce.data.payload.success === \"true\"){\n                dispatch(changeSettingsAdmin(responce.data.payload.settings));\n                dispatch(changeFlashMessageVisibility(1));\n                dispatch(changeFlashMessageMessage('Email confirmation has been changed successfully'));\n                dispatch(changeFlashMessageType('success'));\n                setTimeout(function(){ dispatch(changeFlashMessageVisibility(0)); }, timeout);\n            } else {\n                alert(\"Network error, please try again later\");\n            };\n        })\n    }\n}\n\nexport function toggleRecaptcha(){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/toggletogglerecaptcha', {\n            headers: headers\n        }).then((responce)=>{\n            if(responce.data.payload.success === \"true\"){\n                dispatch(changeSettingsAdmin(responce.data.payload.settings));\n                dispatch(changeFlashMessageVisibility(1));\n                dispatch(changeFlashMessageMessage('Recaptcha has been changed successfully'));\n                dispatch(changeFlashMessageType('success'));\n                setTimeout(function(){ dispatch(changeFlashMessageVisibility(0)); }, timeout);\n            } else {\n                alert(\"Network error, please try again later\");\n            };\n        })\n    }\n}\n\nexport function loadGlobalSettings(lang){\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/getglobalsettings').then((responce)=>{\n            if(responce.data.payload.success === \"true\"){\n                dispatch(changeSettingsAdmin(responce.data.payload.settings))\n            } else {\n                alert(\"Network error, please try again later\");\n            };\n        })\n    }\n}\n\nexport function setCookieConsentVisibility(visibility){\n    const userId = store.getState().loginSignUpReducer.userId;\n    if(visibility == 0 && userId){\n        const JWT = store.getState().loginSignUpReducer.JWToken;\n        const headers = { 'JWToken': JWT };\n        return (dispatch) => {\n            return axios.get(BaseUrl + 'react/cookieconsent/'+ userId, {\n                headers: headers\n            }).then((responce)=>{\n                if(responce.data.payload.success === \"true\"){\n                    dispatch(setCookieConsenGiven(1));\n                    dispatch(setCookieConsentVisibilityDispatch(0))\n                } else {\n                    alert(\"Network error, please try again later\");\n                };\n            })\n        }\n    } else if(visibility == 0){\n        return (dispatch) => {\n            dispatch(setCookieConsentVisibilityDispatch(0))\n        }\n    }\n\n    return (dispatch) => {\n        dispatch(setCookieConsentVisibilityDispatch(1))\n    }\n}\n\nfunction setLanguageDispatch(lang){\n    return{\n        type: SET_LANGUAGE,\n        lang: lang    \n    }\n}\n\nfunction setCookieConsentVisibilityDispatch(visibility){\n    return{\n        type: SET_COOKIE_CONSENT_VISIBILITY,\n        cookieConsentVisibility: visibility    \n    }\n}\n\nfunction clearSensitiveinfo(){\n    return{\n        type: CLEAR_SENSITIVE_INFO,\n    }\n}\n\nfunction changeFlashMessageVisibility(value){\n    return{\n        type: SET_FLASH_MESSAGES_VISIBILITY,\n        flashMessageVisibility: value    \n    } \n}\n\nfunction changeFlashMessageMessage(message){\n    return{\n        type: SET_FLASH_MESSAGES_MESSAGE,\n        flashMessageMessage: message    \n    }\n}\n\nfunction changeFlashMessageType(type){\n    return{\n        type: SET_FLASH_MESSAGES_TYPE,\n        flashMessageType: type    \n    }\n}\n\nfunction changeSettingsAdmin(settings){\n    return{\n        type: SET_GLOBAL_SETTINGS,\n        settings: settings    \n    }\n}\n\nfunction setCookieConsenGiven(value){\n    return{\n        type: SET_COOKIE_CONSENT_OBTAINED,\n        cookieConsenGiven: value    \n    }\n}","const messages = {\n    en: {\n        questionAddSuccess: \"Question has been added successfully, thanks\",\n    },\n    ru: {\n        questionAddSuccess: \"Вопрос успешно добавлен, спасибо\",\n    }\n  };\n\n  export default messages;","import axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport { SET_CURRENT_CONTRIBUTION_SUBJECT_ID, SET_CURRENT_CONTRIBUTION_SUBJECT_NAME, \n    SET_FLASH_MESSAGES_VISIBILITY, SET_FLASH_MESSAGES_MESSAGE, SET_FLASH_MESSAGES_TYPE, \n    SET_ADMIN_CONTRIBUTION, CLEAR_SENSITIVE_INFO, SET_CONTRIBUTION_CONTENT, SET_REDIRECT_FLAG_FORADMIN, SET_USER_CONTRIBUTION, SET_USER_CONTRIBUTION_ITEM }  from '../types';\nimport {reset} from 'redux-form';\nimport messages from '../translations/actions/contribution';\nimport store from '../index.js';\n\n\nconst BaseUrl = helpers.UrlSniffer();\n\nexport const setCurrentContributionSubjectId = (id) => {\n    return (dispatch) => {\n        dispatch(setCurrSubjectContributionIdRedux(id))\n    };\n}\n\nexport const setCurrentContributionSubjectname = (name) => {\n    return (dispatch) => {\n        dispatch(setCurrSubjectContributionNameRedux(name))\n    };\n}\n\nexport const sentMyContribution = () => {\n    const question = store.getState().form.addContibutionFormRedux.values.question;\n    const firstAnswer = store.getState().form.addContibutionFormRedux.values.firstAnswer;\n    const secondAnswer = store.getState().form.addContibutionFormRedux.values.secondAnswer;\n    const thirdAnswer = store.getState().form.addContibutionFormRedux.values.thirdAnswer;\n    const fourthAnswer = store.getState().form.addContibutionFormRedux.values.fourthAnswer;\n    const subjectId = store.getState().contributionsReducer.contributionSubjectId;\n    \n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n    const translations = {\n        questionAddSuccess:  store.getState().settingsReducer.language === 'en' ? messages.en.questionAddSuccess : messages.ru.questionAddSuccess,\n    }\n    return (dispatch) => {\n        return axios.post(BaseUrl + 'react/addmycontribution', { question, firstAnswer, secondAnswer, thirdAnswer, fourthAnswer, subjectId }, {\n            headers: headers\n        })\n        .then(response => {\n            console.dir(response.data);\n            if(response.data.payload.success === \"true\"){\n                dispatch(reset('addContibutionFormRedux'));\n                dispatch(changeFlashMessageVisibility(1));\n                dispatch(changeFlashMessageMessage(translations.questionAddSuccess));\n                dispatch(changeFlashMessageType('success'));\n                setTimeout(function(){ dispatch(changeFlashMessageVisibility(0)); }, timeout);\n            } else {\n                alert(\"Network error, please try again later\");\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport function saveContributionAdmin() {\n    const question = store.getState().form.editContibutionFormAdminRedux.values.question;\n    const firstAnswer = store.getState().form.editContibutionFormAdminRedux.values.uncorrect0;\n    const secondAnswer = store.getState().form.editContibutionFormAdminRedux.values.uncorrect1;\n    const thirdAnswer = store.getState().form.editContibutionFormAdminRedux.values.uncorrect2;\n    const fourthAnswer = store.getState().form.editContibutionFormAdminRedux.values.answerCorrect;\n    const contibutionid = store.getState().form.editContibutionFormAdminRedux.values.contibutionid;\n    const subjectId = store.getState().form.editContibutionFormAdminRedux.values.subjectId;\n    const userId = store.getState().form.editContibutionFormAdminRedux.values.userId;\n\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n    return (dispatch) => {\n        return axios.post(BaseUrl + 'react/approvecontributionitemadmin', { question, firstAnswer, secondAnswer, thirdAnswer, fourthAnswer, contibutionid, subjectId, userId }, {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                dispatch(reset('editContibutionFormAdminRedux'));\n                dispatch(changeFlashMessageVisibility(1));\n                dispatch(changeFlashMessageMessage('Question has been approved and saved successfully, thanks'));\n                dispatch(changeFlashMessageType('success'));\n                dispatch(setContributionItemAdminResults({}));\n                dispatch(setRedirectFlagForAdminDispatch(2));\n                setTimeout(function(){ dispatch(changeFlashMessageVisibility(0)); }, timeout);\n            } else {\n                alert(\"Network error, please try again later\");\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport function declineContributionAdmin() {\n    const contibutionid = store.getState().form.editContibutionFormAdminRedux.values.contibutionid;\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n    return (dispatch) => {\n        return axios.post(BaseUrl + 'react/declinecontributionitemadmin', { contibutionid }, {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                dispatch(reset('editContibutionFormAdminRedux'));\n                dispatch(changeFlashMessageVisibility(1));\n                dispatch(changeFlashMessageMessage('Question has been declined successfully, thanks'));\n                dispatch(changeFlashMessageType('success'));\n                dispatch(setContributionItemAdminResults({}));\n                dispatch(setRedirectFlagForAdminDispatch(2));\n                setTimeout(function(){ dispatch(changeFlashMessageVisibility(0)); }, timeout);\n            } else {\n                alert(\"Network error, please try again later\");\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport function clearAdminContributionItem(){\n    return (dispatch) => {\n        dispatch(setContributionItemAdminResults({}))\n    };\n}\n\nexport function loadContributionAdmin(){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/getcontributionadmin', {\n            headers: headers\n        })\n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n                dispatch(setContributionAdminResults(responce.data.payload.contibution))\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nexport function loadContributionItemAdmin(id){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/getcontributionitemadmin/' + id, {\n            headers: headers\n        })\n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n                dispatch(setContributionItemAdminResults(responce.data.payload.content))\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nexport function loadContributionItemUser(id){\n    console.log(\"loadContributionItemUser and id = \", id);\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n\n    return (dispatch) => {\n        \n        return axios.get(BaseUrl + 'react/getcontributionitemuser/' + id, {\n            headers: headers\n        })\n       \n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n                dispatch(setContributionItemUserResults(responce.data.payload.content))\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nexport function loadContributionUser(){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/getcontributionuser', {\n            headers: headers\n        })\n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n                dispatch(setContributionUserResults(responce.data.payload.contibution))\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nexport function setRedirectFlagForAdmin(value){\n    return (dispatch) => {\n        dispatch(setRedirectFlagForAdminDispatch(value))\n    }\n} \n\nfunction setContributionUserResults(value){\n    return{\n        type: SET_USER_CONTRIBUTION,\n        userContribution: value    \n    } \n}\n\nfunction setRedirectFlagForAdminDispatch(value){\n    return{\n        type: SET_REDIRECT_FLAG_FORADMIN,\n        redirectFlagForAdmin: value    \n    }  \n}\n\nfunction changeFlashMessageVisibility(value){\n    return{\n        type: SET_FLASH_MESSAGES_VISIBILITY,\n        flashMessageVisibility: value    \n    } \n}\n\nfunction changeFlashMessageMessage(message){\n    return{\n        type: SET_FLASH_MESSAGES_MESSAGE,\n        flashMessageMessage: message    \n    }\n}\n\nfunction changeFlashMessageType(type){\n    return{\n        type: SET_FLASH_MESSAGES_TYPE,\n        flashMessageType: type    \n    }\n}\n\nfunction setCurrSubjectContributionIdRedux(id){\n    return{\n        type: SET_CURRENT_CONTRIBUTION_SUBJECT_ID,\n        subjectId: id    \n    }\n}\n\nfunction setCurrSubjectContributionNameRedux(name){\n    return{\n        type: SET_CURRENT_CONTRIBUTION_SUBJECT_NAME,\n        subjectName: name    \n    }\n}\n\nfunction setContributionAdminResults(contribution){\n    return{\n        type: SET_ADMIN_CONTRIBUTION,\n        contributionAdminResults: contribution    \n    }\n}\n\nfunction clearSensitiveinfo(){\n    return{\n        type: CLEAR_SENSITIVE_INFO,\n    }\n}\n\nfunction setContributionItemAdminResults(content){\n    return{\n        type: SET_CONTRIBUTION_CONTENT,\n        contributionAdminItemResults: content    \n    }\n}\n\nfunction setContributionItemUserResults(content){\n    return{\n        type: SET_USER_CONTRIBUTION_ITEM,\n        contributionUserItemResults: content    \n    }\n}","const messages = {\n    en: {\n      aboutProject: \"About this project\",\n      atTheMomentWeHave: \"At the moment, tests in these subjects are available on our website:\",\n      aboutSystem: \"Our system is designed to help both beginners and experienced web developers assess their level of knowledge and prepare for an interview for the position of a web developer. Testing is free, questions are updated on daily basis and edited. The history of their tests is available to registered users, they can also add their own questions and comments\",\n      thanksforregistration: \"Thank you for registering!\",\n      verifyaddress: \"An email verification link has been sent to the email address specified during registration. Usually it takes up to 3 minutes for system to send email. Just click this link to verify your email address\",\n      haventReceivedLink: \"Haven't received a link to verify your email address? Click the button below and the system will resend the link\",\n      subject: \"Subject\",\n      numberofqiestions: \"Questions qty.\",\n      resendLink: \"Resend link\",\n      hi: \"Hi, \",\n      accountHasBeenSuspended: \"Your account has been suspended. The reason for suspension is: \",\n      pleasedContactAdminToRestoreAccountStatus: \"Please contact site administrator at petro@knowledgedepot.ca to restore account working status\",\n    },\n    ru: {\n      aboutProject: \"О проекте\",\n      atTheMomentWeHave: \"На данный момент на нашем сайте доступны тесты по следующим предметам:\",\n      aboutSystem: 'Hаша система призвана помочь как начинающим, так и опытным веб разработчикам оценить уровень своих знаний и подготовиться к интервью на позицию веб pазработчикa. Тестирование бесплатно, вопросы постоянно пополняются и редактируются. Зарегистрированным пользователям доступна история их тестов, также они могут добавить свои вопросы и комментарии',\n      thanksforregistration: \"Спасибо за регистрацию!\",\n      verifyaddress: \"Ссылка для подтверждения адресa электронной почты была отправлена ​​на email, указанный при регистрации. Обычно система отправляет электронное письмо в течение 3 минут. Просто пройдите по этой ссылке для верификации адреса электронной почты\",\n      haventReceivedLink: \"Не получили ссылку для верификации электронного адреса? Нажмите кнопку внизу и система перешлет вам ссылку еще раз.\",\n      subject: \"Предмет\",\n      numberofqiestions: \"К-во вопросов\",\n      resendLink: \"Переcлaть ссылку\",\n      hi: \"Привет, \",\n      accountHasBeenSuspended: \"Ваша учетная запись была приостановлена. Причина приостановки: \",\n      pleasedContactAdminToRestoreAccountStatus: \"Пожалуйста, свяжитесь с администратором сайта по адресу petro@knowledgedepot.ca, чтобы восстановить рабочий статус аккаунта.\",\n    }\n  };\n\n  export default messages;","import React from 'react';\nimport '../App.css';\nimport TopNavigation from './TopNavigation';\nimport Footer from './Footer';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Home';\nimport {withCookies} from 'react-cookie';\nimport Carousel from 'react-bootstrap/Carousel'\n\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    const { cookies } = props;\n    const mycookie = cookies.get('needToRedirectToLogin') ? cookies.get('needToRedirectToLogin') : \"empty\";\n    const mycookieRedirectToResetPassword = cookies.get('passwordReset') ? cookies.get('passwordReset') : \"empty\";\n\n    this.state = {\n      needToRedirectToLogin: mycookie,\n      needToRedirectToresetPassword: mycookieRedirectToResetPassword,\n    };\n  }\n\n  componentDidMount(){\n    this.props.loadSubjectsUsers();\n    setTimeout(() => { \n      if(this.state.needToRedirectToLogin.length > 5){/// this means that user came from email confirmation link\n        this.props.history.push('/app/login');\n      };\n      if(this.state.needToRedirectToresetPassword.length > 5){/// this means that user came from reset password link\n        this.props.history.push('/app/resetpassword');\n      };\n    }, 500);\n    this.props.setRedirectFlagForPasswordResetFunction(1);// this is preparation for reset password workflow. If there is certain ciookie, page will be redirected to reset password form\n    //and in case of successfull new password establised, we swithch this flag to \"2\" and from reset form user will be redirected to login form\n  }\n\n  resendEmailConfirmation(){\n    this.props.resendEmailConfirmation();\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    const columns = [{\n      dataField: 'name',\n      text: this.props.language === 'en' ? messages.en.subject : messages.ru.subject,\n      sort: true,\n    }, {\n      dataField: 'questions_number',\n      text: this.props.language === 'en' ? messages.en.numberofqiestions : messages.ru.numberofqiestions,\n      sort: true\n    }\n   ];\n    const translations = {\n      buttonText: this.props.language === 'en' ? messages.en.resendLink : messages.ru.resendLink,\n    }\n  return (\n        <div>\n          <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n            <TopNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n            <div className=\"container\" style={(this.state.needToRedirectToLogin.length > 5) ? {display: 'none'} : {}}>\n              <div style={(this.props.roleId === 1 || this.props.roleId === 2 || this.props.roleId === 0) ? {} : {display: 'none'}}>\n                <h2><FormattedMessage id=\"aboutProject\" /></h2>\n                <p>              <FormattedMessage id=\"aboutSystem\" />              </p>\n                <p>                  <FormattedMessage id=\"atTheMomentWeHave\" />                </p>\n                <BootstrapTable keyField='id' data={ this.props.subjectsUser } columns={ columns } />\n              </div>\n              <div style={(this.props.roleId === 3) ? {} : {display: 'none'}}>\n              <br/><br/><br/><br/><br/>\n                <h1>                  <FormattedMessage id=\"thanksforregistration\" />                </h1>\n                <br/><br/>\n                <p>                  <FormattedMessage id=\"verifyaddress\" />                </p>\n                <p>                  <FormattedMessage id=\"haventReceivedLink\" />                </p>\n                <br/><br/>\n                <button type=\"button\" className=\"btn btn-success\" onClick={this.resendEmailConfirmation.bind(this)}>{translations.buttonText}</button>\n              </div>\n              <div style={(this.props.roleId === 4) ? {} : {display: 'none'}}>\n              <br/><br/><br/><br/><br/>\n                <h2>                  <FormattedMessage id=\"hi\" />{this.props.userName}                </h2>\n                <br/><br/>\n                <p>                  <FormattedMessage id=\"accountHasBeenSuspended\" /><b>{this.props.suspensionReason}</b>                </p>\n                <p>                  <FormattedMessage id=\"pleasedContactAdminToRestoreAccountStatus\" />                </p>\n              </div>\n            </div>\n            <Footer logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          </IntlProvider>\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.loginSignUpReducer, ...state.subjectsReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(withCookies(Home));\n","const messages = {\n    en: {\n      timeLeft: \"Time left\",\n      seconds: \"sec\",\n    },\n    ru: {\n      timeLeft: \"Оставшееся время\",\n      seconds: \"сек\",\n    }\n  };\n\n  export default messages;","import React, { Component } from 'react';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/CountDown';\n\nclass Countdown extends Component {\n    constructor() {\n        super();\n        this.state = { time: {}, seconds: 60, widthh: \"200px\", bgcolor: '' };\n        this.timer = 0;\n        this.startTimer = this.startTimer.bind(this);\n        this.countDown = this.countDown.bind(this);\n        this.resetTimer = this.resetTimer.bind(this);\n      }\n\n      secondsToTime(secs){\n        let hours = Math.floor(secs / (60 * 60));\n    \n        let divisor_for_minutes = secs % (60 * 60);\n        let minutes = Math.floor(divisor_for_minutes / 60);\n    \n        let divisor_for_seconds = divisor_for_minutes % 60;\n        let seconds = Math.ceil(divisor_for_seconds);\n    \n        let obj = {\n          \"h\": hours,\n          \"m\": minutes,\n          \"s\": seconds\n        };\n        return obj;\n      }\n\n      resetTimer(){\n        this.setState({\n            seconds: 60,\n          });\n      }\n\n      componentDidMount() {\n        let timeLeftVar = this.secondsToTime(this.state.seconds);\n        this.setState({ time: timeLeftVar });\n      }\n    \n      startTimer() {\n        if (this.timer == 0 && this.state.seconds > 0) {\n          this.timer = setInterval(this.countDown, 1000);\n        }\n      }\n    \n      countDown() {\n        // Remove one second, set state so a re-render happens.\n        let seconds = this.state.seconds - 1;\n        const dynamicWidth = this.state.time.s === 0 ? \"200\" : ((this.state.time.s)/60)*200;\n        this.setState({\n          time: this.secondsToTime(seconds),\n          seconds: seconds,\n          widthh: dynamicWidth + \"px\"\n        });\n        if(seconds >=0 && seconds < 20){\n          this.setState({\n            bgcolor: '#dc3545',\n          });\n        } else if (seconds >=20 && seconds < 40){\n          this.setState({\n            bgcolor: '#ffc107',\n          });\n        } else if (seconds >=40 && seconds < 70){\n          this.setState({\n            bgcolor: '#007bff',\n          });\n        }\n        // Check if we're at zero.\n        if (seconds == 0) { \n          clearInterval(this.timer);\n          this.props.stopFunction();\n        }\n      }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div className=\"countdown\">\n          <table>\n          <tbody>\n              <tr>\n                  <td><p><FormattedMessage id=\"timeLeft\" />: {this.state.time.s} <FormattedMessage id=\"seconds\" /></p></td>\n                  <td><div className = \"countdownindicator\" style={{width : this.state.widthh, backgroundColor: this.state.bgcolor}}></div></td>\n              </tr>\n          </tbody>\n          </table>\n          \n        </div>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default Countdown;","const messages = {\n    en: {\n      tests: \"Tests\",\n      noRegistrationNeeded: \"To use a basic features of our system such as testing, no registration needed.\",\n      ifYouWouldLike: \"If you woul'd like to have an advantage of keeping statistics of your test results or adding your own questions, we'll ask you to register \",\n      herre: \"here.\",\n      firstt: \"First, please select subject you want to start testing:\",\n      select: \"--select--\",\n      currentSubject: \"Current subject\",\n      answeredQuestions: \"Answered\",//\"Answered questions\"\n      question: \"Question\",\n      justClickCorrectAnswer: \"Just click correct answer\",\n      clickToStop: \"Click to stop your test\",\n      allQuestionAreAnswered: \"All questions are answered, test results are\",\n      correctAnswers: \"Correct\",\n      doneThanks: \"Done, thanks\",\n      startYour: \"Start your \",\n      test: \" test\",\n      currentQuestion: \"Current question\",\n      pleaseConfirmTestStop: \"Please confirm test stop\",\n    },\n    ru: {\n      tests: \"Tесты\",\n      noRegistrationNeeded: \"Для использования базовых функций нашей системы, таких как тестирование, регистрация не требуется.\",\n      ifYouWouldLike: \"Если вы хотите вести статистику результатов тестов или добавлять свои собственные вопросы, мы попросим вас зарегистрироваться \",\n      herre: \"здесь.\",\n      firstt: \"Сначала выберите тему, по которой хотите начать тестирование:\",\n      select: \"--выбери--\",\n      currentSubject: \"Текущая тема\",\n      answeredQuestions: \"Отвеченo\",//\n      question: \"Вопрос\",\n      justClickCorrectAnswer: \"Просто нажмите правильный ответ\",\n      clickToStop: \"Нажмите, чтобы остановить тест\",\n      allQuestionAreAnswered: \"На все вопросы даны ответы, результаты тестирования\",\n      correctAnswers: \"Правильнo\",\n      doneThanks: \"Готово, спасибо\",\n      startYour: \"Начни свой \",\n      test: \" тест\",\n      currentQuestion: \"Текущий вопрос\",\n      pleaseConfirmTestStop: \"Подтвердите остановку тестa\",\n    }\n  };\n\n  export default messages;","import styled from 'styled-components'\n\nconst StyledModal = styled.div`\n  position: fixed;\n  z-index: 3000;\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  top: 0;\n  bottom: 0;\n  left: 0;\n\n  > .winWrapper {\n      background-color: white;\n      position: absolute;\n      top: 200px;\n      width: 400px;\n      height: 220px;\n      left: calc(50% - 200px);\n      border-radius: 10px 10px 0 0;\n\n      @media (max-width: 768px) {\n        > .winWrapper{\n          width: 100%;\n        }\n      }\n\n\n      > .modalHeader {\n          width: 100%;\n          background-color: #00549a;\n          height: 40px;\n          color: white;\n          padding: 10px;\n          border-radius: 10px 10px 0 0;\n        }\n\n      > .modalBody {\n        text-align: center;\n\n        > .btn-danger {\n          width: 80px;\n          position: absolute;\n          bottom: 30px;\n          left: 60px;\n        }\n\n        > .bodyText {\n          margin-top: 30px;\n          font-size: 20px;\n          color: #444;\n        }\n\n        > .btn-success {\n          width: 80px;\n          position: absolute;\n          bottom: 30px;\n          right: 60px;\n        }\n\n        > textarea {\n          margin-top: 20px;\n        }\n      }\n    }\n`;\n\nexport default StyledModal","import React from \"react\";\nimport StyledModal from '../styled/StyledModal'\n\n\n\nclass Modal extends React.Component {\n    state = {\n        show: false\n    };\n\n    showModal = e => {\n        this.setState({\n            show: true\n        });\n    };\n\n    hideModal = e => {\n        this.setState({\n            show: false\n        });\n    };\n\n    clickYes = () => {\n        this.setState({\n            show: false\n        });\n        this.props.toExecute();\n    }\n\n    handleChildClick = (e) => {\n        e.stopPropagation();\n    }\n\n    render() {\n\n    if(!this.state.show){\n        return null;\n    }\n\n    return <StyledModal onClick={this.hideModal.bind(this)}>\n                <div className=\"winWrapper\" onClick={this.handleChildClick.bind(this)}>\n                    <div className=\"modalHeader\">\n                        {this.props.titlle}\n                    </div>\n                    <div className=\"modalBody\">\n                        <p className=\"bodyText\">{this.props.message}</p>\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={this.hideModal.bind(this)}>Cancel</button>\n                        <button type=\"button\" className=\"btn btn-success\" onClick={this.clickYes.bind(this)}>Yes</button>\n                    </div>\n                </div>\n            </StyledModal>;\n    }\n}\n\n\nexport default Modal;","import React from 'react'\nimport TopNavigation from './TopNavigation';\nimport Footer from './Footer';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport { Link} from 'react-router-dom';\nimport Countdown from './formelements/Countdown';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Test';\nimport Modal from './Modal';\n\n\nconst ifToDestroyTemporaryQuestions = 1;\nconst resultsPageAddrUser = '/app/resultsn';// if this guy registered, sent him to results page\nconst resultsPageAddrNotUser = '/app';// if this guy not registered, just sent him to home page\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    this.countdown = React.createRef();\n    this.state = {\n      currentSubjectId: '',\n      currentSubjectName: '',\n      currentSubjectId: ''\n    }\n    this.modall = React.createRef();\n  }\n\n  resetAll(){\n    this.props.setCurrentSubjectId('');\n    this.props.setCurrSubjectNameRedux('');\n    this.props.setTestingSessionHash('');\n    this.props.setCurrentQuestion('');\n    this.props.setAnswers([]);\n    this.props.setNumberOfAnswered(0);\n    this.props.setNumberOfCorrect(0);\n    this.props.setIfRemainQuestions(1)\n  }\n\n  componentDidMount() {\n    this.props.loadSubjectsUsers();\n    this.resetAll();\n  }\n\n  componentWillUnmount() {\n    this.props.setCurrentPaginationAction(0);\n    this.props.destroyTemporaryTestingQuestions(this.props.testingSessionHash, ifToDestroyTemporaryQuestions);\n    this.resetAll();\n  }\n\n  onDropdownChange = (event) => {\n    const subjName = this.props.subjectsUser.filter(value => value.id == event.target.value);\n    this.setState({\n      currentSubjectId: event.target.value,\n      currentSubjectName: subjName\n    })\n    this.props.setCurrentSubjectId(event.target.value);\n    if(subjName[0]){\n      this.props.setCurrentSubjectName(subjName[0].name);\n    } else {\n      this.props.setCurrentSubjectName('');\n    }\n  };\n\n  answerClicked = (id) => {\n    this.countdown.current.resetTimer();\n    this.props.processTesting(this.props.testingSessionHash, id, this.props.currentSubjectId);\n    let corrAnswerId = ((this.props.correctAnswerId/2) - 456) / 36;\n    this.setState({\n      currentSubjectId: corrAnswerId,\n    })\n    this.props.setHintsBorderVisibility(1);\n  }\n\n  openModal(){\n      this.modall.current.showModal();\n  }\n\n  startTestingButtonClicked = () =>{\n    this.props.startNewTest(this.state.currentSubjectId, this.props.testingSessionId);\n    this.countdown.current.startTimer();\n  }\n\n  stopTestingButtonClicked = () =>{\n    if(this.props.roleId == 0){// depends is this user registered or not, we redirect him to 'results' or 'home' page\n      this.props.history.push(resultsPageAddrNotUser);\n    } else {\n      this.props.history.push(resultsPageAddrUser);\n    }\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    const translations = {\n      pleaseConfirmTestStop:  this.props.pleaseConfirmTestStop === 'en' ? messages.en.submit : messages.ru.pleaseConfirmTestStop,\n    }\n     return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n          <Modal ref={this.modall} toExecute = {this.stopTestingButtonClicked.bind(this)} message={translations.pleaseConfirmTestStop}/>\n          <div>\n              <TopNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n              <div className=\"container\">\n                <h2><FormattedMessage id=\"tests\" /></h2>\n                <h5 style={this.state.currentSubjectName === '' ? {display: 'none'} :  {}}>\n                  <FormattedMessage id=\"currentSubject\" />: {this.props.currentSubjectName} \n                </h5>\n                {/* introductory block starts */}\n                <div className=\"testsIntroduction\" style={this.props.currentSubjectId === '' ? {} : {display: 'none'} }>\n                    <p>\n                      <FormattedMessage id=\"noRegistrationNeeded\" />\n                    </p>\n                    <p>\n                      <FormattedMessage id=\"ifYouWouldLike\" /><Link to=\"/app/register\"><FormattedMessage id=\"herre\" /></Link>\n                    </p>\n                    <p>\n                      <FormattedMessage id=\"firstt\" />\n                    </p>\n                </div>\n                {/* introductory block ends */}\n\n                {/* select subject block starts */}\n                <select className=\"form-control\" onChange={this.onDropdownChange} style={this.props.testingSessionHash === '' ?  {} : {display: 'none'}}>\n                <FormattedMessage id=\"select\">{(formattedValue)=>(<option key=\"0\" value=\"\">{formattedValue}</option>)}</FormattedMessage>{/* ugly way to get just translated string, but this works */}\n                  {\n                  this.props.subjectsUser.map((value) => \n                  (<option key={value.id} value={value.id}>{value.name}</option>))\n                  }\n                </select>\n                <br/>\n                {/* select subject block ends */}\n\n                {/* start test block starts */}\n                <div style={this.props.currentSubjectId === '' ? {display: 'none'} : {}} >\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={this.startTestingButtonClicked} style={this.props.testingSessionHash === '' ?  {} : {display: 'none'}}>\n                    <FormattedMessage id=\"startYour\" /> {this.props.currentSubjectName} <FormattedMessage id=\"test\" />\n                  </button>\n                </div>\n                {/* start test block ends */}\n\n                {/* main test block starts */}\n                <div style={this.props.currentQuestion === '' ? {display: 'none'} : {}} >\n                  <table>\n                    <tbody>\n                      <tr><td><p><FormattedMessage id=\"answeredQuestions\" />: {this.props.numberOfAnsweredQuestions}</p></td></tr>\n                      <tr><td><Countdown ref={this.countdown} stopFunction = {this.stopTestingButtonClicked} language={this.props.language} /></td></tr>\n                    </tbody>\n                  </table>\n                  <p>\n                    <FormattedMessage id=\"correctAnswers\" />: {this.props.numberOfCorrectQuestions} \n                  </p>\n                  <p>\n                    <FormattedMessage id=\"currentQuestion\" />: \n                  </p>\n                  <p className=\"qusetionBlock\">{this.props.currentQuestion}</p>\n                  <FormattedMessage id=\"justClickCorrectAnswer\" />:<br/>\n                  {this.props.answers.map((value) => \n                  <div className=\"answerBlock\" style={(this.props.toShowTestingHints === \"1\" && this.props.toShowTestHintsBorder === 1) ? this.state.currentSubjectId === value.id ? {outline: '2px solid green'} : {outline: '2px solid red'}  : {}} \n                      key={value.id} data-id={value.id} onClick={() => this.answerClicked(value.id)}>{value.name}\n                  </div>)}<br/>\n                  <button type=\"button\" className=\"btn btn-danger\" onClick={this.openModal.bind(this)} >\n                  <FormattedMessage id=\"clickToStop\" />\n                  </button>\n                </div>\n                {/* main test block ends */}\n\n                {/* results block starts */}\n                <div style={this.props.ifRemainQuestions === 1 ? {display: 'none'} : {}}>\n                  <p><FormattedMessage id=\"allQuestionAreAnswered\" />:</p>\n                  <p><FormattedMessage id=\"answeredQuestions\" />: {this.props.numberOfAnsweredQuestions} </p>  \n                  <p><FormattedMessage id=\"correctAnswers\" />: {this.props.numberOfCorrectQuestions} </p>\n                  <button type=\"button\" className=\"btn btn-success\" onClick={this.stopTestingButtonClicked} ><FormattedMessage id=\"doneThanks\" /></button>\n                </div>\n                {/* results block ends */}\n\n              </div>\n          </div>  \n          <Footer logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n     </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.loginSignUpReducer, ...state.subjectsReducer, ...state.resultsReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(Test);","const messages = {\n    en: {\n        login: \"Login\",\n        clearValues: \"Clear Values\",\n        emailAddress: \"E-mail address\",\n        password: \"Password\",\n        repeatpassword: \"Repeat password\",\n        thanksforregistration: \"Thank you for registering!\",\n        forgotpassword: \"Forgot password?\",\n        senddata: \"Send password\",\n    },\n    ru: {\n        login: \"Авторизоваться\",\n        clearValues: \"Oчистить формy\",\n        emailAddress: \"Адрес электронной почты\",\n        password: \"Пароль\",\n        repeatpassword: \"Повторите пароль\",\n        thanksforregistration: \"Спасибо за регистрацию!\",\n        forgotpassword: \"Забыл пароль?\",\n        senddata: \"Отправить пароль\",\n    }\n  };\n\n  export default messages;","import React, { Component, PropTypes } from 'react';\n\nclass SmartField extends Component {\n    constructor () {\n        super()\n        this.state = {\n            isHidden: false,\n            password: ''\n        }\n    }\n\n    togglePasswordVisibility() {\n        this.setState({\n            isHidden: !this.state.isHidden\n        })\n    }\n\n    render() {\n    const { input, label, toShowPasswordMeter, meta: { touched, error, warning, dirty } } = this.props;\n    let word, color, width = '';  \n    if(input.value.length <= 8){\n        word = \"very weak\"; color = \"Crimson\"; width=\"70px\"\n    } else if (input.value.length <= 10){\n        word = \"weak\"; color=\"DarkOrange\"; width=\"100px\"\n    } else if (input.value.length <= 12){\n        word = \"strong\"; color=\"DarkSeaGreen\"; width=\"130px\"\n    } else {\n        word = \"very strong\"; color=\"Green\"; width=\"160px\"\n    }\n    return (\n        <div>\n        <label>{label}</label>\n        <div>\n            <input {...input} placeholder={label} type='text' style={this.state.isHidden ? {} : {display: 'none'}} />\n            <input {...input} placeholder={label} type='password' style={this.state.isHidden ? {display: 'none'} : {}} />\n            <span onClick={this.togglePasswordVisibility.bind(this)}>&nbsp;&nbsp;&nbsp;<i className=\"fa fa-eye\" aria-hidden=\"true\" style={this.state.isHidden ? {} : {opacity: 0.5}}></i></span>\n            {touched &&  ((error && <span className=\"error\">{error}</span>) || (warning && <span>{warning}</span>))}\n            <div style={{height: \"19px\", padding: 0, marginTop: \"4px\"}}>{(dirty && toShowPasswordMeter) &&  <div style={{width: width, padding: \"0 5px\", backgroundColor: color, color: \"#fff\", fontSize: \"12px\"}}>{word}</div>}</div>\n        </div>\n        </div>\n    );\n    }\n}\n\nexport default SmartField;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/Login';\nimport SmartField from '../formelements/SmartField';\nimport { Link } from 'react-router-dom';\n\n\n\nconst validate = values => {\n    const errors = {}\n    if (!values.email) {\n        errors.email = 'Required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address'\n    }\n\n    if (!values.password) {\n        errors.password = 'Required'\n    } \n\n    return errors\n  }\n\n  const renderField = ({\n    input,\n    label,\n    type,\n    meta: { touched, error, warning }\n  }) => (\n    <div>\n      <label>{label}</label>\n      <div>\n        <input {...input} placeholder={label} type={type} />\n        {touched &&\n          ((error && <span className=\"error\">{error}</span>) ||\n            (warning && <span>{warning}</span>))}\n      </div>\n    </div>\n  )\n\n\nconst LoginForm = props => {\n  const { handleSubmit, pristine, reset, submitting, errorMessage, errorMessageVisibility, language } = props;\n  const translations = {\n    emailAddress:  language === 'en' ? messages.en.emailAddress : messages.ru.emailAddress,\n    password:  language === 'en' ? messages.en.password : messages.ru.password,\n  }\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <div>\n              <table>\n                  <tbody>\n                      <tr><td><Field  name=\"email\"   component={renderField} type=\"text\" label={translations.emailAddress} /></td></tr>\n                      <tr><td><Field  name=\"password\"   component={SmartField} label={translations.password} toShowPasswordMeter={false}/></td></tr>\n                      <tr style={{visibility: `${errorMessageVisibility}`}}><td><span className=\"error\">{errorMessage}</span></td></tr>\n                  </tbody>\n              </table>\n          </div>\n        </div>\n        <Link to=\"/app/forgotpassword\"><FormattedMessage id=\"forgotpassword\" /></Link>\n        <br/><br/>\n        <div>\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={pristine || submitting}><FormattedMessage id=\"login\" /></button>&nbsp;&nbsp;&nbsp;\n          <button type=\"button\" className=\"btn btn-danger\" disabled={pristine || submitting} onClick={reset}><FormattedMessage id=\"clearValues\" /></button>\n        </div>\n      </form>\n    </IntlProvider>\n  );\n};\n\nexport default reduxForm({\n  form: 'loginFormRedux', \n  validate\n})(LoginForm);","import React from 'react'\nimport TopNavigation from './TopNavigation';\nimport Footer from './Footer';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport LoginForm from \"./forms/loginForm\";\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Login';\nimport { withCookies } from 'react-cookie';\n\n\nclass Login extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    const { cookies } = props;\n    const mycookie = cookies.get('needToRedirectToLogin') ? cookies.get('needToRedirectToLogin') : \"empty\"\n    this.state = {\n      email: '',\n      password: '',\n      cook: cookies,\n      needToRedirectToLogin: mycookie,\n    };\n  }\n\n  componentDidMount(){\n    this.state.cook.remove('needToRedirectToLogin');\n    this.state.cook.remove('passwordReset');\n  }\n\n  handleChangeMail = event => {\n    this.setState({ email: event.target.value });\n  }\n\n  handleChangePassword = event => {\n    this.setState({ password: event.target.value });\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n          <TopNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          <div className=\"container\">\n            <h2><FormattedMessage id=\"login\" /></h2>\n            <h3 style={(this.state.needToRedirectToLogin.length > 5) ? {} : {display: 'none'}}><FormattedMessage id=\"thanksforregistration\" /></h3>\n            <LoginForm onSubmit={()=>{this.props.loginUserRedux()}} errorMessage={this.props.loginError} errorMessageVisibility={this.props.loginErrorVisibility} language={this.props.language}/>\n          </div>\n      </div> \n      <Footer logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n     </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.loginSignUpReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(withCookies(Login));","import React, { useRef, useEffect } from 'react'\n\n\nconst Captcha = props => {\n    const canvasRef = useRef(null);\n\n    const draw = ctx => {\n        ctx.fillStyle = '#0f0'\n        ctx.beginPath()\n        ctx.arc(50, 100, 20, 0, 2*Math.PI)\n        ctx.fill()\n      }\n\n    useEffect(() => {\n        const canvas = canvasRef.current\n        const context = canvas.getContext('2d')\n        //Our first draw\n        context.fillStyle = '#fff'\n        context.fillRect(0, 0, context.canvas.width, context.canvas.height)\n        context.fillStyle = '#06f'\n        context.font = \"20px Arial\";\n        context.fillText(props.text, 10, 30);\n\n        context.fillStyle = '#f00'\n        context.font = \"10px Arial\";\n        context.fillText('Click to reload', 100, 35);\n      }, [draw])\n\n    return <canvas ref={canvasRef} {...props} width=\"170px\" height=\"40px\" />\n}\n\n\nexport default Captcha;","const messages = {\n    en: {\n        register: \"Sign up\",\n        clearValues: \"Clear Values\",\n        name: \"Name\",\n        emailAddress: \"E-mail address\",\n        password: \"Password\",\n        confirmPasword: \"Confirm password\",\n        enterTextInBlue: \"Enter text in blue below\"\n\n    },\n    ru: {\n        register: \"3арегистрироваться\",\n        clearValues: \"Oчистить формy\",\n        name: \"Имя\",\n        emailAddress: \"Адрес электронной почты\",\n        password: \"Пароль\",\n        confirmPasword: \"Подтвердить пароль\",\n        enterTextInBlue: \"Введите текст, выделенный синим цветом\"\n    }\n  };\n\n  export default messages;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux'\nimport * as actionCreators from '../../actions/index';\nimport Captcha from '../Captcha';\nimport SmartField from '../formelements/SmartField';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/Signupform';\n\n\nconst validate = (values) => {\n    const errors = {}\n    if (!values.name) {\n      errors.name = 'Required'\n    } else if (values.name.length < 4) {\n      errors.name = 'Must be 4 characters or more'\n    }\n\n    if (!values.email) {\n        errors.email = 'Required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address'\n    }\n\n    if (!values.password) {\n        errors.password = 'Required'\n    } else if (values.password.length < 8) {\n        errors.password = 'Must be 8 characters or more'\n    } else if (values.password.length > 15) {\n        errors.password = 'Must be 15 characters or less'\n    }\n\n    if (!values.passwordretype) {\n        errors.passwordretype = 'Required'\n    } \n\n    if (!values.captcha) {\n        errors.captcha = 'Required'\n    } \n\n    if((values.password && values.passwordretype) && values.password !== values.passwordretype){\n        errors.password = 'password not confirmed';\n        errors.passwordretype = 'password not confirmed'\n    }\n\n    return errors\n  }\n\n  const renderField = ({\n    input,\n    label,\n    type,\n    meta: { touched, error, warning }\n  }) => (\n    <div>\n      <label>{label}</label>\n      <div>\n        <input {...input} placeholder={label} type={type} />\n        {touched &&\n          ((error && <span className=\"error\">{error}</span>) ||\n            (warning && <span>{warning}</span>))}\n      </div>\n    </div>\n  )\n\n\nlet SignupForm = props => {\n  const { handleSubmit, pristine, reset, submitting, errorMessage, recaptchaText, onRecaptcaClick, language } = props;\n  const translations = {\n    name:  language === 'en' ? messages.en.name : messages.ru.name,\n    emailAddress:  language === 'en' ? messages.en.emailAddress : messages.ru.emailAddress,\n    password:  language === 'en' ? messages.en.password : messages.ru.password,\n    emailAddress:  language === 'en' ? messages.en.emailAddress : messages.ru.emailAddress,\n    enterTextInBlue:  language === 'en' ? messages.en.enterTextInBlue : messages.ru.enterTextInBlue,\n    confirmPasword: language === 'en' ? messages.en.confirmPasword : messages.ru.confirmPasword\n  }\n\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <div>\n              <table>\n                  <tbody>\n                      <tr><td><Field  name=\"name\"   component={renderField}  type=\"text\"   label={translations.name} /></td></tr>\n                      <tr><td><Field  name=\"email\"   component={renderField}   type=\"text\"   label={translations.emailAddress} /></td></tr>\n                      <tr><td><Field  name=\"password\"   component={SmartField} label={translations.password} toShowPasswordMeter={true}/></td></tr>\n                      <tr><td><Field  name=\"passwordretype\"   component={SmartField}    label={translations.confirmPasword} toShowPasswordMeter={true}/></td></tr>\n                      <tr><td><Field  name=\"captcha\"   component={renderField}    type=\"text\" label={translations.enterTextInBlue} /></td></tr>\n                      <tr><td><Captcha text={recaptchaText} onClick={onRecaptcaClick}/></td></tr>\n                  </tbody>\n              </table>\n          </div>\n        </div>\n        <div>\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={pristine || submitting}><FormattedMessage id=\"register\" /></button>&nbsp;&nbsp;\n          <button type=\"button\" className=\"btn btn-danger\" disabled={pristine || submitting} onClick={reset}><FormattedMessage id=\"clearValues\" /></button>\n        </div>\n      </form>\n    </IntlProvider>\n  );\n};\n\nSignupForm = reduxForm({\n  form: 'signupForm', \n  validate,\n})(SignupForm);\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.loginSignUpReducer, ...state.settingsReducer\n  };\n}\n\nSignupForm = connect(\n  state => ({\n    initialValues: {captcha: ''} \n  })\n)(SignupForm)\n\nexport default connect(mapStateToProps, actionCreators)(SignupForm);","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux'\nimport * as actionCreators from '../../actions/index';\nimport Captcha from '../Captcha';\nimport SmartField from '../formelements/SmartField';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/Signupform';\n\n\nconst validate = (values) => {\n    const errors = {}\n    if (!values.name) {\n      errors.name = 'Required'\n    } else if (values.name.length < 4) {\n      errors.name = 'Must be 4 characters or more'\n    }\n\n    if (!values.email) {\n        errors.email = 'Required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address'\n    }\n\n    if (!values.password) {\n        errors.password = 'Required'\n    } else if (values.password.length < 8) {\n        errors.password = 'Must be 8 characters or more'\n    } else if (values.password.length > 15) {\n        errors.password = 'Must be 15 characters or less'\n    }\n\n    if (!values.passwordretype) {\n        errors.passwordretype = 'Required'\n    } \n\n    if((values.password && values.passwordretype) && values.password !== values.passwordretype){\n        errors.password = 'password not confirmed';\n        errors.passwordretype = 'password not confirmed'\n    }\n\n    return errors\n  }\n\n  const renderField = ({\n    input,\n    label,\n    type,\n    meta: { touched, error, warning }\n  }) => (\n    <div>\n      <label>{label}</label>\n      <div>\n        <input {...input} placeholder={label} type={type} />\n        {touched &&\n          ((error && <span className=\"error\">{error}</span>) ||\n            (warning && <span>{warning}</span>))}\n      </div>\n    </div>\n  )\n\n\nlet SignupFormNoRecaptcha = props => {\n  const { handleSubmit, pristine, reset, submitting, errorMessage, onRecaptcaClick, language } = props;\n  const translations = {\n    name:  language === 'en' ? messages.en.name : messages.ru.name,\n    emailAddress:  language === 'en' ? messages.en.emailAddress : messages.ru.emailAddress,\n    password:  language === 'en' ? messages.en.password : messages.ru.password,\n    emailAddress:  language === 'en' ? messages.en.emailAddress : messages.ru.emailAddress,\n    enterTextInBlue:  language === 'en' ? messages.en.enterTextInBlue : messages.ru.enterTextInBlue,\n    confirmPasword: language === 'en' ? messages.en.confirmPasword : messages.ru.confirmPasword\n  }\n\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <div>\n              <table>\n                  <tbody>\n                      <tr><td><Field  name=\"name\"   component={renderField}  type=\"text\"   label={translations.name} /></td></tr>\n                      <tr><td><Field  name=\"email\"   component={renderField}   type=\"text\"   label={translations.emailAddress} /></td></tr>\n                      <tr><td><Field  name=\"password\"   component={SmartField} label={translations.password} toShowPasswordMeter={true}/></td></tr>\n                      <tr><td><Field  name=\"passwordretype\"   component={SmartField}    label={translations.confirmPasword} toShowPasswordMeter={true}/></td></tr>\n                  </tbody>\n              </table>\n          </div>\n        </div>\n        <div>\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={pristine || submitting}><FormattedMessage id=\"register\" /></button>&nbsp;&nbsp;\n          <button type=\"button\" className=\"btn btn-danger\" disabled={pristine || submitting} onClick={reset}><FormattedMessage id=\"clearValues\" /></button>\n        </div>\n      </form>\n    </IntlProvider>\n  );\n};\n\nSignupFormNoRecaptcha = reduxForm({\n  form: 'signupForm', \n  validate,\n})(SignupFormNoRecaptcha);\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.loginSignUpReducer, ...state.settingsReducer\n  };\n}\n\nSignupFormNoRecaptcha = connect(\n  state => ({\n    initialValues: {captcha: ''} \n  })\n)(SignupFormNoRecaptcha)\n\nexport default connect(mapStateToProps, actionCreators)(SignupFormNoRecaptcha);","const messages = {\n    en: {\n        register: \"Sign up\",\n    },\n    ru: {\n        register: \"3арегистрироваться\",\n    }\n  };\n\n  export default messages;","import React from 'react'\nimport TopNavigation from './TopNavigation';\nimport Footer from './Footer';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport SignupForm from \"./forms/signupForm\";\nimport SignupFormNoRecaptcha from \"./forms/signupFormNoRecaptcha\";\nimport helpers from '../helpers/Helpers';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Signup';\n\n\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    this.recaptchaClick.bind(this);\n    this.state={\n      recaptcatext: '',\n    }\n  }\n\n  componentDidMount = () => {\n    this.recaptchaClick();\n    this.props.loadGlobalSettings();\n  }\n\n  recaptchaClick = () =>{\n    let recaptchaText = helpers.makeRandom();\n    this.props.setRecaptchaText(recaptchaText);\n    this.setState({\n      recaptcatext: recaptchaText\n    })\n  }\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n            <TopNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n            <div className=\"container\">\n              <h2><FormattedMessage id=\"register\" /></h2>\n              {this.props.needToShowRecaptcha == 1 && \n              <SignupForm onSubmit={()=>{this.props.signup()}} \n              errorMessage={this.props.loginError} \n              errorMessageVisibility={this.props.loginErrorVisibility} \n              recaptchaText={this.state.recaptcatext} \n              onRecaptcaClick={this.recaptchaClick}\n              language={this.props.language}\n              />\n              }\n\n              {this.props.needToShowRecaptcha == 0 && \n              <SignupFormNoRecaptcha onSubmit={()=>{this.props.signup()}} \n              errorMessage={this.props.loginError} \n              errorMessageVisibility={this.props.loginErrorVisibility} \n              onRecaptcaClick={this.recaptchaClick}\n              language={this.props.language}\n              />\n              }\n            </div>\n        </div> \n        <Footer logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n     </IntlProvider>  \n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.loginSignUpReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(Signup);","const messages = {\n  en: {\n    subject: \"Subject\",\n    active: \"Active\",\n    questionNumber: \"Questions number\",\n    edit: \"Edit\",\n    delete: \"Delete\",\n    save: \"Save\",\n    hidden: \"hidden\",\n    active1: \"active\",\n\n  },\n  ru: {\n      subject: \"Subject\",\n      active: \"Активный\",\n      questionNumber: \"Количество вопросов\",\n      edit: \"Править\",\n      delete: \"Удалить\",\n      save: \"Сохранить\",\n      hidden: \"скрытый\",\n      active1: \"aктивный\",\n  }\n};\n\nexport default messages;","import React from \"react\";\nimport StyledModal from '../styled/StyledModal'\n\n\n\nclass Prompt extends React.Component {\n    state = {\n        show: false,\n        value: ''\n    };\n\n    showModal = e => {\n        this.setState({\n            show: true\n        });\n    };\n\n    onChange = e =>{\n        this.setState({\n            value: e.target.value\n        });\n    }\n\n    hideModal = e => {\n        this.setState({\n            show: false\n        });\n    };\n\n    clickYes = () => {\n        this.setState({\n            show: false\n        });\n        this.props.toExecute();\n    }\n\n    handleChildClick = (e) => {\n        e.stopPropagation();\n    }\n\n    render() {\n\n    if(!this.state.show){\n        return null;\n    }\n\n    return <StyledModal onClick={this.hideModal.bind(this)}>\n                <div className=\"winWrapper\" onClick={this.handleChildClick.bind(this)}>\n                    <div className=\"modalHeader\">\n                        {this.props.titlle}\n                    </div>\n                    <div className=\"modalBody\">\n                        <textarea id=\"w3review\" name=\"w3review\" rows=\"2\" cols=\"30\" onChange={this.onChange.bind(this)} placeholder=\"required\"></textarea>\n                        <p className=\"bodyText\">{this.props.message}</p>\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={this.hideModal.bind(this)}>Cancel</button>\n                        <button type=\"button\" className=\"btn btn-success\" onClick={this.clickYes.bind(this)} disabled={this.state.value.length == 0}>Yes</button>\n                    </div>\n                </div>\n            </StyledModal>;\n    }\n}\n\n\nexport default Prompt;","import React from 'react';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/EditSubjRow';\nimport Modal from '../Modal';\nimport Prompt from '../Prompt';\n\n\n\nexport default class EditUserRow extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.user.user_id,\n            status: this.props.user.status,\n        }\n        this.modall = React.createRef();\n        this.promptt = React.createRef();\n    }\n   \n    openModal(){\n        this.modall.current.showModal();\n    }\n\n    openPromptt(){\n       if(this.props.user.status == 'user-confirmed'){\n            this.promptt.current.showModal();\n       } else {\n            this.props.toggleusersuspend({id: this.state.id, reason: 'none'});\n       };\n    }\n\n    toggleSubjectActivity(){\n        this.props.toggleSubjectActivity({id: this.state.id});\n    }\n\n    deleteUser(){\n        this.props.deleteUser({id: this.state.id});\n    }\n\n    toggleuserconfirm(){\n        this.props.toggleuserconfirm({id: this.state.id});\n    }\n\n    toggleusersuspend(){\n        this.props.toggleusersuspend({id: this.state.id, reason: this.promptt.current.state.value});\n    }\n\n    render(props) {\n        const { name, email, status, resultsNumber, createdAt, id, suspension_reason } = this.props.user;\n        const { language } = this.props;\n      return  (\n        <>\n            <Modal ref={this.modall} toExecute = {this.deleteUser.bind(this)} message={'Please confirm user deletion'} titlle={'Please confirm'}/>\n            <Prompt ref={this.promptt} toExecute = {this.toggleusersuspend.bind(this)} message={''} titlle={'Suspension reason'}/>\n            <IntlProvider locale={language} messages={messages[language]}>\n                <tr>\n                    <td > { name } </td>\n                    <td > { email } </td>\n                    <td >\n                        { createdAt }\n                    </td>\n                    <td  style={status === 'user-confirmed' ? {backgroundColor: '#bce8bc'} : status === 'user-suspended' ? {backgroundColor: '#efc9c9'} : {backgroundColor: '#f3edaa'}}>\n                        { status }\n                    </td>\n                    <td>\n                        { resultsNumber }\n                    </td>\n                    <td>\n                        <button className=\"btn btn-danger btn-sm\" onClick={this.openModal.bind(this)}  disabled={resultsNumber > 0 || status === 'user-confirmed' || status === 'user-suspended'}>Delete</button>\n                    </td>\n                    <td>\n                        <button className=\"btn btn-success btn-sm\" onClick={this.toggleuserconfirm.bind(this)} disabled={status === 'user-confirmed' || status === 'user-suspended'}>Confirm</button>\n                    </td>\n                    <td>\n                        <button className=\"btn btn-warning btn-sm\"  onClick={this.openPromptt.bind(this)} disabled={status === 'user-unconfirmed'}>\n                            {status === 'user-suspended' ? 'Activate' : 'Suspend'}\n                        </button>\n                    </td>\n                    <td>\n                        <div>{suspension_reason}</div>\n                    </td>\n                </tr>\n            </IntlProvider>\n        </>\n    );\n    }\n  }","const messages = {\n    en: {\n      subject: \"Subject\",\n      active: \"Active\",\n      questionNumber: \"Questions number\",\n      edit: \"Edit\",\n      delete: \"Delete\",\n    },\n    ru: {\n        subject: \"Предмет\",\n        active: \"Активный\",\n        questionNumber: \"Количество вопросов\",\n        edit: \"Править\",\n        delete: \"Удалить\",\n    }\n  };\n\n  export default messages;","import React from 'react';\nimport EditUserRow from './EditUsertRow';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/EditSubjectForm';\n\nconst EditSubjectForm = props => {\n  const { users, toggleSubjectActivity, language, deleteUser, toggleuserconfirm, toggleusersuspend } = props;\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Name</th>{/* <FormattedMessage id=\"name\" /> */}\n              <th>Email</th>{/* <FormattedMessage id=\"email\" /> */}\n              <th>Created At</th>{/*? <FormattedMessage id=\"createdAt\" /> */}\n              <th>Status</th>{/* <FormattedMessage id=\"status\" /> */}\n              <th>Tests</th>{/* <FormattedMessage id=\"testResults\" /> */}\n              <th>Delete User</th>{/* <FormattedMessage id=\"testResults\" /> */}\n              <th>Confirm User</th>{/* <FormattedMessage id=\"testResults\" /> */}\n              <th>Suspend User</th>{/* <FormattedMessage id=\"testResults\" /> */}\n              <th>Reason</th>{/* <FormattedMessage id=\"testResults\" /> */}\n            </tr>\n          </thead>\n          <tbody>\n              {users.map(user => <EditUserRow \n                user={user} \n                toggleSubjectActivity = {toggleSubjectActivity}\n                key={user.user_id}\n                language={language}\n                deleteUser={deleteUser}\n                toggleuserconfirm={toggleuserconfirm}\n                toggleusersuspend={toggleusersuspend}\n              /> )}\n          </tbody>\n      </table>\n    </IntlProvider>\n  );\n};\n\nexport default EditSubjectForm;","const messages = {\n    en: {\n      users: \"Users\",\n    },\n    ru: {\n      users: \"Пользователи\",\n    }\n  };\n\n  export default messages;","import styled from 'styled-components'\n\nconst StyledAccordeon = styled.div`\n  .accordion__button{\n    background-color: #00549a;\n    color: #fff;\n    cursor: pointer;\n    padding: 10px;\n    width: 100%;\n    text-align: left;\n    border: none;\n  }\n`;\n\nexport default StyledAccordeon","import React from 'react';\nimport '../App.css';\nimport TopNavigation from './TopNavigation';\nimport Footer from './Footer';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport EditUsersForm from \"./forms/EditUsersForm\";\nimport messages from '../translations/Users';\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from 'react-accessible-accordion';\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport StyledAccordeon from '../styled/StyledAccordeon'\n\nclass Users extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n  }\n\n  componentDidMount(){\n    this.props.loadUsers(); \n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n      <div>\n          <TopNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          <div className=\"container\">\n            <h2><FormattedMessage id=\"users\" /></h2>\n            <br/><br/>\n            <StyledAccordeon>\n                <Accordion allowMultipleExpanded=\"true\" allowZeroExpanded=\"true\">\n                  <AccordionItem>\n                      <AccordionItemHeading>\n                          <AccordionItemButton>\n                            Search for users\n                          </AccordionItemButton>\n                      </AccordionItemHeading>\n                      <AccordionItemPanel>\n                          ghjkghjghjkgh ghjhgjkghj\n                      </AccordionItemPanel>\n                  </AccordionItem>\n              </Accordion>\n            </StyledAccordeon><br/><br/>\n            <EditUsersForm \n              users={ this.props.users } \n              deleteUser={this.props.deleteUser}  \n              toggleuserconfirm={this.props.toggleuserconfirm} \n              toggleusersuspend={this.props.toggleusersuspend} \n              language={this.props.language}\n             />\n          </div>\n      </div> \n      <Footer logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n     </IntlProvider>  \n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.usersReducer, ...state.loginSignUpReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(Users);\n","import React, { Component, PropTypes } from 'react';\n\nclass Checkbox extends Component {\n  state = {\n    isChecked: true,\n  }\n\n  toggleCheckboxChange = () => {\n    const { handleCheckboxChange, label } = this.props;\n\n    this.setState(({ isChecked }) => (\n      {\n        isChecked: !isChecked,\n      }\n    ));\n\n    handleCheckboxChange(label);\n  }\n\n  render() {\n    const { label } = this.props;\n    const { isChecked } = this.state;\n\n    return (\n      <div className=\"checkbox\">\n        <label>\n          <input\n                type=\"checkbox\"\n                value={label}\n                checked={isChecked}\n                onChange={this.toggleCheckboxChange}\n            />&nbsp;\n          {label}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;","import React, { Component } from 'react';\n\nclass Select extends Component {\n  render() {\n    const { options, onChange, defaultt } = this.props;\n    return (\n    <div className=\"select\">\n        <select className=\"form-control\" onChange={onChange}   value={defaultt}>\n            { options.map((value) => ( <option key={value.id} value={value.id}>{value.value}</option>)) }\n        </select>\n    </div>\n    );\n  }\n}\n\nexport default Select;","import styled from 'styled-components'\n\nconst StyledPagination = styled.div`\nmargin: 20px 0;\n > div{\n     width: 30px;\n     height: 30px;\n     text-align: center;\n     padding-top: 4px;\n     display: inline-block;\n     background-color: #C2CEDF;\n     margin: 0 5px 5px 0;\n }\n\n > div.active {\n    background-color: #C2FFFF;\n}\n`;\n\nexport default StyledPagination","import React, { Component } from 'react';\nimport StyledPagination from '../../styled/StyledPagination'\n\n\nclass Pagination extends Component {\n  render() {\n    const { paginationQuantity, paginationNumber, paginationClick } = this.props;\n    return (\n        <StyledPagination>\n            <ul className=\"pagination pagination-sm flex-wrap\">\n              <li className=\"page-item\" style={(paginationNumber === 0) ? {opacity: '.2'} : {}} onClick={() => paginationClick(0)}>\n                <a className=\"page-link\" href=\"#\" disabled>&lt;&lt;</a>\n              </li>\n              <li className=\"page-item\" style={(paginationNumber === 0) ? {opacity: '.2'} : {}} onClick={() => paginationClick(paginationNumber-1)}>\n                <a className=\"page-link\" href=\"#\">&lt;</a>\n              </li>\n              <li className=\"page-item\" style={(paginationNumber > 2) ? {} : {display: \"none\"}}>\n                <a className=\"page-link\" href=\"#\">..</a>\n              </li>\n            {Array(paginationQuantity).fill().map((_, i) =>(<> \n              <li className={(paginationNumber === i ? \"page-item active\" : \"page-item\")} onClick={() => paginationClick(i)} key={i} style={(paginationNumber < (i-2) || paginationNumber > (i+2)) ? {display: 'none'} : {}}>\n                <a className=\"page-link\" href=\"#\">{i + 1}</a> \n              </li></>))}\n              <li className=\"page-item\" style={(paginationNumber < (paginationQuantity-3)) ? {} : {display: \"none\"}}>\n                <a className=\"page-link\" href=\"#\">..</a>\n              </li>\n              <li className=\"page-item\" style={(paginationNumber === (paginationQuantity - 1)) ? {opacity: '.2'} : {}} onClick={() => paginationClick(paginationNumber+1)}>\n                <a className=\"page-link\">&gt;</a>\n              </li>\n              <li className=\"page-item\" style={(paginationNumber === (paginationQuantity - 1)) ? {opacity: '.2'} : {}} onClick={() => paginationClick(paginationQuantity - 1)}>\n                <a className=\"page-link\">&gt;&gt;</a>\n              </li>\n            </ul>\n        </StyledPagination>\n    );\n  }\n}\n\nexport default Pagination;","const messages = {\n    en: {\n      results: \"Results\",\n      belowAreResults: \"Below are your tests results\",\n      subjects: \"Subjects\",\n      subject: \"Subject\",\n      filterResults: \"Filter results\",\n      itemsPerPage: \"Items qty.\",\n      sortingOptons: \"Sort\",\n      score: \"Score\",\n      answeredQuestions: \"Answered\",\n      createdAt: \"Date\",\n      testDateAsc: \"Testing date asc\",\n      testDateDesc: \"Testing date dec\",\n      resultsAsc: \"Testing results asc\",\n      resultsDesc: \"Testing results desc\",\n      subjAsc: \"Subjects asc\",\n      subjsDesc: \"Subjects desc\",\n\n    },\n    ru: {\n      results: \"Pезультаты\",\n      belowAreResults: \"Pезультаты ваших тестов\",\n      subjects: \"Предметы\",\n      subject: \"Предмет\",\n      filterResults: \"Фильтровать результаты\",\n      itemsPerPage: \"Pез. на страницу\",\n      sortingOptons: \"Сорт\",\n      score: \"Бaлл\",\n      answeredQuestions: \"Bопросов\",\n      createdAt: \"Дата\",\n      testDateAsc: \"Дата тестиров. возр.\",\n      testDateDesc: \"Дата тестиров. убыв.\",\n      resultsAsc: \"Результаты возр.\",\n      resultsDesc: \"Результаты убыв.\",\n      subjAsc: \"Предметы возр.\",\n      subjsDesc: \"Предметы убыв.\",\n    }\n  };\n\n  export default messages;","import React from 'react'\nimport TopNavigation from './TopNavigation';\nimport Footer from './Footer';\nimport {connect} from 'react-redux';\nimport Checkbox from './formelements/Checkbox';\nimport Select from './formelements/Select';\nimport Pagination from './formelements/Pagination';\nimport * as actionCreators from '../actions/index';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport helpers from '../helpers/Helpers';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Resultsn';\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from 'react-accessible-accordion';\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport StyledAccordeon from '../styled/StyledAccordeon'\n\nclass Resultsn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    this.state = {\n      resultsPerPage: [\n          {id: 5, value: \"5\"},\n          {id: 10, value: \"10\"},\n          {id: 20, value: \"20\"},\n          {id: 50, value: \"50\"},\n      ],\n    }\n  }\n\n  componentDidMount() {\n    this.props.loadSubjectsUsers();\n    this.props.loadResults();\n    this.selectedCheckboxes = new Set();\n    this.props.subjectsUser.map((subject) =>this.selectedCheckboxes.add(subject.name))\n  }\n\n  componentWillUnmount() {\n    this.props.setCurrentPaginationAction(0);\n  }\n\n  filterresults = (initialResults, activeSubjects, resultsFilterPerPage, resultsFilterPaginationNumber, sortingOption) => {\n    let filteredBySubjectsAndSort = helpers.FilterBySubjectsAndSort(initialResults, activeSubjects, sortingOption);\n    this.props.setNumberOfPaginationAction(Math.ceil(filteredBySubjectsAndSort.length/resultsFilterPerPage));\n    return helpers.PaginatedResults(filteredBySubjectsAndSort, resultsFilterPerPage, resultsFilterPaginationNumber);\n  }\n\n  toggleCheckbox = (label) => {\n    if (this.selectedCheckboxes.has(label)) {  this.selectedCheckboxes.delete(label);  } else {  this.selectedCheckboxes.add(label); }\n    let resultsFiltered = this.filterresults(this.props.results, [...this.selectedCheckboxes], this.props.resultsFilterPerPage, 0, this.props.resultsFilterSortingOption);\n    this.props.setResultsFiltered(resultsFiltered);\n    this.props.setResultsFilterActiveSubjects([...this.selectedCheckboxes]);\n    this.props.setCurrentPaginationAction(0);\n  }\n\n  createCheckbox = subject => (\n    <Checkbox label={subject.name} handleCheckboxChange={this.toggleCheckbox.bind(this)} key={subject.id} />\n  )\n\n  createCheckboxes = () => (\n    this.props.subjectsUser.map(this.createCheckbox)\n  )\n\n  onDropdownChangeItemsPerPage = (event) => {\n    let resultsFiltered = this.filterresults(this.props.results, [...this.selectedCheckboxes], event.target.value, 0, this.props.resultsFilterSortingOption);\n    this.props.setResultsFiltered(resultsFiltered);\n    this.props.setItemsPerPage(event.target.value);\n    this.props.setCurrentPaginationAction(0);\n  };\n\n  onDropdownChangeSortingOptions = (event) => {\n    let resultsFiltered = this.filterresults(this.props.results, [...this.selectedCheckboxes], this.props.resultsFilterPerPage, 0, event.target.value);\n    this.props.setResultsFiltered(resultsFiltered);\n    this.props.setCurrentPaginationAction(0);\n    this.props.setSortingOptionAction(event.target.value);\n  };\n\n  paginationClick = (i) => {\n    let resultsFiltered = this.filterresults(this.props.results, [...this.selectedCheckboxes], this.props.resultsFilterPerPage, i, this.props.resultsFilterSortingOption);\n    this.props.setResultsFiltered(resultsFiltered);\n    this.props.setCurrentPaginationAction(i);\n  }\n\n  toggleLanguage = (lang) => {\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    const columns = [{\n      dataField: 'quality',\n      text:  this.props.language === 'en' ? messages.en.score : messages.ru.score,\n      sort: false\n    }, {\n      dataField: 'answered_questions_number',\n      text: this.props.language === 'en' ? messages.en.answeredQuestions : messages.ru.answeredQuestions,\n      sort: false\n    },{\n      dataField: 'createdAt',\n      text: this.props.language === 'en' ? messages.en.createdAt : messages.ru.createdAt,\n      sort: false\n    }, {\n      dataField: 'subjectName',\n      text: this.props.language === 'en' ? messages.en.subject : messages.ru.subject,\n      sort: false\n    }\n    ]\n\n    const sortOptions = \n    [\n      {id: 1, value: this.props.language === 'en' ? messages.en.testDateAsc : messages.ru.testDateAsc },\n      {id: 2, value: this.props.language === 'en' ? messages.en.testDateDesc : messages.ru.testDateDesc },\n      {id: 3, value: this.props.language === 'en' ? messages.en.resultsAsc : messages.ru.resultsAsc },\n      {id: 4, value: this.props.language === 'en' ? messages.en.resultsDesc : messages.ru.resultsDesc },\n      {id: 5, value: this.props.language === 'en' ? messages.en.subjAsc : messages.ru.subjAsc },\n      {id: 6, value: this.props.language === 'en' ? messages.en.subjsDesc : messages.ru.subjsDesc },\n    ]\n\n     return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n      <div>\n        <TopNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n        <div className=\"container\">\n          <h2><FormattedMessage id=\"results\" /></h2>\n          <StyledAccordeon>\n                <Accordion allowMultipleExpanded=\"true\" allowZeroExpanded=\"true\">\n                  <AccordionItem>\n                      <AccordionItemHeading>\n                          <AccordionItemButton>\n                            <FormattedMessage id=\"filterResults\" />\n                          </AccordionItemButton>\n                      </AccordionItemHeading>\n                      <AccordionItemPanel>\n                        <table className=\"resultsFilter\">\n                          <tbody>\n                            <tr>\n                              <th><FormattedMessage id=\"subjects\" />:</th>\n                              <th><FormattedMessage id=\"itemsPerPage\" />:</th>\n                              <th><FormattedMessage id=\"sortingOptons\" />:</th>\n                            </tr>\n                            <tr>\n                              <td>{this.createCheckboxes()}</td>\n                              <td><Select options={this.state.resultsPerPage} onChange={this.onDropdownChangeItemsPerPage} defaultt={this.props.resultsFilterPerPage}/></td>\n                              <td><Select options={ sortOptions } onChange={this.onDropdownChangeSortingOptions} defaultt={this.props.resultsFilterSortingOption}/></td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </AccordionItemPanel>\n                  </AccordionItem>\n              </Accordion>\n            </StyledAccordeon>\n\n          <Pagination paginationQuantity={this.props.resultsFilterPaginationQuantity} paginationNumber={this.props.resultsFilterPaginationNumber} paginationClick={this.paginationClick}/>\n          <BootstrapTable keyField='id' data={ this.props.resultsFiltered } columns={ columns } />\n          <Pagination paginationQuantity={this.props.resultsFilterPaginationQuantity} paginationNumber={this.props.resultsFilterPaginationNumber} paginationClick={this.paginationClick}/>\n        </div>\n      </div>\n      <Footer logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n     </IntlProvider>   \n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.loginSignUpReducer, ...state.resultsReducer, ...state.subjectsReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(Resultsn);","const messages = {\n  en: {\n    subject: \"Subject\",\n    active: \"Active\",\n    clearVal: \"Clear form\",\n    edit: \"Edit\",\n    delete: \"Delete\",\n    save: \"Save\",\n    submit: \"Submit\",\n  },\n  ru: {\n      subject: \"Предмет\",\n      active: \"Активный\",\n      clearVal: \"Очистить\",\n      edit: \"Править\",\n      delete: \"Удалить\",\n      save: \"Сохранить\",\n      submit: \"Oтослать\",\n  }\n};\n\nexport default messages;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/AddSubjForm';\n\nconst AddSubjectForm = props => {\n  const { handleSubmit, pristine, reset, submitting, language } = props;\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <div>\n          <FormattedMessage id=\"subject\">\n            {(formattedValue)=>(<Field name=\"subject\" component=\"input\" type=\"text\" placeholder={formattedValue}/>)}\n          </FormattedMessage>\n          </div>\n        </div>\n        <div>\n          <button type=\"submit\" disabled={pristine || submitting}><FormattedMessage id=\"submit\" /></button>\n          <button type=\"button\" disabled={pristine || submitting} onClick={reset}><FormattedMessage id=\"clearVal\" /></button>\n        </div>\n      </form>\n    </IntlProvider>\n  );\n};\n\nexport default reduxForm({\n  form: 'addSubjectForm', // a unique identifier for this form\n})(AddSubjectForm);","import React from 'react';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/EditSubjRow';\nimport Modal from '../Modal';\n\n\nexport default class EditSubjectRow extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isInputHidden: true,\n            name: this.props.subject.name,\n            id: this.props.subject.id,\n            editMode: false\n        }\n        this.modall = React.createRef();\n    }\n   \n\n    saveSubject() {\n        this.props.saveSubject({id: this.state.id, name: this.state.name});\n        this.setState({editMode: false})\n    }\n\n    deleteSubject(){\n        this.props.deleteSubject({id: this.state.id});\n    }\n\n    openModal(){\n        this.modall.current.showModal();\n    }\n\n    toggleSubjectActivity(){\n        this.props.toggleSubjectActivity({id: this.state.id});\n    }\n\n    handleChangeName = event => {\n        this.setState({ name: event.target.value });\n    }\n\n    toggleEditModeTrue () {\n        this.setState({\n            editMode: true\n        })\n    }\n\n    render(props) {\n        const { name, active, questions_number } = this.props.subject;//saveSubject\n        const activePhrase = active === 1 ? this.props.language === 'en' ? messages.en.active1 : messages.ru.active1 : this.props.language === 'en' ? messages.en.hidden : messages.ru.hidden;\n        const { language } = this.props;\n      return  (\n        <>\n            <Modal ref={this.modall} toExecute = {this.deleteSubject.bind(this)} message={'Please confirm subject deletion'}/>\n            <IntlProvider locale={language} messages={messages[language]}>\n                <tr>\n                    <td style={this.state.editMode ? {display: 'none'} : { display: 'block' }}> {name} </td>\n                    <td style={this.state.editMode ? {display: 'block'} : { display: 'none' }}><input type=\"text\"  value={this.state.name} onChange={this.handleChangeName.bind(this)}/></td>\n                    <td onClick={this.toggleSubjectActivity.bind(this)} className=\"cursorPointer\">\n                    {activePhrase}\n                    </td>\n                    <td>\n                    {questions_number}\n                    </td>\n                    <td style={this.state.editMode ? {display: 'block'} : { display: 'none' }}>\n                        <button className=\"btn btn-success btn-sm\" onClick={this.saveSubject.bind(this)}><FormattedMessage id=\"save\" /></button>\n                    </td>\n                    <td style={this.state.editMode ? {display: 'none'} : { display: 'block' }}>\n                        <button className=\"btn btn-warning btn-sm\" onClick={this.toggleEditModeTrue.bind(this)}><FormattedMessage id=\"edit\" /></button>\n                    </td>\n                    <td>\n                        <button className=\"btn btn-danger btn-sm\" onClick={this.openModal.bind(this)} disabled={questions_number > 0}><FormattedMessage id=\"delete\" /></button>\n                    </td>\n                </tr>\n            </IntlProvider>\n        </>\n    );\n    }\n  }\n\n","import React from 'react';\nimport EditSubjectRow from './EditSubjectRow';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/EditSubjectForm';\n\nconst EditSubjectForm = props => {\n  const { saveSubject, subjects, deleteSubject, toggleSubjectActivity, language } = props;\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <table>\n          <thead>\n            <tr>\n              <th><FormattedMessage id=\"subject\" /></th>\n              <th><FormattedMessage id=\"active\" />?</th>\n              <th><FormattedMessage id=\"questionNumber\" /></th>\n              <th><FormattedMessage id=\"edit\" /></th>\n              <th><FormattedMessage id=\"delete\" /></th>\n            </tr>\n          </thead>\n          <tbody>\n              {subjects.map(subject => <EditSubjectRow \n              subject={subject} \n              saveSubject={saveSubject} \n              deleteSubject={deleteSubject} \n              toggleSubjectActivity = {toggleSubjectActivity}\n              key={subject.id}\n              language={language}\n              /> )}\n          </tbody>\n      </table>\n    </IntlProvider>\n  );\n};\n\nexport default EditSubjectForm;","const messages = {\n    en: {\n      subjControlCenter: \"Subjects control center\",\n      atTheMomentSubjList: \"At the moment we have tests on these subjects available in our site\",\n    },\n    ru: {\n      subjControlCenter: \"Центр управления предметами\",\n      atTheMomentSubjList: \"На данный момент на сайте доступны тесты по этим предметам\",\n    }\n  };\n\n  export default messages;","import React from 'react';\nimport '../App.css';\nimport TopNavigation from './TopNavigation';\nimport Footer from './Footer';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport AddSubjectForm from \"./forms/addSubjectForm\";\nimport EditSubjectForm from \"./forms/EditSubjectForm\";\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Subjects';\n\n\nclass Subjects extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    this.countdown = React.createRef();\n  }\n\n  state = {\n    subject: '',\n  }\n\n  componentDidMount(){\n    this.props.loadSubjectsAdmin();\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n            <TopNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n            <div className=\"container\">\n              <h2><FormattedMessage id=\"subjControlCenter\" /></h2><br/><br/>\n              <AddSubjectForm onSubmit={()=>{this.props.addSubjectOne()}} language={this.props.language}/><br/><br/>\n              <FormattedMessage id=\"atTheMomentSubjList\" />:<br/><br/>\n              <EditSubjectForm subjects={this.props.subjectsAdmin} \n                saveSubject={this.props.saveSubject} \n                deleteSubject={this.props.deleteSubject} \n                toggleSubjectActivity={this.props.toggleSubjectActivity}\n                language={this.props.language}\n                />\n            </div>\n        </div>\n        <Footer logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n      </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n    return {\n      ...state.testReducer, ...state.loginSignUpReducer, ...state.subjectsReducer, ...state.settingsReducer\n    };\n  }\n\nexport default (connect(mapStateToProps, actionCreators))(Subjects);","const messages = {\n    en: {\n      aboutCookieTitle: \"About Cookie\",\n      aboutCookieText: \"What is a cookie? A cookie is a small file that can be placed on your device that allows us to recognise and remember you. It is sent to your browser and stored on your computer's hard drive or tablet or mobile device. When you visit our sites,  we may collect information from you automatically through cookies or similar technology. \",\n    },\n    ru: {\n      aboutCookieTitle: \"О файлах cookie\",\n      aboutCookieText: \"Что такое cookie? Файл cookie - это небольшой файл, который может быть размещен на вашем устройстве и позволяет нам узнавать и запоминать вас. Он отправляется в ваш браузер и сохраняется на жестком диске вашего компьютера, планшете или мобильном устройстве. Когда вы посещаете наши сайты,  мы можем собирать информацию от вас автоматически с помощью файлов cookie или аналогичных технологий.\",\n    }\n  };\n\n  export default messages;","import React from 'react'\nimport TopNavigation from './TopNavigation';\nimport Footer from './Footer';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport LoginForm from \"./forms/loginForm\";\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/AboutCookie';\nimport { withCookies } from 'react-cookie';\n\n\nclass AboutCookie extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    const { cookies } = props;\n    const mycookie = cookies.get('needToRedirectToLogin') ? cookies.get('needToRedirectToLogin') : \"empty\"\n    this.state = {\n      email: '',\n      password: '',\n      cook: cookies,\n      needToRedirectToLogin: mycookie,\n    };\n  }\n\n  componentDidMount(){\n    this.state.cook.remove('needToRedirectToLogin');\n  }\n\n  handleChangeMail = event => {\n    this.setState({ email: event.target.value });\n  }\n\n  handleChangePassword = event => {\n    this.setState({ password: event.target.value });\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n          <TopNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          <div className=\"container\">\n          <br/>\n            <h2><FormattedMessage id=\"aboutCookieTitle\" /></h2>\n            <FormattedMessage id=\"aboutCookieText\" />\n          </div>\n      </div>\n      <Footer logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n     </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.loginSignUpReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(withCookies(AboutCookie));","import styled from 'styled-components'\n\n//const coll = props.bGcolorr;\n\nconst StyledFlashMessage = styled.div`\n  position: fixed;\n  top: 30px;\n  right: 420px;\n  z-index: 3000;\n  .flashMessageBody {\n    position: absolute;\n    top: ${props => props.ifVisible === 0 ? `-240px` : `-30px`};\n    width: 400px;\n    background-color: ${props => props.bGcolorr === `success` ? `#d4edda` : `#f8d7da`};\n    text-align: center;\n    padding: 20px;\n    transition: top 1s;\n    p {\n      margin-bottom: 0;\n    }\n  }\n  @media only screen and (max-width: 600px) {\n    left: 0px;\n    .flashMessageBody {\n      width: 320px;\n      background-color: ${props => props.bGcolorr === `success` ? `#d4edda` : `#f8d7da`};\n      padding: 10px;\n    }\n  }\n`;\n\n//to hide, put -240px  ///bGcolorr\n\nexport default StyledFlashMessage","import React from 'react';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport StyledFlashMessage from '../styled/StyledFlashMessage'\nimport styled from 'styled-components'\n\n\nclass FlashMessage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n        <StyledFlashMessage ifVisible={this.props.flashMessagesVisibility} bGcolorr = {this.props.flashMessagesType}>\n            <div className=\"flashMessageBody\">\n                <p>{this.props.flashMessagesMessage}</p>\n            </div>\n        </StyledFlashMessage>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(FlashMessage);","import styled from 'styled-components'\n\n//const coll = props.bGcolorr;\n\nconst StyledCookieConsent = styled.div`\n  position: fixed;\n  width: 100%;\n  bottom: 30px;\n  left: 5px;\n  z-index: 3000;\n  .flashMessageBody {\n    position: absolute;\n    bottom: ${props => props.ifVisible === 0 ? `-240px` : `-30px`};\n    width: calc(100% - 10px);\n    background-color: #d4edda;\n    text-align: center;\n    padding: 15px;\n    transition: top 3s;\n    transition: bottom 3s;\n    p.message {\n      margin-bottom: 0;\n      display: inline;\n      margin-right: 30px;\n    }\n    a {\n      margin-right: 30px;\n      cursor: pointer;\n    }\n  }\n`;\n\n//to hide, put -240px  ///bGcolorr\n\nexport default StyledCookieConsent","const messages = {\n    en: {\n      consent: \"This site uses cookie to provide you with a great user experience\",\n      agree: \"Agree\",\n      details: \"Details...\"\n    },\n    ru: {\n        consent: \"Этот сайт использует файлы cookie, чтобы обеспечить вам удобство использования\",\n        agree: \"Согласeн\",\n        details: \"Подробности...\"\n    }\n  };\n\n  export default messages;","///\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport StyledCookieConsent from '../styled/StyledCookieConsent'\nimport {withCookies} from 'react-cookie';\nimport messages from '../translations/CookieConsent';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport { Link } from 'react-router-dom';\n\n\nclass CookieConsent extends React.Component {\n  constructor(props) {\n    super(props);\n    const { cookies } = props;\n    const mycookie = cookies.get('cookieConsentObtained')\n    this.state = {\n        cookieConsentObtained: mycookie\n    };\n  }\n\n  componentDidMount(){\n    setTimeout(() => { \n        if(!this.state.cookieConsentObtained && this.props.cookieConsentObtained == 0){/// this means that user came from email confirmation link\n            this.props.setCookieConsentVisibility(1);\n        };\n    }, 5000);\n  }\n\n  componentDidUpdate(){\n    if(this.props.cookieConsentObtained == 1){/// this means that user came from email confirmation link\n        this.props.setCookieConsentVisibility(0);\n    } \n  }\n\n  hideConsent(){\n    this.props.cookies.set(\"cookieConsentObtained\", 'obtained', { path: '/', expires: new Date(Date.now()+22222592000)})  \n    this.props.setCookieConsentVisibility(0);\n  }\n\n  render() {\n    return (\n        <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n            <StyledCookieConsent ifVisible={this.props.cookieConsentVisibility}>\n                <div className=\"flashMessageBody\">\n                    <p className=\"message\"><FormattedMessage id=\"consent\" /></p>\n                    <Link to=\"/app/aboutcookie\"><FormattedMessage id=\"details\" /></Link>\n                    <button type=\"button\" className=\"btn btn-success\" onClick={this.hideConsent.bind(this)}><FormattedMessage id=\"agree\" /></button>\n                </div>\n            </StyledCookieConsent>\n        </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(withCookies(CookieConsent));","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/Login';\nimport SmartField from '../formelements/SmartField';\n\n\nconst validate = values => {\n    const errors = {}\n    if (!values.password) {\n        errors.password = 'Required'\n    } else if (values.password.length < 8) {\n        errors.password = 'Must be 8 characters or more'\n    } else if (values.password.length > 15) {\n        errors.password = 'Must be 15 characters or less'\n    }\n\n    if (!values.repeatpassword) {\n        errors.repeatpassword = 'Required'\n    } else if (values.repeatpassword.length < 8) {\n        errors.repeatpassword = 'Must be 8 characters or more'\n    } else if (values.repeatpassword.length > 15) {\n        errors.repeatpassword = 'Must be 15 characters or less'\n    }\n\n    if (values.repeatpassword != values.password) {\n        errors.password = 'Password doesn\\'t match';\n        errors.repeatpassword = 'Password doesn\\'t match';\n    } \n\n    return errors\n  }\n\nconst PasswordResetForm = props => {\n  const { handleSubmit, pristine, reset, submitting, errorMessage, errorMessageVisibility, language } = props;\n  const translations = {\n    emailAddress:  language === 'en' ? messages.en.emailAddress : messages.ru.emailAddress,\n    password:  language === 'en' ? messages.en.password : messages.ru.password,\n    repeatpassword: language === 'en' ? messages.en.repeatpassword : messages.ru.repeatpassword,\n  }\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <div>\n              <table>\n                  <tbody>\n                      <tr><td><Field  name=\"password\"   component={SmartField} label={translations.password}  toShowPasswordMeter={true}/></td></tr>\n                      <tr><td><Field  name=\"repeatpassword\"   component={SmartField} label={translations.repeatpassword} toShowPasswordMeter={true}/></td></tr>\n                      <tr style={{visibility: `${errorMessageVisibility}`}}><td><span className=\"error\">{errorMessage}</span></td></tr>\n                  </tbody>\n              </table>\n          </div>\n        </div>\n        <br/><br/>\n        <div>\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={pristine || submitting}><FormattedMessage id=\"senddata\" /></button>&nbsp;&nbsp;&nbsp;\n          <button type=\"button\" className=\"btn btn-danger\" disabled={pristine || submitting} onClick={reset}><FormattedMessage id=\"clearValues\" /></button>\n        </div>\n      </form>\n    </IntlProvider>\n  );\n};\n\nexport default reduxForm({\n  form: 'passwordresetform', \n  validate\n})(PasswordResetForm);","const messages = {\n    en: {\n        passwordreset: \"Reset password\",\n    },\n    ru: {\n        passwordreset: \"Сброс пароля\",\n    }\n  };\n\n  export default messages;","///\nimport React from 'react'\nimport TopNavigation from './TopNavigation';\nimport Footer from './Footer';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport PasswordResetForm from \"./forms/passwordresetform\";\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/PasswordReset';\nimport { withCookies } from 'react-cookie';\n\n\nclass PasswordReset extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    const { cookies } = props;\n    this.state = {\n      cook: cookies,\n    };\n  }\n\n  componentDidMount(){\n  }\n\n  componentDidUpdate() {\n    if(this.props.redirectFlagForPasswordresetFunctionality == 2){\n    this.props.history.push('/app/login');\n    }\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n          <TopNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          <div className=\"container\">\n            <h2><FormattedMessage id=\"passwordreset\" /></h2>\n            <PasswordResetForm onSubmit={()=>{this.props.resetPassword()}} errorMessage={this.props.loginError} errorMessageVisibility={this.props.loginErrorVisibility} language={this.props.language}/>\n          </div>\n      </div> \n      <Footer logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n     </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.loginSignUpReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(withCookies(PasswordReset));","import React from 'react';\nimport '../App.css';\nimport TopNavigation from './TopNavigation';\nimport Footer from './Footer';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Home';\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemHeading,\n    AccordionItemButton,\n    AccordionItemPanel,\n  } from 'react-accessible-accordion';\n  import 'react-accessible-accordion/dist/fancy-example.css';\n  import StyledAccordeon from '../styled/StyledAccordeon'\n\nclass AdminSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n  }\n  \n  componentDidMount(){\n    this.props.loadGlobalSettings();\n  }\n  toggleEmailConfirmation(){\n    this.props.toggleEmailConfirmation();\n  }\n\n  toggleRecaptcha(){\n    this.props.toggleRecaptcha();\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n          <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n            <TopNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n            <div className=\"container\">\n              <h2>Global Settings</h2>\n              <StyledAccordeon>\n                <Accordion allowMultipleExpanded=\"true\" allowZeroExpanded=\"true\">\n                  <AccordionItem>\n                      <AccordionItemHeading>\n                          <AccordionItemButton>\n                            Email confirmation\n                          </AccordionItemButton>\n                      </AccordionItemHeading>\n                      <AccordionItemPanel>\n                        <div style={this.props.needEmailConfirmation === 0 ? {} : {display: 'none'}}>\n                            Disabled &nbsp;&nbsp;&nbsp;&nbsp;<button type=\"button\" className=\"btn btn-success\" onClick={this.toggleEmailConfirmation.bind(this)}>Click to enable</button>{/* onClick={this.clickYes.bind(this)} */}\n                        </div>\n                        <div style={this.props.needEmailConfirmation === 1 ? {} : {display: 'none'}}>\n                            Enabled &nbsp;&nbsp;&nbsp;&nbsp;<button type=\"button\" className=\"btn btn-danger\" onClick={this.toggleEmailConfirmation.bind(this)}>Click to disable</button>\n                        </div>\n                      </AccordionItemPanel>\n                      <AccordionItem>\n                      <AccordionItemHeading>\n                          <AccordionItemButton>\n                            Use recaptcha on signup\n                          </AccordionItemButton>\n                      </AccordionItemHeading>\n                      <AccordionItemPanel>\n                        <div style={this.props.needToShowRecaptcha === 0 ? {} : {display: 'none'}}>\n                            Disabled &nbsp;&nbsp;&nbsp;&nbsp;<button type=\"button\" className=\"btn btn-success\" onClick={this.toggleRecaptcha.bind(this)}>Click to enable</button>{/* onClick={this.clickYes.bind(this)} */}\n                        </div>\n                        <div style={this.props.needToShowRecaptcha === 1 ? {} : {display: 'none'}}>\n                            Enabled &nbsp;&nbsp;&nbsp;&nbsp;<button type=\"button\" className=\"btn btn-danger\" onClick={this.toggleRecaptcha.bind(this)}>Click to disable</button>\n                        </div>\n                      </AccordionItemPanel>\n                  </AccordionItem>\n                  </AccordionItem>\n              </Accordion>\n            </StyledAccordeon><br/><br/>\n            </div>\n            <Footer logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.loginSignUpReducer, ...state.subjectsReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(AdminSettings);","const messages = {\n    en: {\n        emailAddress: \"E-mail address\",\n        forgotpassword: \"Forgot password?\",\n        username: \"Username\",\n        clearValues: \"Clear values\",\n        send: \"Request password reset link\",\n        pleaseEnter: \"Please enter email address and/or username\",\n        andor: \"and/or\",\n        verifyaddress: \"Password reset link will be sent to the email address/username specified. Usually it takes up to 3 minutes for system to send email. Just click link in email body and fill password reset form. Please note that link is valid for 24 hours\",\n        enterTextInBlue: \"Enter text in blue below\",\n\n    },\n    ru: {\n        emailAddress: \"Адрес электронной почты\",\n        forgotpassword: \"Забыл пароль?\",\n        username: \"Имя пользователя\",\n        clearValues: \"Oчистить формy\",\n        send: \"Запросить cсылку для сброса пароля\",\n        pleaseEnter: \"Пожалуйста, введите адрес электронной почты и/или имя пользователя\",\n        andor: \"и/или\",\n        verifyaddress: \"Ссылка для сброса пароля будет отправлена ​​на указанный адрес электронной почты/имя пользователя. Обычно система отправляет электронное письмо в течение 3 минут. Пожалуйста, примите во внимание что ссылка действительна в течение 24 часов.\",\n        enterTextInBlue: \"Введите текст, выделенный синим цветом\",\n    }\n  };\n\n  export default messages;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/Forgotpassword';\nimport Captcha from '../Captcha';\n\n\nconst validate = values => {\n    const errors = {}\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email) && values.email) {\n        errors.email = 'Invalid email address'\n    }\n\n    if (!values.username && !values.email) {\n        errors.email = 'Either Email or Username Required';\n        errors.username = 'Either Email or Username Required'\n    } \n\n    if (!values.captcha) {\n      errors.captcha = 'Recaptcha Required';\n  } \n\n    return errors\n  }\n\n  const renderField = ({\n    input,\n    label,\n    type,\n    meta: { touched, error, warning }\n  }) => (\n    <div>\n      <label>{label}</label>\n      <div>\n        <input {...input} placeholder={label} type={type} />\n        {touched &&\n          ((error && <span className=\"error\">{error}</span>) ||\n            (warning && <span>{warning}</span>))}\n      </div>\n    </div>\n  )\n\n\nconst ForgotPasswordForm = props => {\n  const { handleSubmit, pristine, reset, submitting, language, recaptchaText, onRecaptcaClick } = props;\n  const translations = {\n    emailAddress:  language === 'en' ? messages.en.emailAddress : messages.ru.emailAddress,\n    username:  language === 'en' ? messages.en.username : messages.ru.username,\n    enterTextInBlue:  language === 'en' ? messages.en.enterTextInBlue : messages.ru.enterTextInBlue,\n  }\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <div>\n              <FormattedMessage id=\"pleaseEnter\" /><br/><br/>\n              <FormattedMessage id=\"verifyaddress\" /><br/><br/>\n              <table>\n                  <tbody>\n                      <tr><td><Field  name=\"email\"   component={renderField} type=\"text\" label={translations.emailAddress} /></td></tr>\n                      <tr><td><br/><FormattedMessage id=\"andor\" /><br/><br/></td></tr>\n                      <tr><td><Field  name=\"username\"   component={renderField} label={translations.username}/></td></tr>\n                      <tr><td><Field  name=\"captcha\"   component={renderField}    type=\"text\" label={translations.enterTextInBlue} /></td></tr>\n                      <tr><td><Captcha text={recaptchaText} onClick={onRecaptcaClick}/></td></tr>\n                  </tbody>\n              </table>\n          </div>\n        </div>\n        <br/><br/>\n        <div>\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={pristine || submitting}><FormattedMessage id=\"send\" /></button>&nbsp;&nbsp;&nbsp;\n          <button type=\"button\" className=\"btn btn-danger\" disabled={pristine || submitting} onClick={reset}><FormattedMessage id=\"clearValues\" /></button>\n        </div>\n      </form>\n    </IntlProvider>\n  );\n};\n\nexport default reduxForm({\n  form: 'forgotPasswordFormRedux', \n  validate\n})(ForgotPasswordForm);","import React from 'react'\nimport TopNavigation from './TopNavigation';\nimport Footer from './Footer';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport ForgotPasswordForm from \"./forms/ForgotPasswordForm\";\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Forgotpassword';\nimport { withCookies } from 'react-cookie';\nimport helpers from '../helpers/Helpers';\n\n\nclass ForgotPassword extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    const { cookies } = props;\n    const mycookie = cookies.get('needToRedirectToLogin') ? cookies.get('needToRedirectToLogin') : \"empty\"\n    this.state = {\n      email: '',\n      password: '',\n      recaptcatext: '',\n    };\n    this.recaptchaClick.bind(this);\n  }\n\n  componentDidMount(){\n    this.recaptchaClick();\n  }\n\n  recaptchaClick = () =>{\n    let recaptchaText = helpers.makeRandom();\n    this.props.setRecaptchaText(recaptchaText);\n    this.setState({\n      recaptcatext: recaptchaText\n    })\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n          <TopNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          <div className=\"container\">\n            <h2><FormattedMessage id=\"forgotpassword\" /></h2>\n            <ForgotPasswordForm onSubmit={()=>{this.props.sentForgotPasswordForm()}} \n            errorMessage={this.props.loginError} \n            errorMessageVisibility={this.props.loginErrorVisibility} \n            language={this.props.language}\n            recaptchaText={this.state.recaptcatext} \n            onRecaptcaClick={this.recaptchaClick}\n            />\n\n          </div>\n      </div>\n      <Footer logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n     </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.loginSignUpReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(withCookies(ForgotPassword));","const messages = {\n    en: {\n      accountSettings: \"Account settings\",\n      setCurrentLanguage: \"Set current langusage\",\n      wantToSeeHints: \"Want to see correct answer hints while testing\",\n      ifYesHints: \"If yes, after you clicked answer while testing, correct anser will be outlined in green for several seconds\",\n      changePassword: \"Change password\",\n      pleaseKeepInMind: \"Please keep in mind that after succesful password change stystem will log you out and you will need to use your new password to log in again.\",\n      submit: \"Submit\",\n      clearValues: \"Clear values\",\n      enterNewPassw: \"Enter new password\",\n      repeatNewPassw: \"Repeat new password\",\n    },\n    ru: {\n      accountSettings: \"Настройки учетной записи\",\n      setCurrentLanguage: \"Установить текущий язык\",\n      wantToSeeHints: \"Хотите видеть подсказки при тестировании\",\n      ifYesHints: \"Если да, то после того как вы нажали ответ во время тестирования, правильный ответ будет обведен зеленой рамкой на несколько секунд.\",\n      changePassword: \"Cменить пароль\",\n      pleaseKeepInMind: \"Имейте в виду, что после успешной смены пароля система выйдет из сессии, и вам нужно будет использовать новый пароль для повторного входа.\",\n      submit: \"Oтправить\",\n      clearValues: \"Очистить формy\",\n      enterNewPassw: \"Введите новый пароль\",\n      repeatNewPassw: \"Повторите новый пароль\",\n    }\n  };\n\n  export default messages;\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport SmartField from '../formelements/SmartField';\n\nconst validate = values => {\n    const errors = {}\n    if (!values.password) {\n        errors.password = 'Required'\n    } else if (values.password.length < 8) {\n        errors.password = 'Must be 8 characters or more'\n    } else if (values.password.length > 15) {\n        errors.password = 'Must be 15 characters or less'\n    }\n\n    if (!values.repeatPassword) {\n        errors.repeatPassword = 'Required'\n    } \n\n    if (values.repeatPassword != values.password){\n        errors.repeatPassword = 'Passwords do not match';\n        errors.password = 'Passwords do not match'\n    }\n\n    return errors\n}\n\nconst renderField = ({\n    input,\n    label,\n    type,\n    meta: { touched, error, warning }\n  }) => (\n    <div>\n      <label>{label}</label>\n      <div>\n        <input {...input} placeholder={label} type={type} />\n        {touched &&\n          ((error && <span className=\"error\">{error}</span>) ||\n            (warning && <span>{warning}</span>))}\n      </div>\n    </div>\n  )\n\n\nconst ChangePasswordForm = props => {\n  const { handleSubmit, pristine, reset, submitting, valid, submitLabel, clearValues, enterNewPassw, repeatNewPassw } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <div>\n            <table>\n                <tbody>\n                    <tr><td><Field  name=\"password\"   \n                    component={SmartField}   \n                    type=\"password\"   \n                    label={enterNewPassw} \n                    /></td></tr>\n                    <tr><td><Field  name=\"repeatPassword\"   component={SmartField}    type=\"password\"   label={repeatNewPassw} /></td></tr>\n                </tbody>\n            </table>\n         </div>\n      </div>\n      <div>\n        <br /><br />\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={pristine || submitting}>{submitLabel}</button>&nbsp;&nbsp;\n      <button type=\"button\" className=\"btn btn-danger\" disabled={pristine || submitting} onClick={reset}>{clearValues}</button>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: 'changePasswordFormRedux', \n  validate\n})(ChangePasswordForm);","import React from 'react';\nimport '../App.css';\nimport TopNavigation from './TopNavigation';\nimport {connect} from 'react-redux';\nimport Footer from './Footer';\n\nimport * as actionCreators from '../actions/index';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/AccountSettings';\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from 'react-accessible-accordion';\n\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport StyledAccordeon from '../styled/StyledAccordeon';\nimport ChangePasswordForm from \"./forms/ChangePasswordForm\";\n\nclass AccountSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  toggleLanguageInternal = (e) =>{\n    this.props.setLanguage(e.target.value);\n  }\n\n  toggleShowHintsInternal = (e) =>{\n    this.props.setIfToShowTestingHints(e.target.value);\n  }\n\n  render() {\n    const translations = {\n      submit:  this.props.language === 'en' ? messages.en.submit : messages.ru.submit,\n      clearValues: this.props.language === 'en' ? messages.en.clearValues : messages.ru.clearValues,\n      enterNewPassw: this.props.language === 'en' ? messages.en.enterNewPassw : messages.ru.enterNewPassw,\n      repeatNewPassw: this.props.language === 'en' ? messages.en.repeatNewPassw : messages.ru.repeatNewPassw,\n    }\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <TopNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n        <div>\n        <div className=\"container\" style={{ minHeight: \"600px\" }}>\n          <h2><FormattedMessage id=\"accountSettings\" /></h2>\n          <StyledAccordeon>\n            <Accordion allowMultipleExpanded=\"true\" allowZeroExpanded=\"true\">\n              <AccordionItem>\n                  <AccordionItemHeading>\n                      <AccordionItemButton>\n                        <FormattedMessage id=\"setCurrentLanguage\" />\n                      </AccordionItemButton>\n                  </AccordionItemHeading>\n                  <AccordionItemPanel>\n                    <FormattedMessage id=\"setCurrentLanguage\" />&nbsp;&nbsp;&nbsp;\n                    <select onChange={this.toggleLanguageInternal.bind(this)} value={this.props.language} className=\"languageSelect form-select\">\n                      <option id=\"en\">en</option>\n                      <option id=\"ru\">ru</option>\n                    </select>\n                  </AccordionItemPanel>\n              </AccordionItem>\n              {/*<AccordionItem>\n                  <AccordionItemHeading>\n                      <AccordionItemButton>\n                      <FormattedMessage id=\"wantToSeeHints\" />?\n                      </AccordionItemButton>\n                  </AccordionItemHeading>\n                  <AccordionItemPanel>\n                    <FormattedMessage id=\"wantToSeeHints\" />&nbsp;&nbsp;&nbsp;\n                    <select onChange={this.toggleShowHintsInternal.bind(this)} value={this.props.toShowTestingHints} className=\"languageSelect form-select\">\n                      <option id=\"1\" value=\"1\">Yes</option>\n                      <option id=\"0\" value=\"0\">No</option>\n                    </select>\n                    <br />\n                    <FormattedMessage id=\"ifYesHints\" />\n                  </AccordionItemPanel>\n              </AccordionItem>*/}\n              <AccordionItem>\n                  <AccordionItemHeading>\n                      <AccordionItemButton>\n                      <FormattedMessage id=\"changePassword\" />\n                      </AccordionItemButton>\n                  </AccordionItemHeading>\n                  <AccordionItemPanel>\n                    <FormattedMessage id=\"pleaseKeepInMind\" />&nbsp;&nbsp;&nbsp;\n                    <ChangePasswordForm onSubmit={()=>{this.props.changePassword()}}\n                    submitLabel = {translations.submit} \n                    clearValues = {translations.clearValues} \n                    enterNewPassw ={translations.enterNewPassw}\n                    repeatNewPassw = {translations.repeatNewPassw}\n                    language = {this.props.language}\n                    />\n                  </AccordionItemPanel>\n              </AccordionItem>\n          </Accordion>\n        </StyledAccordeon>\n\n        </div>\n        </div>\n        <Footer logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n      </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.loginSignUpReducer, ...state.subjectsReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(AccountSettings);\n\n\n","const messages = {\n    en: {\n      contibution: \"Contribution\",\n      editContibution: \"Edit Contribution\",\n      myConrtibutionDetails: \"My added question details (uneditable)\",\n    },\n    ru: {\n      contibution: \"Bопросы, добавленные пользователями\",\n      editContibution: \"Изменить добавленные вопросы\",\n      myConrtibutionDetails: \"Подробности моего добавленного вопроса (не редактируется)\",\n    }\n  };\n\n  export default messages;","import React from 'react';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/EditSubjRow';\nimport { Link } from 'react-router-dom';\n\nexport default class EditContributionRow extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.contribution.resultId,\n            status: this.props.contribution.status,\n        }\n    }\n\n    render(props) {\n        const { userName, subjectName, createdAt, status } = this.props.contribution;\n        const { language } = this.props;\n        let statusWord = status == 0 ? 'pending' : status == '1' ? 'approved' : 'declined';\n        let url = '/app/admincontribution/' + this.state.id;\n      return  (\n        <>\n            <IntlProvider locale={language} messages={messages[language]}>\n                <tr>\n                    <td > { userName } </td>\n                    <td > { subjectName } </td>\n                    <td > { createdAt } </td>\n                    <td style={status == '0' ? {backgroundColor: '#efe756'} : status == '1' ? {backgroundColor: '#9dd49b', color: 'white !important'} : {backgroundColor: '#efc9c9', color: 'white !important'}} > \n                       {status == '0' && (<Link to={url}>{ statusWord }</Link>)}\n                            { (status == '1' || status == '2') && statusWord }\n                    </td>\n                </tr>\n            </IntlProvider>\n        </>\n    );\n    }\n  }","const messages = {\n    en: {\n      subject: \"Subject\",\n      active: \"Active\",\n      questionNumber: \"Questions number\",\n      edit: \"Edit\",\n      delete: \"Delete\",\n      createdAt: \"Created At\",\n      status: \"Status\",\n      userName: \"User Name\"\n    },\n    ru: {\n        subject: \"Предмет\",\n        active: \"Активный\",\n        questionNumber: \"Количество вопросов\",\n        edit: \"Править\",\n        delete: \"Удалить\",\n        createdAt: \"Дата создания\",\n        status: \"Cтатус\",\n        userName: \"Имя пользователя\"\n    }\n  };\n\n  export default messages;","import React from 'react';\nimport EditContributionRow from './EditContributionRow';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/EditContributionForm';\n\nconst EditContributionForm = props => {\n  const { contributions, language, users } = props;\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <table className=\"table\">\n          <thead>\n            <tr>\n              <th><FormattedMessage id=\"userName\" /></th>\n              <th><FormattedMessage id=\"subject\" /></th>\n              <th><FormattedMessage id=\"createdAt\" /></th>\n              <th><FormattedMessage id=\"status\" /></th>\n            </tr>\n          </thead>\n          <tbody>\n            {Array.from(contributions).map(contribution => <EditContributionRow contribution={contribution}  language={language} key={contribution.resultId}/> )}\n          </tbody>\n      </table>\n    </IntlProvider>\n  );\n};\n\nexport default EditContributionForm;","import React from 'react'\nimport TopNavigation from './TopNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport Footer from './Footer';\nimport messages from '../translations/AdminContribution';\nimport EditContributionForm from \"./forms/EditContributionForm\";\n\n\nclass AdminContribution extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  componentDidMount(){\n      this.props.loadContributionAdmin();\n      this.props.clearAdminContributionItem();\n      this.props.setRedirectFlagForAdmin(1);// this is reset for this flag to be able to redirect from edit form to this page after succes. editing, when success flag turns 1nto 2\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n          <TopNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          <div className=\"container\">\n            <h2><FormattedMessage id=\"contibution\" /></h2>\n            <EditContributionForm  contributions={ this.props.adminContribution } language={this.props.language} />\n          </div>\n      </div>\n      <Footer logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n     </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.loginSignUpReducer, ...state.settingsReducer, ...state.contributionsReducer, ...state.usersReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(AdminContribution);","const messages = {\n    en: {\n        firstAnswer: \"First incorrect answer\",\n        secondAnswer: \"Second incorrect answer\",\n        thirdAnswer: \"Third incorrect answer\",\n        fourthAnswer: \"Fourth correct answer\",\n        question: \"Your question\",\n        sendQuestion: \"Send question\",\n        approveAndsaveQuestion: \"Approve and save question\", \n        clearValues: \"Clear Values\",\n        declineQuestion: \"Decline question\",\n        backToContributionPage: \"<< Back to previous page\",\n    },\n    ru: {\n        firstAnswer: \"Первый неправильный ответ\",\n        secondAnswer: \"Bторой неправильный ответ\",\n        thirdAnswer: \"Tретий неправильный ответ\",\n        fourthAnswer: \"Четвертый правильный ответ\",\n        question: \"Ваш вопрос\",\n        sendQuestion: \"Отправить вопрос\",\n        approveAndsaveQuestion: \"Approve and save question\",\n        clearValues: \"Очистить значения\",\n        backToContributionPage: \"<< Вернуться на предыдущую страницу\",\n    }\n  };\n\n  export default messages;","import React, { Component, PropTypes } from 'react';\n\nclass SmartTextArea extends Component {\n    constructor () {\n        super()\n    }\n\n    render() {\n        const { input, label, type, disabled, meta: { touched, error, warning, dirty } } = this.props;\n        let color='';\n        if(input.value.length > 1000){ color = \"red\"; } else {color = \"green\";}\n        return (\n            <>\n            <label style={{marginBottom: \"0\", fontSize: \"12px\"}}>{label}</label>\n            <div>\n                \n            <div style={{display: \"inline-block\", width: \"100%\"}}>\n              <textarea {...input} placeholder={label} type={type} rows=\"4\" disabled={disabled} style={{width: \"calc(100% - 30px)\"}}></textarea>\n              <span style={{fontWeight: \"bold\", color: color}}>&nbsp;&nbsp;{input.value.length}</span>\n              {touched &&\n                ((error && <span className=\"error\">{error}</span>) ||\n                  (warning && <span>{warning}</span>))}\n            </div>\n          </div>\n          </>\n        );\n        }\n}\n  export default SmartTextArea;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/forms/AddContributionForm';\nimport SmartTextArea from '../formelements/SmartTextArea';\n\nconst validate = values => {\n    const errors = {}\n    if (!values.question) { errors.question = 'Required'  } else if (values.question.length > 1000) { errors.question = 'Must be 1000 characters or less'}\n    if (!values.uncorrect0) {  errors.uncorrect0 = 'Required'  } else if (values.uncorrect0.length > 1000) { errors.uncorrect0 = 'Must be 1000 characters or less'}\n    if (!values.uncorrect1) {  errors.uncorrect1 = 'Required'  } else if (values.uncorrect1.length > 1000) { errors.uncorrect1 = 'Must be 1000 characters or less'}\n    if (!values.uncorrect2) { errors.uncorrect2 = 'Required' } else if (values.uncorrect2.length > 1000) { errors.uncorrect2 = 'Must be 1000 characters or less'}\n    if (!values.answerCorrect) { errors.answerCorrect = 'Required'  } else if (values.answerCorrect.length > 1000) { errors.answerCorrect = 'Must be 1000 characters or less'}\n    return errors\n  }\n\nlet AdminEditContributionForm = props => {\n  const { handleSubmit, submitting, language, declineFunction, backNavigation } = props;\n  const translations = {\n    firstAnswer:  language === 'en' ? messages.en.firstAnswer : messages.ru.firstAnswer,\n    secondAnswer:  language === 'en' ? messages.en.secondAnswer : messages.ru.secondAnswer,\n    thirdAnswer:  language === 'en' ? messages.en.thirdAnswer : messages.ru.thirdAnswer,\n    fourthAnswer:  language === 'en' ? messages.en.fourthAnswer : messages.ru.fourthAnswer,\n    question: language === 'en' ? messages.en.question : messages.ru.question,\n    clearValues: language === 'en' ? messages.en.clearValues : messages.ru.clearValues,\n  }\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <form onSubmit={handleSubmit}>\n          <br/> <br />\n        <div>\n          <table style={{width: \"100%\"}} class=\"contributionForm\">\n              <tbody>\n                <tr><td><Field  name=\"question\"   component={SmartTextArea} label={translations.question} value='dsfgsdfgsdfg'/></td></tr>\n                <tr><td><br/><br/></td></tr>\n                <tr><td><Field  name=\"uncorrect0\"   component={SmartTextArea} label={translations.firstAnswer} /></td></tr>\n                <tr><td><Field  name=\"uncorrect1\"   component={SmartTextArea} label={translations.secondAnswer} /></td></tr>\n                <tr><td><Field  name=\"uncorrect2\"   component={SmartTextArea} label={translations.thirdAnswer} /></td></tr>\n                <tr><td><Field  name=\"answerCorrect\"   component={SmartTextArea} label={translations.fourthAnswer} /></td></tr>\n              </tbody>\n          </table>\n        </div>\n        <br/><br/>\n        <div>\n          <button type=\"button\" className=\"btn btn-primary\" disabled={submitting} onClick={backNavigation}><FormattedMessage id=\"backToContributionPage\" /></button>&nbsp;&nbsp;&nbsp;\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={submitting}><FormattedMessage id=\"approveAndsaveQuestion\" /></button>&nbsp;&nbsp;&nbsp;\n          <button type=\"button\" className=\"btn btn-danger\" onClick={declineFunction} disabled={submitting}><FormattedMessage id=\"declineQuestion\" /></button>&nbsp;&nbsp;&nbsp;\n        </div>\n      </form>\n    </IntlProvider>\n  );\n};\n\nAdminEditContributionForm = reduxForm({\n  form: 'editContibutionFormAdminRedux', \n  enableReinitialize: true,\n  validate,\n})(AdminEditContributionForm);\n\nexport default AdminEditContributionForm;","import React from 'react'\nimport TopNavigation from './TopNavigation';\nimport Footer from './Footer';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/AdminContribution';\nimport AdminEditContributionForm from \"./forms/AdminEditContributionForm\";\n\n\nclass AdminContributionDetails extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n  }\n\n  componentDidMount(){\n    this.props.loadContributionItemAdmin(this.props.match.params.id);\n  }\n\n\n  componentDidUpdate(){\n    if(this.props.redirectAfterSuccesfullAdministeringForAdmin == 2){/// this means that user came from email confirmation link\n      this.props.history.push('/app/admincontribution');\n    };\n  }\n \n  backNavigation(){\n    this.props.history.push('/app/admincontribution');\n  }\n\n  handleChange = (e) =>{\n    this.setState({question: e.target.value});\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n          <TopNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          <div className=\"container\">\n            <h2><FormattedMessage id=\"editContibution\" /></h2>\n            <AdminEditContributionForm  onSubmit={()=>{this.props.saveContributionAdmin()}} language={this.props.language}  \n            declineFunction={this.props.declineContributionAdmin} initialValues={this.props.adminContributionItem}  backNavigation={this.backNavigation.bind(this)}  />\n          </div>\n      </div> \n      <Footer logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n     </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.loginSignUpReducer, ...state.settingsReducer, ...state.contributionsReducer, ...state.usersReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(AdminContributionDetails);","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/forms/AddContributionForm';\nimport SmartTextArea from '../formelements/SmartTextArea';\n\nconst validate = values => {\n    const errors = {}\n    if (!values.question) { errors.question = 'Required'  } else if (values.question.length > 1000) { errors.question = 'Must be 1000 characters or less'}\n    if (!values.uncorrect0) {  errors.uncorrect0 = 'Required'  } else if (values.uncorrect0.length > 1000) { errors.uncorrect0 = 'Must be 1000 characters or less'}\n    if (!values.uncorrect1) {  errors.uncorrect1 = 'Required'  } else if (values.uncorrect1.length > 1000) { errors.uncorrect1 = 'Must be 1000 characters or less'}\n    if (!values.uncorrect2) { errors.uncorrect2 = 'Required' } else if (values.uncorrect2.length > 1000) { errors.uncorrect2 = 'Must be 1000 characters or less'}\n    if (!values.answerCorrect) { errors.answerCorrect = 'Required'  } else if (values.answerCorrect.length > 1000) { errors.answerCorrect = 'Must be 1000 characters or less'}\n    return errors\n  }\n\nlet UserEditContributionForm = props => {\n  const { handleSubmit, submitting, language, backNavigation } = props;\n  const translations = {\n    firstAnswer:  language === 'en' ? messages.en.firstAnswer : messages.ru.firstAnswer,\n    secondAnswer:  language === 'en' ? messages.en.secondAnswer : messages.ru.secondAnswer,\n    thirdAnswer:  language === 'en' ? messages.en.thirdAnswer : messages.ru.thirdAnswer,\n    fourthAnswer:  language === 'en' ? messages.en.fourthAnswer : messages.ru.fourthAnswer,\n    question: language === 'en' ? messages.en.question : messages.ru.question,\n    clearValues: language === 'en' ? messages.en.clearValues : messages.ru.clearValues,\n  }\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <form onSubmit={handleSubmit}>\n          <br/> <br />\n          <div>\n              <table style={{width: \"100%\"}} class=\"contributionForm\">\n                  <tbody>\n                    <tr><td><Field  name=\"question\"   component={SmartTextArea} label={translations.question} disabled={true} /></td></tr>\n                    <tr><td><br/><br/></td></tr>\n                    <tr><td><Field  name=\"uncorrect0\"   component={SmartTextArea} label={translations.firstAnswer} disabled={true} /></td></tr>\n                    <tr><td><Field  name=\"uncorrect1\"   component={SmartTextArea} label={translations.secondAnswer} disabled={true} /></td></tr>\n                    <tr><td><Field  name=\"uncorrect2\"   component={SmartTextArea} label={translations.thirdAnswer} disabled={true} /></td></tr>\n                    <tr><td><Field  name=\"answerCorrect\"   component={SmartTextArea} label={translations.fourthAnswer} disabled={true} /></td></tr>\n                  </tbody>\n              </table>\n          </div>\n        <br/><br/>\n        <div>\n          <button type=\"button\" className=\"btn btn-primary\" disabled={submitting} onClick={backNavigation}>\n              <FormattedMessage id=\"backToContributionPage\" />\n          </button>&nbsp;&nbsp;&nbsp;\n        </div>\n      </form>\n    </IntlProvider>\n  );\n};\n\nUserEditContributionForm = reduxForm({\n  form: 'editContibutionFormUserRedux', \n  enableReinitialize: true,\n  validate,\n})(UserEditContributionForm);\n\nexport default UserEditContributionForm;","import React from 'react'\nimport TopNavigation from './TopNavigation';\nimport Footer from './Footer';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/AdminContribution';\nimport UserEditContributionForm from \"./forms/UserEditContributionForm\";\n\n\nclass UserContributionDetails extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n  }\n\n  componentDidMount(){\n    this.props.loadContributionItemUser(this.props.match.params.id);\n  }\n\n\n  componentDidUpdate(){\n\n  }\n \n  backNavigation(){\n    this.props.history.push('/app/myquestionstatus');\n  }\n\n  handleChange = (e) =>{\n    this.setState({question: e.target.value});\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n          <TopNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          <div className=\"container\">\n            <h2><FormattedMessage id=\"myConrtibutionDetails\" /></h2>\n            <UserEditContributionForm  language={this.props.language}  initialValues={this.props.userContributionItem}   backNavigation={this.backNavigation.bind(this)} />\n          </div>\n      </div> \n      <Footer logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n     </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.loginSignUpReducer, ...state.settingsReducer, ...state.contributionsReducer, ...state.usersReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(UserContributionDetails);","import { SET_CURRENT_SUBJECT_ID, SET_TESTING_SESSION_HASH, SET_CURRENT_SUBJECT_NAME, SET_CURRENT_QUESTION, SET_ANSWERS, \n    SET_NUMBER_OF_ANSWERED, SET_NUMBER_OF_CORRECT, SET_IF_REMAIN_QUESTIONS, SET_CORRECT_ANSWER_ID, SET_IF_TO_SHOW_TEST_HINTS_BORDER,\n    SET_IF_TO_SHOW_TEST_HINTS } from '../types'\n\nlet testState={\n    currentSubjectId: '',\n    testingSessionHash: '',\n    currentSubjectName: '',\n    currentQuestion: '',\n    answers: [],\n    numberOfAnsweredQuestions: 0,\n    numberOfCorrectQuestions: 0,\n    ifRemainQuestions: 1,\n    correctAnswerId: '',\n    toShowTestingHints: \"0\",// in general , we can disable test hints in account settings\n    toShowTestHintsBorder: 0,\n    testHintsBorderTimeout: 3000,// how long to show test hints border\n}\n\nconst testReducer = (state=testState, action)=>{\n    switch (action.type){\n    case SET_CURRENT_SUBJECT_ID:\n        return {\n            ...state,\n            currentSubjectId: action.id     \n        } \n\n    case SET_CURRENT_SUBJECT_NAME:\n        return {\n            ...state,\n            currentSubjectName: action.name     \n    }\n\n    case SET_IF_TO_SHOW_TEST_HINTS_BORDER:\n        return {\n            ...state,\n            toShowTestHintsBorder: action.visibility \n    }\n\n    case SET_TESTING_SESSION_HASH:\n        return {\n            ...state,\n            testingSessionHash: action.testingSessionHash     \n    }\n\n    case SET_CURRENT_QUESTION:\n        return {\n            ...state,\n            currentQuestion: action.currentQuestion     \n    }\n\n    case SET_ANSWERS:\n        return {\n            ...state,\n            answers: action.answers    \n    }\n\n    case SET_NUMBER_OF_ANSWERED:\n        return {\n            ...state,\n            numberOfAnsweredQuestions: action.number    \n    }\n\n    case SET_NUMBER_OF_CORRECT:\n        return {\n            ...state,\n            numberOfCorrectQuestions: action.number    \n    }\n\n    case SET_IF_REMAIN_QUESTIONS:\n        return {\n            ...state,\n            ifRemainQuestions: action.number    \n    }\n\n    case SET_CORRECT_ANSWER_ID:\n        return {\n            ...state,\n            correctAnswerId: action.id    \n    }\n\n    case SET_IF_TO_SHOW_TEST_HINTS:\n        return {\n            ...state,\n            toShowTestingHints: action.ifToShowTestingHints    \n    }\n\n    default: \n        return {\n            ...state\n        }\n    }\n} \n\nexport default testReducer;\n\n","import { SET_USERS, CLEAR_SENSITIVE_INFO } from '../types'\n\nlet usersState={\n    users: [],\n}\n\nconst usersReducer = (state=usersState, action)=>{\n    switch (action.type){\n\n    case SET_USERS:\n        return{\n            ...state,\n            users: action.users\n        }\n\n    case CLEAR_SENSITIVE_INFO:\n        return{\n            ...state,\n            users: []\n        }\n\n\n    default: \n        return {\n            ...state\n        }\n    }\n} \n\nexport default usersReducer;\n\n","import { LOAD_RESULTS, CLEAR_SENSITIVE_INFO, SET_RESULTS_FILTER_ACTIVE_SUBJECTS, SET_RESULTS_FILTERED, \n    SET_RESULTS_FILTER_ITEMS_PAGE, SET_RESULTS_FILTER_NUMBER_OF_PAGINATIONS, SET_RESULTS_FILTER_CURRENT_PAGINATION, SET_RESULTS_FILTER_SORTING_OPTION } from '../types'\n\nlet resultsState={\n    results: [],\n    resultsFiltered: [],\n    resultsFilterActiveSubjects: [],\n    resultsFilterPerPage: 10,\n    resultsFilterPaginationNumber: 0,// current pagination\n    resultsFilterPaginationQuantity: 0,// number of paginations\n    resultsFilterSortingOption: \"2\",\n}\n\nconst resultsReducer = (state=resultsState, action)=>{\n    switch (action.type){\n\n    case LOAD_RESULTS:\n        return {\n            ...state,\n            results: action.results,\n            //resultsFiltered: action.results,     \n        } \n\n    case CLEAR_SENSITIVE_INFO:\n        return {\n            ...state,\n            results: [],\n            resultsFiltered: [],\n            resultsFilterActiveSubjects: []\n        }\n\n    case SET_RESULTS_FILTER_ACTIVE_SUBJECTS:\n        return {\n            ...state,\n            resultsFilterActiveSubjects: action.resultsFilterActiveSubjects\n        }\n\n    case SET_RESULTS_FILTERED:\n        return {\n            ...state,\n            resultsFiltered: action.resultsFiltered\n        }\n\n    case SET_RESULTS_FILTER_ITEMS_PAGE:\n        return {\n            ...state,\n            resultsFilterPerPage: action.items\n        }\n\n    case SET_RESULTS_FILTER_NUMBER_OF_PAGINATIONS:\n        return {\n            ...state,\n            resultsFilterPaginationQuantity: action.numberOfPagination\n        }    \n\n    case SET_RESULTS_FILTER_CURRENT_PAGINATION:\n        return {\n            ...state,\n            resultsFilterPaginationNumber: action.currentPagination\n        }     \n\n    case SET_RESULTS_FILTER_SORTING_OPTION:\n        return {\n            ...state,\n            resultsFilterSortingOption: action.sortingOption\n        }          \n\n    default: \n        return {\n            ...state\n        }\n    }\n} \n\nexport default resultsReducer;\n\n","import { SET_LANGUAGE, SET_FLASH_MESSAGES_VISIBILITY, SET_FLASH_MESSAGES_MESSAGE, SET_FLASH_MESSAGES_TYPE, SET_GLOBAL_SETTINGS,\n    SET_COOKIE_CONSENT_VISIBILITY, SET_COOKIE_CONSENT_OBTAINED, CLEAR_SENSITIVE_INFO } from '../types'\n\nlet settingsState={\n    language: 'en',\n    flashMessagesVisibility: 0,\n    flashMessagesMessage: '',\n    flashMessagesType: 'success',// 'error',\n    flashMessagesTimeout: 4000,/// how long user will be able to see flash message\n    needEmailConfirmation: 0,\n    needToShowRecaptcha: 1,\n    cookieConsentVisibility: 0,\n    cookieConsentObtained: 0,\n}\n\nconst settingsReducer = (state=settingsState, action)=>{\n    switch (action.type){\n\n    case SET_LANGUAGE:\n        return{\n            ...state,\n            language: action.lang\n        }\n\n    case SET_FLASH_MESSAGES_VISIBILITY:\n        return{\n            ...state,\n            flashMessagesVisibility: action.flashMessageVisibility\n        }\n\n    case SET_FLASH_MESSAGES_MESSAGE:\n        return{\n            ...state,\n            flashMessagesMessage: action.flashMessageMessage\n        }\n\n    case SET_FLASH_MESSAGES_TYPE:\n        return{\n            ...state,\n            flashMessagesType: action.flashMessageType\n        }\n\n    case SET_GLOBAL_SETTINGS:\n        return{\n            ...state,\n            needEmailConfirmation: action.settings.emailConfirmation,\n            needToShowRecaptcha: action.settings.signupRecaptcha,\n        }\n\n    case SET_COOKIE_CONSENT_VISIBILITY:\n        return{\n            ...state,\n            cookieConsentVisibility: action.cookieConsentVisibility,\n        }\n\n    case SET_COOKIE_CONSENT_OBTAINED:\n        return{\n            ...state,\n            cookieConsentObtained: action.cookieConsenGiven,\n        }\n\n    case CLEAR_SENSITIVE_INFO:\n        return{\n            ...state,\n            cookieConsentObtained: 0,\n        }\n\n    default: \n        return {\n            ...state\n        }\n    }\n} \n\nexport default settingsReducer;","import { LOAD_SUBJECTS_ADMIN, LOAD_SUBJECTS_USER, CLEAR_SENSITIVE_INFO } from '../types'\n\nlet subjectsState={\n    subjectsAdmin: [],\n    subjectsUser: [],\n}\n\nconst subjectsReducer = (state=subjectsState, action)=>{\n    switch (action.type){\n\n    case LOAD_SUBJECTS_ADMIN:\n        return{// for admin is sensitive info\n            ...state,\n            subjectsAdmin: action.subjects\n        }\n\n    case LOAD_SUBJECTS_USER:\n        return{// for user is public info\n            ...state,\n            subjectsUser: action.subjectsUser\n        }    \n\n    case CLEAR_SENSITIVE_INFO:\n        return {\n            ...state,\n            subjectsN: []\n        }\n\n    default: \n        return {\n            ...state\n        }\n    }\n} \n\nexport default subjectsReducer;\n\n","import { SET_USER_NAME, SET_ROLE_ID, SET_JWT_TOKEN, SET_USER_ID, CLEAR_SENSITIVE_INFO, \n    LOGIN_ERROR, SET_SIGNUP_CAPTCHA_TEXT, SET_SUSPENSION_REASON, SET_REDIRECT_FLAG_FOR_RESET_PASWORD_FUNCTION } from '../types'\n\nlet loginSignUpState={\n    loginError: '',\n    loginErrorVisibility: 'hidden',\n    userName: '',   \n    roleId: 0, //0 by default, 2 for admin\n    JWToken: '',\n    userId: '',\n    signupCaptchaText: '',\n    suspensionReason: '',\n    redirectFlagForPasswordresetFunctionality: 1, // when password reset succesfully, we need to redirect user to login page, so this redirect will be controlled by this flag\n}\n\nconst loginSignUpReducer = (state=loginSignUpState, action)=>{\n    switch (action.type){\n    case LOGIN_ERROR:\n        return{\n            ...state,\n            loginError: action.loginError,\n            loginErrorVisibility: action.loginErrorVisibility\n        } \n\n    case SET_USER_NAME:\n        return{\n            ...state,\n            userName: action.userName\n        }\n\n    case SET_JWT_TOKEN:\n        return{\n            ...state,\n            JWToken: action.JWToken\n        }\n\n    case SET_ROLE_ID:\n        return{\n            ...state,\n            roleId: action.roleId\n        }  \n\n    case SET_USER_ID:\n        return{\n            ...state,\n            userId: action.userId\n        } \n\n    case SET_SIGNUP_CAPTCHA_TEXT:\n        return{\n            ...state,\n            signupCaptchaText: action.recaptchaText\n        }\n\n    case CLEAR_SENSITIVE_INFO:\n        return{\n            ...state,\n            userName: '',\n            JWToken: '',\n            userId: '',\n            roleId: 0,\n        }\n\n    case SET_SUSPENSION_REASON:\n        return{\n            ...state,\n            suspensionReason: action.suspensionReason,\n        }\n\n    case SET_REDIRECT_FLAG_FOR_RESET_PASWORD_FUNCTION:\n        return{\n            ...state,\n            redirectFlagForPasswordresetFunctionality: action.redirectFlagForPasswordResetFunction,\n        }\n\n    default: \n        return {\n            ...state\n        }\n    }\n} \n\nexport default loginSignUpReducer;","const messages = {\n    en: {\n      contibute: \"Contribute\",\n      select: \"Please select subject\",\n      addMyQuestions: \"Add my questions\",\n      myQuestionsStatus: \"My added questions' status\",\n      youCanAddQuestions: \"On this page you can share your experience and add questions to our knowledge base. After checking by the moderator, they will be added and available to all users. Please note that maximum length of the answer or question is 1000 characters\",\n      onceAdded: \"Please take into consideration that once added, you can't change or edit your question. To check your question details, just click question status\",\n\n    },\n    ru: {\n      contibute: \"Мои вопросы\",\n      select: \"Пожалуйста, выберите предмет\",\n      addMyQuestions: \"Добавить вопросы\",\n      myQuestionsStatus: \"Статус добавленных мной вопросов\",\n      youCanAddQuestions: \"Hа этой страничке вы можете поделиться своим опытом и добавить в базу знаний вопросы. После проверки модератором они будут добавлены и доступны всем пользователям. Обратите внимание, что максимальная длина ответа или вопроса составляет 1000 символов.\",\n      onceAdded: \"Учтите, что после добавления вы не можете изменить или отредактировать свой вопрос. Чтобы проверить детали своего вопроса, просто нажмите на статус вопроса.\",\n    }\n  };\n\n  export default messages;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/forms/AddContributionForm';\nimport SmartTextArea from '../formelements/SmartTextArea';\n\n\n\nconst validate = values => {\n    const errors = {}\n    if (!values.question) { errors.question = 'Required'  } else if (values.question.length > 1000) { errors.question = 'Must be 1000 characters or less'}\n    if (!values.firstAnswer) {  errors.firstAnswer = 'Required'  } else if (values.firstAnswer.length > 1000) { errors.firstAnswer = 'Must be 1000 characters or less'}\n    if (!values.secondAnswer) {  errors.secondAnswer = 'Required'  } else if (values.secondAnswer.length > 1000) { errors.secondAnswer = 'Must be 1000 characters or less'}\n    if (!values.thirdAnswer) { errors.thirdAnswer = 'Required' } else if (values.thirdAnswer.length > 1000) { errors.thirdAnswer = 'Must be 1000 characters or less'}\n    if (!values.fourthAnswer) { errors.fourthAnswer = 'Required'  } else if (values.fourthAnswer.length > 1000) { errors.fourthAnswer = 'Must be 1000 characters or less'}\n    return errors\n  }\n\nconst AddContributionForm = props => {\n  const { handleSubmit, pristine, reset, submitting, language, backNavigation } = props;\n  const translations = {\n    firstAnswer:  language === 'en' ? messages.en.firstAnswer : messages.ru.firstAnswer,\n    secondAnswer:  language === 'en' ? messages.en.secondAnswer : messages.ru.secondAnswer,\n    thirdAnswer:  language === 'en' ? messages.en.thirdAnswer : messages.ru.thirdAnswer,\n    fourthAnswer:  language === 'en' ? messages.en.fourthAnswer : messages.ru.fourthAnswer,\n    question: language === 'en' ? messages.en.question : messages.ru.question,\n    clearValues: language === 'en' ? messages.en.clearValues : messages.ru.clearValues,\n  }\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <form onSubmit={handleSubmit}>\n          <br/> <br />\n        <div>\n            <table style={{width: \"100%\"}} className=\"contributionForm\">\n                <tbody>\n                  <tr><td><Field  name=\"question\"   component={SmartTextArea} label={translations.question} /></td></tr>\n                  <tr><td><br/><br/></td></tr>\n                  <tr><td><Field  name=\"firstAnswer\"   component={SmartTextArea} label={translations.firstAnswer} /></td></tr>\n                  <tr><td><Field  name=\"secondAnswer\"   component={SmartTextArea} label={translations.secondAnswer} /></td></tr>\n                  <tr><td><Field  name=\"thirdAnswer\"   component={SmartTextArea} label={translations.thirdAnswer} /></td></tr>\n                  <tr><td><Field  name=\"fourthAnswer\"   component={SmartTextArea} label={translations.fourthAnswer} /></td></tr>\n\n                </tbody>\n            </table>\n        </div>\n        <br/><br/>\n        <div>\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={pristine || submitting}><FormattedMessage id=\"sendQuestion\" /></button>&nbsp;&nbsp;&nbsp;\n          <button type=\"button\" className=\"btn btn-danger\" disabled={pristine || submitting} onClick={reset}><FormattedMessage id=\"clearValues\" /></button>\n        </div>\n      </form>\n    </IntlProvider>\n  );\n};\n\nexport default reduxForm({\n  form: 'addContibutionFormRedux', \n  validate\n})(AddContributionForm);","import React from 'react'\nimport TopNavigation from './TopNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Contribution';\nimport { withCookies } from 'react-cookie';\nimport Footer from './Footer';\nimport AddContributionForm from \"./forms/AddContributionForm\";\n\n\nclass AddMyQuestions extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    this.state = {\n        currentSubjectId: '',\n        currentSubjectName: '',\n    };\n  }\n\n  componentDidMount(){\n    this.props.setCurrentContributionSubjectId('');\n    this.props.loadSubjectsUsers();\n  }\n\n  onDropdownChange = (event) => {\n    const subjName = this.props.subjectsUser.filter(value => value.id == event.target.value);\n    this.setState({\n      currentSubjectId: event.target.value,\n      currentSubjectName: subjName\n    })\n    this.props.setCurrentContributionSubjectId(event.target.value);\n    if(subjName[0]){\n      this.props.setCurrentContributionSubjectname(subjName[0].name);\n    } else {\n      this.props.setCurrentContributionSubjectname('');\n    }\n  };\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n          <TopNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          <div className=\"container\">\n            <h2><FormattedMessage id=\"addMyQuestions\" /></h2>\n            <br />\n            <FormattedMessage id=\"youCanAddQuestions\" />\n            <br /><br />\n            <select className=\"form-control\" onChange={this.onDropdownChange}>\n                <FormattedMessage id=\"select\">{(formattedValue)=>(<option key=\"0\" value=\"\">{formattedValue}</option>)}</FormattedMessage>{/* ugly way to get just translated string, but this works */}\n                {this.props.subjectsUser.map((value) => (<option key={value.id} value={value.id}>{value.name}</option>)) }\n            </select>\n            <div style={this.props.contributionSubjectId === '' ? {display: 'none'} : {}} >\n              <AddContributionForm onSubmit={()=>{this.props.sentMyContribution()}} language={this.props.language}/>\n            </div>\n          </div>\n        </div>\n        <Footer logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n     </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.loginSignUpReducer, ...state.settingsReducer, ...state.subjectsReducer, ...state.testReducer, ...state.contributionsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(withCookies(AddMyQuestions));","import { SET_CURRENT_CONTRIBUTION_SUBJECT_ID, SET_CURRENT_CONTRIBUTION_SUBJECT_NAME,  \n    SET_ADMIN_CONTRIBUTION, SET_CONTRIBUTION_CONTENT, SET_REDIRECT_FLAG_FORADMIN, SET_USER_CONTRIBUTION, SET_USER_CONTRIBUTION_ITEM, CLEAR_SENSITIVE_INFO } from '../types'\n\n\nlet contributionState={\n    contributionSubjectId: '',\n    contributionSubjectName: '',\n    adminContribution: '',/// set of all contributions \n    adminContributionItem: '',///particular contributions id \n    redirectAfterSuccesfullAdministeringForAdmin: 1,  /// if 2, will redirect to contributions page from contribution item page\n    userContribution: '',/// set of all contributions for given user \n    userContributionItem: '',///particular contributions for given user\n}\n\nconst contributionsReducer = (state=contributionState, action)=>{\n    switch (action.type){\n\n    case SET_CURRENT_CONTRIBUTION_SUBJECT_ID:\n        return {\n            ...state,\n            contributionSubjectId: action.subjectId,\n        } \n\n    case SET_CURRENT_CONTRIBUTION_SUBJECT_NAME:\n        return {\n            ...state,\n            contributionSubjectName: action.subjectName,\n        } \n\n    case SET_ADMIN_CONTRIBUTION:\n        return {\n            ...state,\n            adminContribution: action.contributionAdminResults,\n        } \n\n    case SET_CONTRIBUTION_CONTENT:\n        return {\n            ...state,\n            adminContributionItem: action.contributionAdminItemResults,\n        }\n\n    case SET_REDIRECT_FLAG_FORADMIN:\n        return {\n            ...state,\n            redirectAfterSuccesfullAdministeringForAdmin: action.redirectFlagForAdmin,\n        }\n\n    case SET_USER_CONTRIBUTION:\n        return {\n            ...state,\n            userContribution: action.userContribution,\n        }\n\n    case SET_USER_CONTRIBUTION_ITEM:\n        return {\n            ...state,\n            userContributionItem: action.contributionUserItemResults,\n        }\n\n    case CLEAR_SENSITIVE_INFO:\n        return{\n            ...state,\n            userContributionItem: '',\n            userContribution: '',\n            adminContributionItem: '',\n            adminContribution: 0,\n        }\n\n    default: \n        return {\n            ...state\n        }\n    }\n} \n\nexport default contributionsReducer;\n\n","import React from 'react';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/EditSubjRow';\nimport { Link } from 'react-router-dom';\n\nexport default class EditMyContributionRow extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.contribution.resultId,\n            status: this.props.contribution.status,\n        }\n    }\n\n    render(props) {\n        const { userName, subjectName, createdAt, status } = this.props.contribution;\n        const { language } = this.props;\n        let statusWord = status == 0 ? 'pending' : status == '1' ? 'approved' : 'declined';\n        let url = '/app/mycontribution/' + this.state.id;\n      return  (\n        <>\n            <IntlProvider locale={language} messages={messages[language]}>\n                <tr>\n                    <td > { subjectName } </td>\n                    <td > { createdAt } </td>\n                    <td style={status == '0' ? {backgroundColor: '#efe756'} : status == '1' ? {backgroundColor: '#9dd49b', color: 'white !important'} : {backgroundColor: '#efc9c9', color: 'white !important'}} > \n                       <Link to={url}>{ statusWord }</Link>\n                    </td>\n                </tr>\n            </IntlProvider>\n        </>\n    );\n    }\n}","import React from 'react';\nimport EditMyContributionRow from './EditMyContributionRow';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/EditContributionForm';\n\nconst MyContributionStatus = props => {\n  const { contributions, language, users } = props;\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <table className=\"table\">\n          <thead>\n            <tr>\n              <th><FormattedMessage id=\"subject\" /></th>\n              <th><FormattedMessage id=\"createdAt\" /></th>\n              <th><FormattedMessage id=\"status\" /></th>\n            </tr>\n          </thead>\n          <tbody>\n            {Array.from(contributions).map(contribution => <EditMyContributionRow contribution={contribution}  language={language} key={contribution.resultId}/> )}\n          </tbody>\n      </table>\n    </IntlProvider>\n  );\n};\n\nexport default MyContributionStatus;","import React from 'react'\nimport TopNavigation from './TopNavigation';\nimport Footer from './Footer';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Contribution';\nimport { withCookies } from 'react-cookie';\nimport MyContributionStatus from \"./forms/MyContributionStatus\";\n\nclass MyQuestionsStatus extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n  }\n\n  componentDidMount(){\n    this.props.loadContributionUser();\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n          <TopNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          <div className=\"container\">\n            <h2><FormattedMessage id=\"myQuestionsStatus\" /></h2>\n            <br />\n            <FormattedMessage id=\"onceAdded\" />\n            <br /><br />\n            <MyContributionStatus  contributions={ this.props.userContribution } language={this.props.language} />\n          </div>\n      </div>\n      <Footer logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n     </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.loginSignUpReducer, ...state.settingsReducer, ...state.contributionsReducer, ...state.usersReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(withCookies(MyQuestionsStatus));","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\n\nconst NonAuthorizedRoute = props => {\n  if (props.roleId !== 0) return <Redirect to=\"/app\" />;\n  return <Route {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  roleId: state.loginSignUpReducer.roleId\n});\n\nexport default connect(mapStateToProps)(NonAuthorizedRoute);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\n\nconst AuthorizedRouteUser = props => {\n  if (props.roleId === 0) return <Redirect to=\"/app\" />;\n  return <Route {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  roleId: state.loginSignUpReducer.roleId\n});\n\nexport default connect(mapStateToProps)(AuthorizedRouteUser);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\n\nconst AuthorizedRouteAdmin = props => {\n  if (props.roleId === 0 || props.roleId === 1) return <Redirect to=\"/app\" />;\n  return <Route {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  roleId: state.loginSignUpReducer.roleId\n});\n\nexport default connect(mapStateToProps)(AuthorizedRouteAdmin);","import 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './components/Home';\nimport './index.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\n\nimport Test from './components/Test';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport Users from './components/Users';\nimport Resultsn from './components/Resultsn';\nimport Subjects from './components/Subjects';\nimport AboutCookie from './components/AboutCookie'\nimport FlashMessage from './components/FlashMessage';\nimport CookieConsent from './components/CookieConsent';\nimport PasswordReset from './components/PasswordReset';\nimport AdminSettings from './components/AdminSettings';\nimport ForgotPassword from './components/ForgotPassword';\nimport AccountSettings from './components/AccountSettings';\nimport AdminContribution from './components/AdminContribution';\nimport AdminContributionDetails from './components/AdminContributionDetails';\nimport UserContributionDetails from './components/UserContributionDetails';\n\nimport {createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport {Provider} from 'react-redux';\nimport testReducer from \"./reducers/testing\";\nimport usersReducer from \"./reducers/users\";\nimport resultsReducer from \"./reducers/results\";\nimport settingsReducer from \"./reducers/settings\";\nimport subjectsReducer from \"./reducers/subjects\";\nimport loginSignUpReducer from \"./reducers/loginsignup\";\nimport AddMyQuestions from './components/AddMyQuestions';\nimport contributionsReducer from \"./reducers/contribution\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport MyQuestionsStatus from './components/MyQuestionsStatus';\nimport NonAuthorizedRoute from './components/authorization/NonAuthorized';\nimport AuthorizedRouteUser from './components/authorization/AuthorizedRouteUser';\nimport AuthorizedRouteAdmin from './components/authorization/AuthorizedRouteAdmin';\nimport { reducer as formReducer } from 'redux-form';\n\n\n\nconst rootReducer = combineReducers({\n  testReducer,\n  usersReducer,\n  loginSignUpReducer,\n  resultsReducer,\n  subjectsReducer,\n  settingsReducer,\n  contributionsReducer,\n  form: formReducer\n})\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n//const store = createStore(rootReducer, applyMiddleware(thunk));\n\n\nclass App extends React.Component{\n  render(){\n    return(\n        <Router>\n          <div>\n            <FlashMessage />\n            <CookieConsent />\n            <Route exact path=\"/app\" component={Home} />\n            <NonAuthorizedRoute exact path=\"/app/test\" component={Test}/>\n            <NonAuthorizedRoute exact path=\"/app/aboutcookie\" component={AboutCookie}/>\n            <NonAuthorizedRoute exact path=\"/app/resetpassword\" component={PasswordReset} />\n            <NonAuthorizedRoute exact path=\"/app/login\" component={Login}/>\n            <NonAuthorizedRoute exact path=\"/app/signup\" component={Signup} />\n            <NonAuthorizedRoute exact path=\"/app/forgotpassword\" component={ForgotPassword} />\n            <AuthorizedRouteAdmin exact path=\"/app/users\" component={Users} />\n            <AuthorizedRouteAdmin exact path=\"/app/adminsettings\" component={AdminSettings} />\n            <AuthorizedRouteAdmin exact path=\"/app/subjects\" component={Subjects} />\n            <AuthorizedRouteAdmin exact path=\"/app/admincontribution\" component={AdminContribution} />\n            <AuthorizedRouteAdmin exact path=\"/app/admincontribution/:id\" component={AdminContributionDetails} />\n            <AuthorizedRouteUser exact path=\"/app/resultsn\" component={Resultsn} />\n            <AuthorizedRouteUser exact path=\"/app/test\" component={Test} />\n            <AuthorizedRouteUser exact path=\"/app/addmyquestion\" component={AddMyQuestions} />\n            <AuthorizedRouteUser exact path=\"/app/myquestionstatus\" component={MyQuestionsStatus} />\n            <AuthorizedRouteUser exact path=\"/app/accountsettings\" component={AccountSettings} />\n            <AuthorizedRouteUser exact path=\"/app/mycontribution/:id\" component={UserContributionDetails} />\n          </div>\n      </Router>\n    )\n  }\n}\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('app'));\n\nexport default store;\n\n\n"],"sourceRoot":""}