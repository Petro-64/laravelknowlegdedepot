{"version":3,"sources":["translations/TopNavigation.js","components/formelements/ToggleLanguageButton.js","components/formelements/AvatarMy.js","components/MaterialUiNavigation.js","helpers/Helpers.js","actions/testing.js","types/index.js","translations/actions/loginsignup.js","actions/snackBarControl.js","actions/loginsignup.js","actions/users.js","translations/actions/subjects.js","actions/subjects.js","actions/results.js","actions/settings.js","actions/contribution.js","translations/Questions.js","actions/questions.js","actions/comments.js","actions/search.js","translations/Home.js","components/Home.js","translations/CountDown.js","styled/StyledCountDown.js","components/formelements/Countdown.js","translations/Test.js","components/formelements/ModalMUI.js","styled/StyledTesting.js","components/formelements/MuiDropDownMenu.js","components/Test.js","translations/Login.js","components/forms/loginFormN.js","components/MaterialUiNavigationMini.js","components/LoginN.js","translations/EditSubjRow.js","styled/StyledModal.js","components/formelements/Modal.js","components/formelements/Prompt.js","components/forms/EditUsertRow.js","translations/EditSubjectForm.js","components/forms/EditUsersForm.js","translations/Users.js","styled/StyledAccordeon.js","components/Users.js","components/formelements/Captcha.js","translations/Signupform.js","components/forms/signupFormN.js","components/formelements/SmartField.js","components/forms/signupFormNoRecaptcha.js","translations/Signup.js","components/Signup.js","components/formelements/Checkbox.js","components/formelements/Select.js","styled/StyledPagination.js","components/formelements/Pagination.js","translations/Resultsn.js","components/Resultsn.js","translations/AddSubjForm.js","components/forms/addSubjectForm.js","components/forms/EditSubjectRow.js","components/forms/EditSubjectForm.js","translations/Subjects.js","components/Subjects.js","translations/AboutCookie.js","components/AboutCookie.js","styled/StyledCookieConsent.js","translations/CookieConsent.js","components/CookieConsent.js","components/forms/passwordresetform.js","translations/PasswordReset.js","components/PasswordReset.js","components/AdminSettings.js","translations/Forgotpassword.js","components/Captcha.js","components/forms/ForgotPasswordForm.js","components/ForgotPassword.js","translations/AccountSettings.js","components/forms/ChangePasswordForm.js","components/AccountSettings.js","styled/StyledFlashMessage.js","components/formelements/FlashMessage.js","styled/StyledFeedbackButton.js","translations/forms/AddCommentForm.js","components/formelements/TextAreaCounterPeter.js","components/forms/AddCommentForm.js","components/formelements/FeedbackButton.js","components/formelements/MuiFlashMessage.js","styled/StyledSpinningOverlay.js","components/SpinningOverlay.js","translations/forms/AddContributionForm.js","components/formelements/SmartTextArea.js","components/forms/AdminEditQuestionForm.js","components/AdminEditQuestion.js","components/forms/AdminEditContributionForm.js","components/AdminAddQuestions.js","translations/AdminContribution.js","components/forms/EditContributionRow.js","translations/EditContributionForm.js","components/forms/EditContributionForm.js","components/AdminContribution.js","styled/StyledEditQuestionrRow.js","components/forms/EditQuestionrRow.js","components/forms/EditQuestionTable.js","components/formelements/PaginationSimple.js","components/AdmineditQuestions.js","components/AdminContributionDetails.js","components/forms/UserEditContributionForm.js","styled/StyledUserContributionItem.js","components/UserContributionDetails.js","translations/SearchForQuestions.js","styled/StyledQuestionSearch.js","components/forms/QuestionSearchResultRow.js","components/forms/SearchQuestionByKeyWord.js","components/AdminSearchQuestion.js","translations/Comments.js","api/index.js","urls/index.js","api/comment.js","sagas/sagaUtilities.js","sagas/comment.js","translations/Contribution.js","api/contribution.js","sagas/contribution.js","api/questions.js","sagas/questions.js","api/ratelimiter.js","sagas/ratelimiter.js","translations/AddQuestionReport.js","api/addquestionreport.js","sagas/addquestionreport.js","api/search.js","sagas/search.js","sagas/searchQuestions.js","sagas/index.js","reducers/testing.js","reducers/users.js","reducers/results.js","reducers/settings.js","reducers/comments.js","reducers/subjects.js","reducers/questions.js","reducers/loginsignup.js","components/forms/AddContributionForm.js","components/AddMyQuestions.js","reducers/contribution.js","components/forms/MuiMyContributionStatus.js","components/MyQuestionsStatus.js","components/authorization/NonAuthorized.js","components/authorization/AuthorizedRouteUser.js","components/authorization/AuthorizedRouteAdmin.js","index.js"],"names":["messages","en","home","test","testYourKnow","login","register","logout","testResults","users","subjects","admin","hi","settings","contibute","makeContribution","myContrributionStatus","globalSettings","contribution","addQuestion","editQuestion","changePassword","searchForQusestion","ru","ToggleLanguageButton","toggleLanguage1","props","language","toggleLanguage","onClick","this","bind","className","style","display","Component","AvatarMy","result","firstLetter","userName","substring","MaterialUiNavigation","anchor","React","top","left","bottom","right","state","setState","toggleDrawer","open","event","type","key","anchorElUser","setAnchorElUser","handleCloseUserMenu","selectedIndex","setSelectedIndex","handleClick","index","locale","AppBar","position","Toolbar","disableGutters","sx","mx","width","Box","flexDirection","p","m","IconButton","size","aria-label","aria-controls","aria-haspopup","mr","color","pl","pt","ml","to","variant","underline","Tooltip","title","currentTarget","Menu","mt","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","onClose","roleId","MenuItem","logoutUser","Typography","textAlign","Drawer","mb","role","justifyContent","List","ListItemButton","ListItemText","Collapse","in","timeout","unmountOnExit","ListItemIcon","Divider","marginTop","helpers","UrlSniffer","window","location","host","includes","X_CSRF_TOKEN","undefined","document","getElementsByTagName","content","FilterBySubjectsAndSort","initialResults","activeSubjects","sortingOption","filteredBySubjects","filter","subjectName","sort","a","b","createdAt","quality","PaginatedResults","filteredBySubjectsAndSort","resultsFilterPerPage","resultsFilterPaginationNumber","SimplePaginatedResults","items","itemsPerPage","currentPagination","makeRandom","text","possible","i","charAt","Math","floor","random","length","BaseUrl","processTesting","testingSessionHash","answerId","headers","store","getState","loginSignUpReducer","JWToken","dispatch","axios","post","then","response","data","payload","success","message","testReducer","toShowTestingHints","setCurrentQuestion","question","setAnswers","answersToShow","setNumberOfAnswered","answered","setNumberOfCorrect","correct","setIfRemainQuestions","ifRemainQuestions","setCorrectAnswerId","correctAnswerId","setCurrentQuestionId","questionId","setHintsBorderVisibility","setOverlayVisibilityDispatch","catch","error","startNewTest","currentSubjectId","testingSessionId","saveTestingSessionHash","setRemainingQuestionsToZero","setRemainingQuestionsToZeroDispatch","setIfToShowTestingHints","value","setIfToShowTestingHintsDispatch","destroyTemporaryTestingQuestions","ifToDestroyTemporaryQuestions","setCurrentSubjectId","setCurrSubjectIdRedux","setOverlayVisibility","bool","visibility","setCurrentSubjectName","name","setCurrSubjectNameRedux","setTestingSessionHash","currentQuestion","answers","ifToShowTestingHints","number","accountCreateSuccess","wrongRecaptcha","logoutSuccess","emailConfirmationSuccess","forgotPasswordSuccess","verifyaddress","enterTextInBlue","newpasswordsavedsucess","emailTaken","nameTaken","wrongEmailPassword","showMuiFlashMessage","muiFlashMessageVisibility","muiFlashMessageMessage","changeMuiFlashMessageMessage","muiFlashMessageType","changeMuiFlashMessageType","loginUserRedux","email","form","loginFormRedux","values","password","translations","settingsReducer","setRoleId","role_id","setUserName","suspensionReason","suspension_reason","setJWToken","jwt_token","setUserId","setCookieConsenGiven","cookie_consent_given","clearSensitiveinfo","setTimeout","createHideLoginError","signup","errorMessage","signupForm","recaptchaFromStore","signupCaptchaText","recaptchaFromForm","captcha","ifRecaptchaEnabled","needToShowRecaptcha","reset","setRedirectFlagForPasswordResetFunction","setRedirectFlagForPasswordResetFunctioDispatch","sentForgotPasswordForm","username","forgotPasswordFormRedux","resetPassword","passwordresetform","passwordRepeat","repeatpassword","setMuiFlashVisibility","changeMuiFlashMessageVisibility","resendEmailConfirmation","userId","get","responce","alert","setRecaptchaText","recaptchaText","setRecaptchaTextDispatch","redirectFlagForPasswordResetFunction","cookieConsenGiven","loginError","loginErrorVisibility","loadUsers","setUsers","deleteUser","delete","showFlashMessage","toggleuserconfirm","toggleusersuspend","reason","flashMessagesTimeout","changeFlashMessageVisibility","flashMessageMessage","changeFlashMessageMessage","flashMessageType","changeFlashMessageType","flashMessageVisibility","subjEditSuccess","subjdeleteSuccess","subjAddSuccess","loadSubjects","changeSubjectsAdmin","saveSubject","deleteSubject","addSubjectOne","JWT","subject","addSubjectForm","loadSubjectsAdmin","toggleSubjectActivity","selectedCheckboxes","Set","map","add","ResultsFilterActiveSubjects","changeSubjectsUser","loadSubjectsUsers","subjectsUser","resultsFilterActiveSubjects","loadResults","resultsReducer","resultsFilterBySubjectsAndSort","results","resultsFilterSortingOption","setNumberOfPaginationAction","ceil","setResultsFiltered","setResultsFilterActiveSubjects","numberOfPagination","setNumberOfPagination","resultsFiltered","setItemsPerPage","setItemPerPage","setCurrentPaginationAction","setCurrentPagination","setSortingOptionAction","setSortingOption","setLanguage","lang","setLanguageDispatch","changePasswordFormRedux","toggleEmailConfirmation","changeSettingsAdmin","toggleRecaptcha","loadGlobalSettings","setCookieConsentVisibility","setCookieConsentVisibilityDispatch","cookieConsentVisibility","setCurrentContributionSubjectId","subjectId","setCurrSubjectContributionIdRedux","setCurrentContributionSubjectname","setCurrSubjectContributionNameRedux","sentMyContributionSaga","firstAnswer","secondAnswer","thirdAnswer","fourthAnswer","sentMyContributionSagADispatch","saveContributionAdmin","editContibutionFormAdminRedux","uncorrect0","uncorrect1","uncorrect2","answerCorrect","contibutionid","setContributionItemAdminResults","setRedirectFlagForAdminDispatch","declineContributionAdmin","clearAdminContributionItem","loadContributionAdmin","contributionAdminResults","contibution","loadContributionItemAdmin","loadContributionItemUser","contributionUserItemResults","loadContributionUser","userContribution","setRedirectFlagForAdmin","redirectFlagForAdmin","contributionAdminItemResults","firstt","select","currentSubject","questHasBeenAddedSucc","filterResults","status","cleareditedList","loadQuestions","questionsReducer","currentSubjId","currentStatus","setNumberOfQuestionsToEdit","questions","setQuestionsToEdit","paginatedQuestions","setResultsPaginated","toggleQuestionActivity","resetQuestionsSet","loadAnswers","setAnswersToDispatch","loadQuestionsAndAnswersToEditAdmin","editQuestionsSaga","editedValues","editQuestionsSagaDispatch","editSearchQuestionsSaga","editSearchQuestionsSagaDispatch","deleteQuestion","ifNeedToRedirect","adminEditQuestionItem","pushQuestionIdToIdsArray","parseInt","setRedirectFlagToBackToQuestionsList","setCurrentPaginationDispatch","pushQuestionIdToIdsArrayDispatch","n","setRedirectFlagToBackToQuestionsListDispatch","setSubjName","setCurrentSubjectNameDispatch","clearEditedQuestionsList","clearEditedQuestionsListDispatch","clearQuestions","setResultsPaginatedDispatch","setStatus","setStatusDispatch","setCurrentSubjectIdToAddQuestion","setCurrSubjectIdReduxToAddQuestion","addNewQuestionAdmin","currentLang","postComment","comment","route","postCommentDispatch","postReport","postReportDispatch","getRatelimiterSettings","searchQuestionByKeyWord","questionsearchkeyword","setRedirectFlag","aboutProject","atTheMomentWeHave","aboutSystem","thanksforregistration","haventReceivedLink","numberofqiestions","resendLink","accountHasBeenSuspended","pleasedContactAdminToRestoreAccountStatus","Home","child","createRef","cookies","mycookie","mycookieRedirectToResetPassword","needToRedirectToLogin","needToRedirectToresetPassword","history","push","columns","dataField","buttonText","keyField","Button","connect","subjectsReducer","actionCreators","withCookies","timeLeft","seconds","StyledCountDown","styled","div","degrees","colorr","Countdown","time","widthh","bgcolor","timer","startTimer","countDown","resetTimer","secs","divisor_for_minutes","divisor_for_seconds","timeLeftVar","secondsToTime","clearInterval","setInterval","dynamicWidth","s","stopFunction","dynamicDegrees","backgroundColor","tests","noRegistrationNeeded","ifYouWouldLike","herre","answeredQuestions","justClickCorrectAnswer","clickToStop","allQuestionAreAnswered","correctAnswers","doneThanks","myResults","startYour","pleaseConfirmTestStop","stopTesting","backToTest","reportQuestion","anotherTest","ModalMUI","show","showModal","hideModal","e","clickYes","toExecute","handleChildClick","stopPropagation","handleClose","Dialog","DialogTitle","DialogContent","Styledtesting","MuiDropDownMenu","setAnchorEl","clickToSelect","myOptions","options","selectedSubj","component","ListItem","button","aria-expanded","primary","secondary","MenuListProps","option","indd","selected","onMuiDropdownChange","handleMenuItemClick","Test","jqueryClickEmulation","$","trigger","onDropdownChange","subjName","target","currentSubjectName","answerClicked","countdown","current","corrAnswerId","startTestingButtonClicked","stopTestingButtonClicked","navigateOutFromTestingPage","navigateOnTest","resetAll","modall","getElementsByClassName","addEventListener","preventDefault","currentQuestionId","StyledTesting","ref","numberOfAnsweredQuestions","padding","numberOfCorrectQuestions","toShowTestHintsBorder","outline","data-id","openModal","clearValues","emailAddress","forgotpassword","senddata","emailIssue","required","renderField","input","label","meta","touched","err","warning","helpertextt","TextField","helperText","fullWidth","renderPasswordField","whatToShow","reduxForm","validate","errors","handleSubmit","pristine","submitting","errorMessageVisibility","valid","toggleVisibility","onSubmit","Field","aria-hidden","opacity","disabled","MaterialUiNavigationMini","Loginn","handleChangeMail","handleChangePassword","passwordType","cook","remove","active","questionNumber","edit","save","hidden","active1","approved","declined","pending","StyledModal","Modal","titlle","Prompt","onChange","rows","cols","placeholder","EditUserRow","user","user_id","promptt","resultsNumber","openPromptt","EditSubjectForm","StyledAccordeon","Users","allowMultipleExpanded","allowZeroExpanded","EditUsersForm","usersReducer","Captcha","canvasRef","useRef","useEffect","context","getContext","fillStyle","fillRect","canvas","height","font","fillText","ctx","beginPath","arc","PI","fill","confirmPasword","fourOrMore","eightOrMore","fifteenOrLess","passworsNotMatching","SignupFormN","onRecaptcaClick","toShowPasswordMeter","passwordretype","initialValues","SmartField","isHidden","word","dirty","togglePasswordVisibility","fontSize","SignupFormNoRecaptcha","Signup","componentDidMount","recaptchaClick","recaptcatext","Checkbox","isChecked","toggleCheckboxChange","handleCheckboxChange","checked","Select","defaultt","StyledPagination","Pagination","paginationQuantity","paginationNumber","paginationClick","Array","_","belowAreResults","sortingOptons","score","testDateAsc","testDateDesc","resultsAsc","resultsDesc","subjAsc","subjsDesc","noResults","Resultsn","filterresults","toggleCheckbox","has","createCheckbox","createCheckboxes","onDropdownChangeItemsPerPage","onDropdownChangeSortingOptions","resultsPerPage","sortOptions","Accordion","AccordionSummary","expandIcon","AccordionDetails","resultsFilterPaginationQuantity","clearVal","submit","formattedValue","EditSubjectRow","handleChangeName","isInputHidden","editMode","questions_number","activePhrase","toggleEditModeTrue","subjControlCenter","atTheMomentSubjList","Subjects","subjectsAdmin","aboutCookieTitle","aboutCookieText","AboutCookie","StyledCookieConsent","ifVisible","consent","agree","details","CookieConsent","cookieConsentObtained","set","path","expires","Date","now","hideConsent","passwordreset","PasswordReset","redirectFlagForPasswordresetFunctionality","AdminSettings","needEmailConfirmation","send","pleaseEnter","andor","ForgotPassword","accountSettings","setCurrentLanguage","wantToSeeHints","ifYesHints","pleaseKeepInMind","enterNewPassw","repeatNewPassw","mustBe8CharOrMore","mustBe15CharactersOrLess","passwordsDoNotMatch","checkPassword","allValues","repeatPassword","ChangePasswordForm","AccountSettings","toggleLanguageInternal","toggleShowHintsInternal","minHeight","StyledFlashMessage","bGcolorr","FlashMessage","flashMessagesVisibility","flashMessagesType","flashMessagesMessage","StyledFeedbackButton","visib","sendFeedback","cancel","addFeedback","limit","howAreWeDoing","maximumNumberOfComments","perDay","TextAreaCounterPeter","CHARACTER_LIMIT","useState","setValues","inputProps","maxLength","margin","multiline","AddCommentForm","cancell","commentsReducer","FeedbackButton","clickSend","handleClickOpen","href","indexOf","commentRateLimiterQuantity","selector","formValueSelector","Alert","forwardRef","elevation","MuiFlashMessage","that","muiFlashMessagesTimeout","severity","muiFlashMessagesType","Snackbar","muiFlashMessagesMessage1","StyledSpinningOverlay","SpinningOverlay","spinnerOverlayVisibility","sendQuestion","approveAndsaveQuestion","saveQuestionAndReturnToQuestionsList","saveAndMoveToNextQuestions","declineQuestion","backToContributionPage","saveAndGoToTheNextQuestion","saveAndGoToThePrevQuestion","deleteAndReturn","deleteAndLoadNext","seeMyContributionStatus","saveQuestion","SmartTextArea","marginBottom","fontWeight","AdminEditQuestionForm","backNavigation","nextIsAvailable","loadnextQuestion","loadPrevQuestion","prevIsAvailable","prevPath","backNavigationsearch","saveSearchQuestion","enableReinitialize","AdminEditQuestion","isThisTheLastQuestionForGivenSubject","isThisTheFirstQuestionForGivenSubject","nextQuestionId","prevQuestionId","redirectAfterSuccesfullQuestionsSaving","match","params","questionsFiltered","questionsFilteredPrev","questionFromForm","fourthAnswerFromForm","correctId","firstAnswerFromForm","secondAnswerFromForm","thirdAnswerFromForm","uncorrectId0","uncorrectId1","uncorrectId2","questionsFilteredNext","ifNeedToRedirectToSearch","console","log","declineFunction","loadNextQuestion","AdminEditContributionForm","showAllButtons","AdminAddQuestions","editContibution","myConrtibutionDetails","creationDate","EditContributionRow","resultId","statusWord","url","noAddedQuestions","EditContributionForm","contributions","from","AdminContribution","adminContribution","contributionsReducer","StyledEditQuestionrRow","tr","EditQuestionrRow","onTdRollover","created_at","edited","editedQuestionsArray","onMouseOver","onRollover","answer","toggleQuestActivity","EditQuestionTable","PaginationSimple","numberOfPaginations","totalNumberOfItems","AdmineditQuestions","resultsPaginated","onDropdownChangeStatus","subjNameObj","activityDropdown","numberOfQuestionsBySubject","questionsPaginated","recentlyEditedQuestionsarray","AdminContributionDetails","handleChange","redirectAfterSuccesfullAdministeringForAdmin","adminContributionItem","UserEditContributionForm","class","StyledUserContributionItem","UserContributionDetails","userContributionItem","questionStatus","searchByKeyword","searchById","keyword","search","searchSuccess","searchError","StyledQuestionSearch","td","QuestionSearchResultRow","subject_id","keyWord","highlightClassName","searchWords","autoEscape","textToHighlight","pathname","AdminSearchQuestion","foundQuestionsByWord","commenttSuccess","commenttError","createHeader","urls","addComments","addContribution","adminEditQuestion","getRateLimiter","addquestionreport","searchQuestionByKey","createComment","showHideSpinnerAndMessage","overlayVisibility","flashVisibility","flashType","all","put","delay","commentSuccess","rateLimiters","call","responceData","addMyQuestions","myQuestionsStatus","youCanAddQuestions","onceAdded","addSuccess","addError","pleaseselectASubject","maximumNumberOfContributions","sendContributionSaga","postContribution","contributionRateLimiterQuantity","editQuestionPost","getQuestionsBySubjectAndStatus","postEditQuestions","getResponceData","getRateLimiterApi","commentRatelimiterComments","commentRatelimiterHours","contributeRatelimiterHours","contributeRatelimiterContributions","questionReportRatelimiterHours","questionReportRatelimiterReports","addQuestionReport","addQuestReport","searchQuestionsByKeyApi","searchQuestionsByKey","postEditSearchQuestions","commentsActionWatcher","contributionActionWatcher","editQuestionsActionWatcher","addQuestionReportWatcher","getRateLimiterWatcher","searchQuestionsByKeyWordWatcher","editFoundByKeyWordQuestionsActionWatcher","rootSaga","takeLatest","testState","testHintsBorderTimeout","action","usersState","resultsState","settingsState","emailConfirmation","signupRecaptcha","commentsState","commentRateLimiterHours","subjectsState","subjectsN","questionsState","foundQuestionsById","loginSignUpState","navigateFunction","AddMyQuestions","navigateToMyContributionStatus","contributionSubjectId","contributionState","contributionSubjectName","contributionRateLimiterHours","MuiMyContributionStatus","contributionTransformed","reduce","newArr","ind","link","field","headerName","headerClassName","renderCell","row","pageSize","rowsPerPageOptions","disableSelectionOnClick","disableExtendRowFullWidth","boxShadow","border","borderColor","getCellClassName","MyQuestionsStatus","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","formReducer","createStore","composeWithDevTools","applyMiddleware","thunk","run","App","exact","NonAuthorized","ReactDOM","render","getElementById"],"mappings":"koMAkDiBA,EAlDA,CACbC,GAAI,CACFC,KAAM,OACNC,KAAM,OACNC,aAAc,uBACdC,MAAO,QACPC,SAAU,UACVC,OAAQ,SACRC,YAAa,eACbC,MAAO,QACPC,SAAU,WACVC,MAAO,QACPC,GAAI,OACJC,SAAU,WACVC,UAAW,aACXC,iBAAkB,oBAClBC,sBAAuB,yBACvBC,eAAgB,kBAChBC,aAAc,eACdC,YAAa,eACbC,aAAc,gBACdC,eAAgB,kBAChBC,mBAAoB,uBAGtBC,GAAI,CACFrB,KAAM,iCACNC,KAAM,iBACNC,aAAc,uHACdC,MAAO,iCACPC,SAAU,+GACVC,OAAQ,iCACRC,YAAa,8FACbC,MAAO,2EACPC,SAAU,mDACVC,MAAO,iCACPC,GAAI,yCACJC,SAAU,yDACVC,UAAW,gEACXC,iBAAkB,8FAClBC,sBAAuB,4GACvBC,eAAgB,sHAChBC,aAAc,gHACdC,YAAa,wFACbC,aAAc,sHACdC,eAAgB,6EAChBC,mBAAoB,8E,8EC3BXE,G,4MAhBXC,gBAAkB,WACU,OAAxB,EAAKC,MAAMC,SAAoB,EAAKD,MAAME,eAAe,MAAQ,EAAKF,MAAME,eAAe,O,uDAI3F,OACI,yBAAKC,QAASC,KAAKL,gBAAgBM,KAAKD,MAAOE,UAAU,wBACrD,6BACI,0BAAMC,MAA+B,OAAxBH,KAAKJ,MAAMC,SAAoB,GAAK,CAACO,QAAS,SAA3D,MACA,0BAAMD,MAA+B,OAAxBH,KAAKJ,MAAMC,SAAoB,GAAK,CAACO,QAAS,SAA3D,Y,GAVeC,aCepBC,OAff,SAAmBV,GACf,IACIW,EADEC,EAAcZ,EAAMa,SAO1B,OAJIF,EADCC,EACQA,EAAYE,UAAU,EAAG,GAEzB,IAGT,yBAAKR,UAAU,iBACVK,I,qBCoTEI,OA7Rf,SAA8Bf,GAAQ,IA+BtBgB,EA/BqB,EACTC,WAAe,CAACC,KAAK,EAAOC,MAAM,EAAQC,QAAQ,EAAOC,OAAO,IADvD,mBAC5BC,EAD4B,KACrBC,EADqB,KAG7BC,EAAe,SAACR,EAAQS,GAAT,OAAkB,SAACC,IACnB,YAAfA,EAAMC,MAAqC,QAAdD,EAAME,KAA+B,UAAdF,EAAME,MAI9DL,EAAS,2BAAKD,GAAN,kBAAcN,EAASS,OARE,EAUKR,WAAe,MAVpB,mBAU5BY,EAV4B,KAUdC,EAVc,KAkB7BC,EAAsB,WAC1BD,EAAgB,OAnBiB,EAsBOb,WAAe,IAtBtB,mBAsB5Be,EAtB4B,KAsBbC,EAtBa,KAuB7BC,EAAc,SAAAC,GAEhBF,EADED,IAAkBG,EACH,GAEAA,IA2KrB,OACE,2BACA,gBAAC,IAAD,CAAcC,OAAQpC,EAAMC,SAAU3B,SAAUA,EAAS0B,EAAMC,WAC7D,gBAACoC,EAAA,EAAD,CAAQC,SAAS,UACb,gBAACC,EAAA,EAAD,CAASC,gBAAc,EAACC,GAAI,CAAEC,GAAI,IAChC,uBAAKnC,MAAO,CAAEoC,MAAO,SACnB,gBAACC,EAAA,EAAD,CAAKpC,QAAQ,OAAOqC,cAAc,MAAMC,EAAG,EAAGC,EAAG,GAC/C,gBAACH,EAAA,EAAD,CAAKE,EAAG,GACR,gBAACE,EAAA,EAAD,CAAYC,KAAK,SAASC,aAAW,0BAA0BC,gBAAc,cAAeC,gBAAc,OAAOX,GAAI,CAAEY,GAAI,GAAKlD,QAASqB,EAAa,QAAQ,GAAO8B,MAAM,WACzK,gBAAC,IAAD,QAGF,gBAACV,EAAA,EAAD,CAAKH,GAAI,CAAEc,GAAI,EAAGC,GAAI,KAAMC,IAAK,IAC/B,gBAAC,IAAD,CAAMC,GAAG,QAAQJ,MAAM,OAAOK,QAAQ,KAAKC,UAAU,OAAOtD,UAAU,uBAAuBmC,GAAI,CAAEgB,GAAI,IAAvG,mBAEF,uBAAKlD,MAAO,CAAEoC,MAAO,SACnB,gBAACC,EAAA,EAAD,CAAKpC,QAAQ,OAAOqC,cAAc,cAAcC,EAAG,EAAGC,EAAG,GACvD,gBAACH,EAAA,EAAD,CAAKE,EAAG,GACN,gBAACe,EAAA,EAAD,CAASC,MAAM,yBACb,gBAACd,EAAA,EAAD,CAAY7C,QA5MP,SAACuB,GAC1BI,EAAgBJ,EAAMqC,gBA2MuCtB,GAAI,CAAEK,EAAG,IAChD,gBAAC,GAAD,CAAUjC,SAAUb,EAAMa,aAG9B,gBAACmD,EAAA,EAAD,CAAMvB,GAAI,CAAEwB,GAAI,QAAUC,GAAG,cAAcC,SAAUtC,EAAcuC,aAAc,CAAEC,SAAU,MAAQC,WAAY,SAAWC,aAAW,EAACC,gBAAiB,CAACH,SAAU,MAAMC,WAAY,SAAY7C,KAAMgD,QAAQ5C,GAC9M6C,QAAS3C,IAEa,IAAjB/B,EAAM2E,QAAoC,IAAjB3E,EAAM2E,QAAoC,IAAjB3E,EAAM2E,SAC3D,gBAACC,EAAA,EAAD,CAAUhD,IAAK,SAAUzB,QAASH,EAAM6E,YACtC,gBAACC,EAAA,EAAD,CAAYC,UAAU,SAAS5E,QAAS4B,GACtC,gBAAC,IAAD,CAAkBmC,GAAG,aAIL,IAAjBlE,EAAM2E,QACT,gCACE,gBAAC,IAAD,CAAMjB,GAAG,aAAaJ,MAAM,OAAOK,QAAQ,IAAIC,UAAU,OAAOtD,UAAU,wBACxE,gBAACsE,EAAA,EAAD,CAAUhD,IAAK,SACX,gBAACkD,EAAA,EAAD,CAAYC,UAAU,UACpB,gBAAC,IAAD,CAAkBb,GAAG,aAI7B,gBAAC,IAAD,CAAMR,GAAG,cAAcJ,MAAM,OAAOK,QAAQ,IAAIC,UAAU,OAAOtD,UAAU,wBACzE,gBAACsE,EAAA,EAAD,CAAUhD,IAAK,YACX,gBAACkD,EAAA,EAAD,CAAYC,UAAU,UACpB,gBAAC,IAAD,CAAkBb,GAAG,kBAMV,IAAjBlE,EAAM2E,QAAoC,IAAjB3E,EAAM2E,QAAoC,IAAjB3E,EAAM2E,SAC5D,gBAAC,IAAD,CAAMjB,GAAG,uBAAuBJ,MAAM,OAAOK,QAAQ,IAAIC,UAAU,OAAOtD,UAAU,wBAClF,gBAACsE,EAAA,EAAD,CAAUhD,IAAK,kBAAmBzB,QAAS4B,GACvC,gBAAC+C,EAAA,EAAD,CAAYC,UAAU,UACpB,gBAAC,IAAD,CAAkBb,GAAG,wBAOnC,gBAACL,EAAA,EAAD,CAASC,MAAM,mBACb,gBAAClB,EAAA,EAAD,CAAKH,GAAI,CAAEK,EAAG,EAAGmB,GAAI,MACnB,gBAAC,GAAD,CAAsBhE,SAAUD,EAAMC,SAAUC,eAAgBF,EAAME,0BAU1F,gBAAC8E,EAAA,EAAD,CAAQhE,OAAQ,OAASS,KAAMH,EAAK,KAAUoD,QAASlD,EAAa,QAAQ,GAAQiB,GAAI,CAAEwC,GAAI,OAjPlFjE,EAkPF,OAjPV,gBAAC,IAAD,CAAcoB,OAAQpC,EAAMC,SAAU3B,SAAUA,EAAS0B,EAAMC,WAC7D,gBAAC2C,EAAA,EAAD,CACEH,GAAI,CAAEE,MAAkB,QAAX3B,GAA+B,WAAXA,EAAsB,OAAS,KAChEkE,KAAK,gBAEP,gBAACtC,EAAA,EAAD,CAAKH,GAAI,CAAE0C,eAAgB,aACzB,gBAACnC,EAAA,EAAD,CAAYC,KAAK,QAAQC,aAAW,0BAA0BC,gBAAc,cAAeC,gBAAc,OAAQjD,QAASqB,EAAa,QAAQ,GAAQ8B,MAAM,WAC3J,gBAAC,IAAD,QAGF,gBAAC8B,EAAA,EAAD,KACE,gBAAC,IAAD,CAAM1B,GAAG,OAAOJ,MAAM,OAAOK,QAAQ,IAAIC,UAAU,OAAOtD,UAAU,wBAClE,gBAAC+E,EAAA,EAAD,CAAgBlF,QAASqB,EAAa,QAAQ,IAC1C,gBAAC8D,EAAA,EAAD,KACA,gBAAC,IAAD,CAAkBpB,GAAG,YAI3B,gBAACmB,EAAA,EAAD,CAAgBlF,QAAS,WAAQ+B,EAAY,KACzC,gBAACoD,EAAA,EAAD,KAAc,gBAAC,IAAD,CAAkBpB,GAAG,UAClC,IAAMlC,EAAgB,gBAAC,IAAD,MAAiB,gBAAC,IAAD,OAE5C,gBAACuD,EAAA,EAAD,CAAUC,GAAI,IAAMxD,EAAeyD,QAAQ,OAAOC,eAAa,GAC3D,gBAAC,IAAD,CAAMhC,GAAG,YAAYJ,MAAM,OAAOK,QAAQ,IAAIC,UAAU,OAAOtD,UAAU,wBACvE,gBAAC+E,EAAA,EAAD,CAAgBlF,QAASqB,EAAa,QAAQ,IAC5C,gBAACmE,EAAA,EAAD,KACE,gBAAC,IAAD,OAEA,gBAACL,EAAA,EAAD,CAAc7C,GAAI,CAAEC,IAAK,IACvB,gBAAC,IAAD,CAAkBwB,GAAG,aAIV,IAAjBlE,EAAM2E,QAAiC,IAAjB3E,EAAM2E,SAC9B,gBAAC,IAAD,CAAMjB,GAAG,gBAAgBJ,MAAM,OAAOK,QAAQ,IAAIC,UAAU,OAAOtD,UAAU,wBAC3E,gBAAC+E,EAAA,EAAD,CAAgBlF,QAASqB,EAAa,QAAQ,IAC5C,gBAACmE,EAAA,EAAD,KACE,gBAAC,IAAD,OAEF,gBAACL,EAAA,EAAD,CAAc7C,GAAI,CAAEC,IAAK,IACzB,gBAAC,IAAD,CAAkBwB,GAAG,qBAOV,IAAjBlE,EAAM2E,QAAiC,IAAjB3E,EAAM2E,SAC9B,gCACA,gBAACU,EAAA,EAAD,CAAgBlF,QAAS,WAAQ+B,EAAY,KACzC,gBAACoD,EAAA,EAAD,KAAc,gBAAC,IAAD,CAAkBpB,GAAG,eAClC,IAAMlC,EAAgB,gBAAC,IAAD,MAAiB,gBAAC,IAAD,OAE5C,gBAACuD,EAAA,EAAD,CAAUC,GAAI,IAAMxD,EAAeyD,QAAQ,OAAOC,eAAa,GAC7D,gBAAC,IAAD,CAAMhC,GAAG,qBAAqBJ,MAAM,OAAOK,QAAQ,IAAIC,UAAU,OAAOtD,UAAU,wBAChF,gBAAC+E,EAAA,EAAD,CAAgBlF,QAASqB,EAAa,QAAQ,IAC5C,gBAACmE,EAAA,EAAD,KACE,gBAAC,IAAD,OAEF,gBAACL,EAAA,EAAD,CAAc7C,GAAI,CAAEC,IAAK,IACzB,gBAAC,IAAD,CAAkBwB,GAAG,iBAIzB,gBAAC,IAAD,CAAMR,GAAG,wBAAwBJ,MAAM,OAAOK,QAAQ,IAAIC,UAAU,OAAOtD,UAAU,wBACnF,gBAAC+E,EAAA,EAAD,CAAgBlF,QAASqB,EAAa,QAAQ,IAC5C,gBAACmE,EAAA,EAAD,KACE,gBAAC,IAAD,OAEF,gBAACL,EAAA,EAAD,CAAc7C,GAAI,CAAEC,IAAK,IACzB,gBAAC,IAAD,CAAkBwB,GAAG,+BAOP,IAAjBlE,EAAM2E,QACP,gCACA,gBAACiB,EAAA,EAAD,MACA,gBAACP,EAAA,EAAD,CAAgBlF,QAAS,WAAQ+B,EAAY,KACzC,gBAACoD,EAAA,EAAD,KAAc,gBAAC,IAAD,CAAkBpB,GAAG,WAClC,IAAMlC,EAAgB,gBAAC,IAAD,MAAiB,gBAAC,IAAD,OAE5C,gBAACuD,EAAA,EAAD,CAAUC,GAAI,IAAMxD,EAAeyD,QAAQ,OAAOC,eAAa,GAC7D,gBAAC,IAAD,CAAMhC,GAAG,aAAaJ,MAAM,OAAOK,QAAQ,IAAIC,UAAU,OAAOtD,UAAU,wBACxE,gBAAC+E,EAAA,EAAD,CAAgBlF,QAASqB,EAAa,QAAQ,IAC5C,gBAACmE,EAAA,EAAD,KACE,gBAAC,IAAD,OAEF,gBAACL,EAAA,EAAD,CAAc7C,GAAI,CAAEC,IAAK,IACzB,gBAAC,IAAD,CAAkBwB,GAAG,aAIzB,gBAAC,IAAD,CAAMR,GAAG,gBAAgBJ,MAAM,OAAOK,QAAQ,IAAIC,UAAU,OAAOtD,UAAU,wBAC3E,gBAAC+E,EAAA,EAAD,CAAgBlF,QAASqB,EAAa,QAAQ,IAC5C,gBAACmE,EAAA,EAAD,KACE,gBAAC,IAAD,OAEF,gBAACL,EAAA,EAAD,CAAc7C,GAAI,CAAEC,IAAK,IACzB,gBAAC,IAAD,CAAkBwB,GAAG,gBAIzB,gBAAC,IAAD,CAAMR,GAAG,qBAAqBJ,MAAM,OAAOK,QAAQ,IAAIC,UAAU,OAAOtD,UAAU,wBAChF,gBAAC+E,EAAA,EAAD,CAAgBlF,QAASqB,EAAa,QAAQ,IAC5C,gBAACmE,EAAA,EAAD,KACE,gBAAC,IAAD,OAEF,gBAACL,EAAA,EAAD,CAAc7C,GAAI,CAAEC,IAAK,IACzB,gBAAC,IAAD,CAAkBwB,GAAG,sBAKzB,gBAAC,IAAD,CAAMR,GAAG,yBAAyBJ,MAAM,OAAOK,QAAQ,IAAIC,UAAU,OAAOtD,UAAU,wBACpF,gBAAC+E,EAAA,EAAD,CAAgBlF,QAASqB,EAAa,QAAQ,IAC5C,gBAACmE,EAAA,EAAD,KACE,gBAAC,IAAD,OAEF,gBAACL,EAAA,EAAD,CAAc7C,GAAI,CAAEC,IAAK,IACzB,gBAAC,IAAD,CAAkBwB,GAAG,oBAKzB,gBAAC,IAAD,CAAMR,GAAG,wBAAwBJ,MAAM,OAAOK,QAAQ,IAAIC,UAAU,OAAOtD,UAAU,wBACnF,gBAAC+E,EAAA,EAAD,CAAgBlF,QAASqB,EAAa,QAAQ,IAC5C,gBAACmE,EAAA,EAAD,KACE,gBAAC,KAAD,OAEF,gBAACL,EAAA,EAAD,CAAc7C,GAAI,CAAEC,IAAK,IACzB,gBAAC,IAAD,CAAkBwB,GAAG,mBAKzB,gBAAC,IAAD,CAAMR,GAAG,yBAAyBJ,MAAM,OAAOK,QAAQ,IAAIC,UAAU,OAAOtD,UAAU,wBACpF,gBAAC+E,EAAA,EAAD,CAAgBlF,QAASqB,EAAa,QAAQ,IAC5C,gBAACmE,EAAA,EAAD,KACE,gBAAC,KAAD,OAEF,gBAACL,EAAA,EAAD,CAAc7C,GAAI,CAAEC,IAAK,IACzB,gBAAC,IAAD,CAAkBwB,GAAG,oBAIzB,gBAAC,IAAD,CAAMR,GAAG,2BAA2BJ,MAAM,OAAOK,QAAQ,IAAIC,UAAU,OAAOtD,UAAU,wBACtF,gBAAC+E,EAAA,EAAD,CAAgBlF,QAASqB,EAAa,QAAQ,IAC5C,gBAACmE,EAAA,EAAD,KACE,gBAAC,KAAD,OAEF,gBAACL,EAAA,EAAD,CAAc7C,GAAI,CAAEC,IAAK,IACzB,gBAAC,IAAD,CAAkBwB,GAAG,gCAwF/B,gBAACkB,EAAA,EAAD,CAAM7E,MAAO,CAAEsF,UAAU,SACvB,gBAAC,IAAD,CAAMnC,GAAG,OAAOJ,MAAM,OAAOK,QAAQ,IAAIC,UAAU,OAAOtD,UAAU,uBAAuBH,QAASqB,EAAa,QAAQ,IACrH,qBAAGlB,UAAU,oBAAb,0C,6BC3PCwF,GA5DC,CACZC,WAAY,WACR,OAAQC,OAAOC,SAASC,KAAKC,SAAS,cAAgBH,OAAOC,SAASC,KAAKC,SAAS,aAAgB,yBAA2B,6BAGnIC,aAAc,WACV,QAAgDC,IAA7CC,SAASC,qBAAqB,QAAQ,GACrC,OAAOD,SAASC,qBAAqB,QAAQ,GAAGC,SAIxDC,wBAAyB,SAASC,EAAgBC,EAAgBC,GAC9D,IAAIC,EAAqBH,EAAeI,QAAO,SAAUnG,GAAU,OAAQgG,EAAeR,SAASxF,EAAOoG,gBACtG,OAAOH,GACP,IAAK,IACDC,EAAmBG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,UAAYD,EAAEC,UAAY,GAAG,KACjE,MACJ,IAAK,IACDN,EAAmBG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,UAAYD,EAAEC,UAAY,GAAG,KACjE,MACJ,IAAK,IACDN,EAAmBG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,QAAUF,EAAEE,QAAU,GAAG,KAC7D,MACJ,IAAK,IACDP,EAAmBG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,QAAUF,EAAEE,QAAU,GAAG,KAC7D,MACJ,IAAK,IACDP,EAAmBG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEF,YAAcG,EAAEH,YAAc,GAAG,KACrE,MACJ,IAAK,IACDF,EAAmBG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEF,YAAcG,EAAEH,YAAc,GAAG,KACrE,MACJ,QACIF,EAAmBG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,UAAYD,EAAEC,WAAa,EAAE,KAGrE,OAAON,GAGXQ,iBAAkB,SAASC,EAA2BC,EAAsBC,GACxE,OAAOF,EAA0BR,QAAO,SAASnG,EAAQwB,GACrD,OAAQA,GAASoF,EAAqBC,GAAmCrF,EAAQoF,GAAsBC,EAAgC,OAI/IC,uBAAwB,SAASC,EAAOC,EAAcC,GAClD,OAAOF,EAAMZ,QAAO,SAASnG,EAAQwB,GACjC,OAAQA,GAASwF,GAAcC,EAAoB,IAAQzF,EAAQwF,EAAcC,MAIzFC,WAAY,WAGR,IAFA,IAAIC,EAAO,GACPC,EAAW,iEACNC,EAAI,EAAGA,EAAI,EAAGA,IACvBF,GAAQC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASM,SAC5D,OAAOP,ICjDbQ,GAAUxC,GAAQC,aAEXwC,GAAiB,SAACC,EAAoBC,GAC/C,IACMC,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAE/C,OAAO,SAACC,GACL,OAAOC,KAAMC,KAAKX,GAAU,wBAAyB,CAACE,qBAAoBC,YAAW,CACjFC,QAASA,IAEZQ,MAAK,SAAAC,GACF,GAAqC,SAAlCA,EAASC,KAAKC,QAAQC,QAwBrB,MAAMH,EAASC,KAAKC,QAAQE,QAvBxBZ,GAAMC,WAAWY,YAAYC,mBAC7BV,EAASW,GAAmBP,EAASC,KAAKC,QAAQM,WAClDZ,EAASa,GAAWT,EAASC,KAAKC,QAAQQ,gBAC1Cd,EAASe,GAAoBX,EAASC,KAAKC,QAAQU,WACnDhB,EAASiB,GAAmBb,EAASC,KAAKC,QAAQY,UAClDlB,EAASmB,GAAqBf,EAASC,KAAKC,QAAQc,oBACpDpB,EAASqB,GAAmBjB,EAASC,KAAKC,QAAQgB,kBAClDtB,EAASuB,GAAqBnB,EAASC,KAAKC,QAAQkB,aAaxDxB,EAASyB,GAAyB,IAClCzB,EAAS0B,IAA6B,OAK7CC,OAAM,SAAAC,GACH,MAAMA,OAKX,SAASC,GAAaC,EAAkBC,GAAkB,IAAD,OAEtDpC,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAEhD,OAAO,SAACC,GACJ,OAAOC,KAAMC,KAAKX,GAAU,qBAAsB,CAACuC,mBAAkBC,oBAAmB,CACpFpC,QAASA,IAEZQ,MAAK,SAAAC,GACF,GAAqC,SAAlCA,EAASC,KAAKC,QAAQC,QAIrB,MAAMH,EAASC,KAAKC,QAAQE,QAH5BR,EAASgC,GAAuB5B,EAASC,KAAKC,QAAQb,qBACtD,EAAKD,eAAeY,EAASC,KAAKC,QAAQb,uBAKjDkC,OAAM,SAAAC,GACH,MAAMA,MAKX,SAASK,KACZ,OAAO,SAACjC,GACJA,EAME,CACFpH,KAAM,qCAFP,SAASsJ,KACZ,MAAM,CACFtJ,KAAM,mCAIP,SAASuJ,GAAwBC,GACpC,OAAO,SAACpC,GACJA,EAASqC,GAAgCD,KAM1C,IAAME,GAAmC,SAAC7C,EAAoB8C,GACjE,OAAO,SAACvC,GACJ,OAAOC,KAAMC,KAAKX,GAAU,wBAAyB,CAACE,qBAAoB8C,kCACzEpC,MAAK,SAAAC,GACF,GAAqC,SAAlCA,EAASC,KAAKC,QAAQC,QAA6B,MAAMH,EAASC,KAAKC,QAAQE,WAErFmB,OAAM,SAAAC,GACH,MAAMA,OAKLY,GAAsB,SAACrH,GAChC,OAAO,SAAC6E,GACJA,EAASyC,GAAsBtH,MAI1BuH,GAAuB,SAACC,GACjC,OAAO,SAAC3C,GACJA,EAAS0B,GAA6BiB,MAIvC,SAASjB,GAA6BiB,GACzC,MAAM,CACF/J,KCtC8B,yBDuC9BgK,WAAYD,GAKb,SAASF,GAAsBtH,GAClC,MAAM,CACFvC,KCpH8B,yBDqH9BuC,GAAIA,GAIL,IAAM0H,GAAwB,SAACC,GAClC,OAAO,SAAC9C,GACJA,EAAS+C,GAAwBD,MAI5BE,GAAwB,SAAC3C,GAClC,OAAO,SAACL,GACJA,EAASgC,GAAuB3B,MAIjC,SAAS0C,GAAwBD,GACpC,MAAM,CACFlK,KCrIgC,2BDsIhCkK,KAAMA,GAIP,SAASnC,GAAmBsC,GAC/B,MAAO,CACHrK,KC3I4B,uBD4I5BqK,gBAAiBA,GAIlB,SAASjB,GAAuB3B,GACnC,MAAM,CACFzH,KCpJgC,2BDqJhC6G,mBAAoBY,GAIrB,SAASQ,GAAWqC,GACvB,MAAO,CACHtK,KCxJmB,cDyJnBsK,QAASA,GAIV,SAASb,GAAgCD,GAC5C,MAAO,CACHxJ,KCzIiC,4BD0IjCuK,qBAAsBf,GAIvB,SAASrB,GAAoBqC,GAChC,MAAO,CACHxK,KCrK8B,yBDsK9BwK,OAAQA,GAIT,SAAS3B,GAAyB2B,GACrC,MAAO,CACHxK,KCxJwC,mCDyJxCgK,WAAYQ,GAIb,SAASnC,GAAmBmC,GAC/B,MAAO,CACHxK,KClL6B,wBDmL7BwK,OAAQA,GAIT,SAAS/B,GAAmBlG,GAC/B,MAAO,CACHvC,KCvK6B,wBDwK7BuC,GAAIA,GAIL,SAASgG,GAAqBiC,GACjC,MAAO,CACHxK,KC/L+B,0BDgM/BwK,OAAQA,GAKT,SAAS7B,GAAqBpG,GACjC,MAAO,CACHvC,KCvI+B,0BDwI/BuC,GAAIA,G,aE5LK5F,GA7BA,CACbC,GAAI,CACA6N,qBAAsB,wCACtBC,eAAgB,sBAChBC,cAAe,wCACfC,yBAA0B,uDAC1BC,sBAAuB,iDACvBC,cAAe,yLACfC,gBAAiB,2BACjBC,uBAAwB,2CACxBC,WAAY,8BACZC,UAAW,6BACXC,mBAAoB,2BAExBjN,GAAI,CACAuM,qBAAsB,6HACtBC,eAAgB,4FAChBC,cAAe,6MACfC,yBAA0B,+VAC1BC,sBAAuB,qQACvBC,cAAe,mpCACfC,gBAAiB,8MACjBC,uBAAwB,kKACxBC,WAAY,yNACZC,UAAW,oIACXC,mBAAoB,sQCvBb,SAASC,GAAoBhE,EAAUQ,EAAS5H,GAC3DoH,EAMM,CACFpH,KFiCyC,oCEhCzCqL,0BARqC,IACzCjE,EAWJ,SAAsCoC,GAClC,MAAM,CACFxJ,KF2BsC,iCE1BtCsL,uBAAwB9B,GAdnB+B,CAA6B3D,IACtCR,EAiBJ,SAAmCoC,GAC/B,MAAM,CACFxJ,KFqBmC,8BEpBnCwL,oBAAqBhC,GApBhBiC,CAA0BzL,ICKvC,IAAM2G,GAAUxC,GAAQC,aAEXsH,GAAiB,WAC1B,IAAMC,EAAQ3E,GAAMC,WAAW2E,KAAKC,eAAeC,OAAOH,MACpDI,EAAW/E,GAAMC,WAAW2E,KAAKC,eAAeC,OAAOC,SACvDC,EAAe,CACjBb,mBAAmE,OAA9CnE,GAAMC,WAAWgF,gBAAgB3N,SAAoB3B,GAASC,GAAGuO,mBAAqBxO,GAASuB,GAAGiN,oBAE3H,OAAO,SAAC/D,GACJ,OAAOC,KAAMC,KAAKX,GAAU,cAAe,CAACgF,QAAOI,aAClDxE,MAAK,SAAAC,GAEgC,SAA/BA,EAASC,KAAKA,KAAKE,SAClBP,EAAS8E,GAAU1E,EAASC,KAAKA,KAAK0E,UACtC/E,EAASgF,GAAY5E,EAASC,KAAKA,KAAKyC,OACxC9C,EA8LN,CACFpH,KHnK6B,wBGoK7BqM,iBAhMyC7E,EAASC,KAAKA,KAAK6E,oBACpDlF,EAASmF,GAAW/E,EAASC,KAAKA,KAAK+E,YACvCpF,EAASqF,GAAUjF,EAASC,KAAKA,KAAKlF,KACtC6E,EAASsF,GAAqBlF,EAASC,KAAKA,KAAKkF,yBAEjDvF,EAASwF,MACTxB,GAAoBhE,EAAU4E,EAAab,mBAAqB,SAChE0B,YAAW,WACHzF,EAAS0F,QACb,SAGX/D,OAAM,SAAAC,GACH,MAAMA,OAKX,SAAS+D,KACZ,IAYIC,EAZE9C,EAAOlD,GAAMC,WAAW2E,KAAKqB,WAAWnB,OAAO5B,KAC/CyB,EAAQ3E,GAAMC,WAAW2E,KAAKqB,WAAWnB,OAAOH,MAChDI,EAAW/E,GAAMC,WAAW2E,KAAKqB,WAAWnB,OAAOC,SACnDmB,EAAqBlG,GAAMC,WAAWC,mBAAmBiG,kBACzDC,EAAoBpG,GAAMC,WAAW2E,KAAKqB,WAAWnB,OAAOuB,QAC5DC,EAAqBtG,GAAMC,WAAWgF,gBAAgBsB,oBACtDvB,EAAe,CACjBvB,qBAAqE,OAA9CzD,GAAMC,WAAWgF,gBAAgB3N,SAAoB3B,GAASC,GAAG6N,qBAAuB9N,GAASuB,GAAGuM,qBAC3HC,eAA+D,OAA9C1D,GAAMC,WAAWgF,gBAAgB3N,SAAoB3B,GAASC,GAAG8N,eAAiB/N,GAASuB,GAAGwM,eAC/GO,WAA0D,OAA9CjE,GAAMC,WAAWgF,gBAAgB3N,SAAoB3B,GAASC,GAAGqO,WAAatO,GAASuB,GAAG+M,WACtGC,UAAyD,OAA9ClE,GAAMC,WAAWgF,gBAAgB3N,SAAoB3B,GAASC,GAAGsO,UAAYvO,GAASuB,GAAGgN,WAGxG,OAAO,SAAC9D,GACJ,OAA2B,IAAvBkG,GAA8BJ,IAAuBE,GACrDhC,GAAoBhE,EAAU4E,EAAatB,eAAgB,UACpD,GAEJrD,KAAMC,KAAKX,GAAU,eAAgB,CAACuD,OAAMyB,QAAOI,aACzDxE,MAAK,SAAAC,GACgC,SAA/BA,EAASC,KAAKA,KAAKE,SAClBP,EAAS8E,GAAU1E,EAASC,KAAKA,KAAK0E,UACtC/E,EAASgF,GAAY5E,EAASC,KAAKA,KAAKyC,OACxC9C,EAASmF,GAAW/E,EAASC,KAAKA,KAAK+E,YACvCpF,EAASqF,GAAUjF,EAASC,KAAKA,KAAKlF,KACtC6E,EAASsF,GAAqBlF,EAASC,KAAKA,KAAKkF,uBACjDvF,EAASoG,aAAM,eACfpC,GAAoBhE,EAAU4E,EAAavB,qBAAsB,aAE/B,gCAA/BjD,EAASC,KAAKA,KAAKG,QAClBoF,EAAehB,EAAaf,WACS,+BAA/BzD,EAASC,KAAKA,KAAKG,UACzBoF,EAAehB,EAAad,WAEhC9D,EAASwF,MACTxB,GAAoBhE,EAAU4F,EAAc,SAC5CH,YAAW,WACPzF,EAAS0F,QACb,SAGP/D,OAAM,SAAAC,GACH,MAAMA,MAKX,SAASyE,GAAwCjE,GACpD,OAAO,SAACpC,GACJA,EAASsG,GAA+ClE,KAIzD,SAASmE,KACZ,IAAMC,EAAW5G,GAAMC,WAAW2E,KAAKiC,wBAAwB/B,OAAO8B,SAChEjC,EAAQ3E,GAAMC,WAAW2E,KAAKiC,wBAAwB/B,OAAOH,MAC7DuB,EAAqBlG,GAAMC,WAAWC,mBAAmBiG,kBACzDC,EAAoBpG,GAAMC,WAAW2E,KAAKiC,wBAAwB/B,OAAOuB,QACzErB,EAAe,CACjBnB,sBAAsE,OAA9C7D,GAAMC,WAAWgF,gBAAgB3N,SAAoB3B,GAASC,GAAGiO,sBAAwBlO,GAASuB,GAAG2M,sBAC7HH,eAA+D,OAA9C1D,GAAMC,WAAWgF,gBAAgB3N,SAAoB3B,GAASC,GAAG8N,eAAiB/N,GAASuB,GAAGwM,gBAEnH,OAAO,SAACtD,GACJ,OAAI8F,IAAuBE,GACvBhC,GAAoBhE,EAAU4E,EAAatB,eAAgB,UACpD,GAEJrD,KAAMC,KAAKX,GAAU,uBAAwB,CAACiH,WAAUjC,UAC9DpE,MAAK,SAAAC,GACgC,SAA/BA,EAASC,KAAKA,KAAKE,SAClBP,EAASoG,aAAM,4BACfpC,GAAoBhE,EAAU4E,EAAanB,sBAAuB,aAElEzD,EAASwF,MACTxB,GAAoBhE,EAAUI,EAASC,KAAKA,KAAKG,QAAU,SAC3DiF,YAAW,WACPzF,EAAS0F,QACb,SAGP/D,OAAM,SAAAC,GACH,MAAMA,MAKX,SAAS8E,KACZ,IAAM/B,EAAW/E,GAAMC,WAAW2E,KAAKmC,kBAAkBjC,OAAOC,SAC1DiC,EAAiBhH,GAAMC,WAAW2E,KAAKmC,kBAAkBjC,OAAOmC,eAChEjC,EAAe,CACjBhB,uBAAuE,OAA9ChE,GAAMC,WAAWgF,gBAAgB3N,SAAoB3B,GAASC,GAAGoO,uBAAyBrO,GAASuB,GAAG8M,uBAC/HN,eAA+D,OAA9C1D,GAAMC,WAAWgF,gBAAgB3N,SAAoB3B,GAASC,GAAG8N,eAAiB/N,GAASuB,GAAGwM,gBAEnH,OAAO,SAACtD,GACJ,OAAOC,KAAMC,KAAKX,GAAU,sBAAuB,CAACoF,WAAUiC,mBAC7DzG,MAAK,SAAAC,GACgC,SAA/BA,EAASC,KAAKA,KAAKE,SAClBP,EAASoG,aAAM,sBACfpC,GAAoBhE,EAAU4E,EAAahB,uBAAwB,WACnE5D,EAASsG,GAA+C,MAExDtG,EAASwF,MACTxB,GAAoBhE,EAAUI,EAASC,KAAKA,KAAKG,QAAU,SAC3DiF,YAAW,WACPzF,EAAS0F,QACb,SAGP/D,OAAM,SAAAC,GACH,MAAMA,MAKX,SAAS9F,KACZ,IAAM8I,EAAe,CACjBrB,cAA8D,OAA9C3D,GAAMC,WAAWgF,gBAAgB3N,SAAoB3B,GAASC,GAAG+N,cAAgBhO,GAASuB,GAAGyM,eAEjH,OAAM,SAACvD,GACHA,EAASwF,MACTxB,GAAoBhE,EAAU4E,EAAarB,cAAe,YAI3D,SAASuD,GAAsB1E,GAClC,OAAM,SAACpC,GACHA,EAoGR,SAAyCoC,GACrC,MAAM,CACFxJ,KHrOyC,oCGsOzCqL,0BAA2B7B,GAvGlB2E,CAAgC3E,KAI1C,SAAS4E,KACZ,IAAMC,EAASrH,GAAMC,WAAWC,mBAAmBmH,OAE7CtH,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAE1C6E,EAAe,CACjBpB,yBAAyE,OAA9C5D,GAAMC,WAAWgF,gBAAgB3N,SAAoB3B,GAASC,GAAGgO,yBAA2BjO,GAASuB,GAAG0M,0BAEvI,OAAO,SAACxD,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,iCAAmC0H,EAAQ,CAClEtH,QAASA,IACVQ,MAAK,SAACgH,GACgC,SAAlCA,EAAS9G,KAAKC,QAAQC,QACrByD,GAAoBhE,EAAU4E,EAAapB,yBAA0B,WAErE4D,MAAM,qEAMf,SAASC,GAAiBtI,GAC7B,OAAM,SAACiB,GACHA,EAIR,SAAkCjB,GAC9B,MAAM,CACFnG,KH3J+B,0BG4J/B0O,cAAevI,GAPNwI,CAAyBxI,KAW1C,SAAS+F,GAAUlJ,GACf,MAAM,CACFhD,KH5LmB,cG6LnBgD,OAAQA,GAWhB,SAAS0K,GAA+ClE,GACpD,MAAM,CACFxJ,KHxKoD,+CGyKpD4O,qCAAsCpF,GAI9C,SAASkD,GAAqBlD,GAC1B,MAAM,CACFxJ,KHnLmC,8BGoLnC6O,kBAAmBrF,GAI3B,SAAS4C,GAAYlN,GACjB,MAAM,CACFc,KHzNqB,gBG0NrBd,SAAUA,GAIlB,SAASuN,GAAU4B,GACf,MAAM,CACFrO,KH7NmB,cG8NnBqO,OAAQA,GAIhB,SAAS9B,GAAWpF,GAChB,MAAM,CACFnH,KHrOqB,gBGsOrBmH,QAASA,GAIjB,SAAS2F,KACL,MAAM,CACF9M,KHjQmB,cGkQnB8O,WAAY,GACZC,qBAAsB,UAI9B,SAASnC,KACL,MAAM,CACF5M,KHhP4B,wBIrBpC,IAAM2G,GAAUxC,GAAQC,aAEjB,SAAS4K,KACZ,IACMjI,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAEhD,OAAO,SAACC,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,cAAe,CACtCI,QAASA,IAEZQ,MAAK,SAACC,GACkC,SAAlCA,EAASC,KAAKC,QAAQC,QACrBP,EAAS6H,GAASzH,EAASC,KAAKC,QAAQtK,QAExCgK,EAASwF,UAMlB,IAAMsC,GAAa,SAAC,GAAU,IAAT3M,EAAQ,EAARA,GAElBwE,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAEhD,OAAO,SAACC,GACJ,OAAOC,KAAM8H,OAAOxI,GAAU,qBAAsBpE,EAAK,CACrDwE,QAASA,IAEZQ,MAAK,SAAAC,GACF,GAAqC,SAAlCA,EAASC,KAAKC,QAAQC,QACrB,OAAON,KAAMiH,IAAI3H,GAAU,cAAe,CACtCI,QAASA,IAEZQ,MAAK,SAACC,GACkC,SAAlCA,EAASC,KAAKC,QAAQC,SACrBP,EAAS6H,GAASzH,EAASC,KAAKC,QAAQtK,QACxCgS,GAAiBhI,EAAU,qCAAsC,YAEjEA,EAASwF,SAIjBxF,EAASwF,SAGhB7D,OAAM,SAAAC,GACH5B,EAASwF,WAKRyC,GAAoB,SAAC,GAAU,IAAT9M,EAAQ,EAARA,GAEzBwE,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAEhD,OAAO,SAACC,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,2BAA4BpE,EAAK,CACxDwE,QAASA,IAEZQ,MAAK,SAAAC,GACF,GAAqC,SAAlCA,EAASC,KAAKC,QAAQC,QACrB,OAAON,KAAMiH,IAAI3H,GAAU,cAAe,CACtCI,QAASA,IAEZQ,MAAK,SAACC,GACkC,SAAlCA,EAASC,KAAKC,QAAQC,SACrBP,EAAS6H,GAASzH,EAASC,KAAKC,QAAQtK,QACxCgS,GAAiBhI,EAAU,uCAAwC,YAEnEA,EAASwF,SAIjBxF,EAASwF,SAGhB7D,OAAM,SAAAC,GACH5B,EAASwF,WAKR0C,GAAoB,SAAC,GAAkB,IAAjB/M,EAAgB,EAAhBA,GAAIgN,EAAY,EAAZA,OAE7BxI,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAEhD,OAAO,SAACC,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,6BAAgCpE,EAAK,IAAMgN,EAAS,CAC3ExI,QAASA,IAEZQ,MAAK,SAAAC,GACF,GAAqC,SAAlCA,EAASC,KAAKC,QAAQC,QACrB,OAAON,KAAMiH,IAAI3H,GAAU,cAAe,CACtCI,QAASA,IAEZQ,MAAK,SAACC,GACkC,SAAlCA,EAASC,KAAKC,QAAQC,SACrBP,EAAS6H,GAASzH,EAASC,KAAKC,QAAQtK,QACxCgS,GAAiBhI,EAAU,6CAA8C,YAEzEA,EAASwF,SAIjBxF,EAASwF,SAGhB7D,OAAM,SAAAC,GACH5B,EAASwF,WAKrB,SAASqC,GAAS7R,GACd,MAAM,CACF4C,KJlGiB,YImGjB5C,MAAOA,GAIf,SAASwP,KACL,MAAM,CACF5M,KJjG4B,wBIqGpC,SAASoP,GAAiBhI,EAAUQ,EAAS5H,GACzC,IAAM8D,EAAUkD,GAAMC,WAAWgF,gBAAgBuD,qBACjDpI,EAASqI,GAA6B,IACtCrI,EAYJ,SAAmCQ,GAC/B,MAAM,CACF5H,KJxGkC,4BIyGlC0P,oBAAqB9H,GAfhB+H,CAA0B/H,IACnCR,EAkBJ,SAAgCpH,GAC5B,MAAM,CACFA,KJ9G+B,0BI+G/B4P,iBAAkB5P,GArBb6P,CAAuB7P,IAChC6M,YAAW,WAAYzF,EAASqI,GAA6B,MAAQ3L,GAGzE,SAAS2L,GAA6BjG,GAClC,MAAM,CACFxJ,KJlGqC,gCImGrC8P,uBAAwBtG,G,aC7Hf7M,GAbA,CACbC,GAAI,CACAmT,gBAAiB,uCACjBC,kBAAmB,wCACnBC,eAAgB,uCAEpB/R,GAAI,CACA6R,gBAAiB,6KACjBC,kBAAmB,6HACnBC,eAAgB,2ICDlBtJ,GAAUxC,GAAQC,aAEjB,SAAS8L,KACZ,OAAO,SAAC9I,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,kBAAkBY,MAAK,SAACgH,GAC/CnH,EAAS+I,GAAoB5B,EAAS9G,KAAKC,QAAQrK,eAKxD,IAAM+S,GAAc,SAAC,GAAgB,IAAf7N,EAAc,EAAdA,GAAI2H,EAAU,EAAVA,KACvB8B,EAAe,CACjB+D,gBAAgE,OAA9C/I,GAAMC,WAAWgF,gBAAgB3N,SAAoB3B,GAASC,GAAGmT,gBAAkBpT,GAASuB,GAAG6R,iBAG/GhJ,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAEhD,OAAO,SAACC,GACJ,OAAOC,KAAMC,KAAKX,GAAU,qBAAsB,CAACpE,KAAI2H,QAAO,CAC1DnD,QAASA,IAEZQ,MAAK,SAAAC,GACF,GAAqC,SAAlCA,EAASC,KAAKC,QAAQC,QACrB,OAAON,KAAMiH,IAAI3H,GAAU,sBAAuB,CAC9CI,QAASA,IACVQ,MAAK,SAACgH,GACLnH,EAAS+I,GAAoB5B,EAAS9G,KAAKC,QAAQrK,WACnD+R,GAAiBhI,EAAU4E,EAAa+D,gBAAiB,cAG7D3I,EAASwF,SAGhB7D,OAAM,SAAAC,GACH,MAAMA,OAKLqH,GAAgB,SAAC,GAAU,IAAT9N,EAAQ,EAARA,GACrByJ,EAAe,CACjBgE,kBAAkE,OAA9ChJ,GAAMC,WAAWgF,gBAAgB3N,SAAoB3B,GAASC,GAAGoT,kBAAoBrT,GAASuB,GAAG8R,mBAGnHjJ,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAEhD,OAAO,SAACC,GACJ,OAAOC,KAAM8H,OAAOxI,GAAU,wBAAyBpE,EAAK,CACxDwE,QAASA,IAEZQ,MAAK,SAAAC,GACF,GAAqC,SAAlCA,EAASC,KAAKC,QAAQC,QACrB,OAAON,KAAMiH,IAAI3H,GAAU,sBAAuB,CAC9CI,QAASA,IACVQ,MAAK,SAACgH,GACLnH,EAAS+I,GAAoB5B,EAAS9G,KAAKC,QAAQrK,WACnD+R,GAAiBhI,EAAU4E,EAAagE,kBAAmB,cAG/D5I,EAASwF,SAGhB7D,OAAM,SAAAC,GACH,MAAMA,EAAMpB,aAKjB,SAAS0I,KAAgB,IAAD,OACrBtE,EAAe,CACjBiE,eAA+D,OAA9CjJ,GAAMC,WAAWgF,gBAAgB3N,SAAoB3B,GAASC,GAAGqT,eAAiBtT,GAASuB,GAAG+R,gBAE7GM,EAAMvJ,GAAMC,WAAWC,mBAAmBC,QAC1CqJ,EAAUxJ,GAAMC,WAAW2E,KAAK6E,eAAe3E,OAAO0E,QACtDzJ,EAAU,CAAE,QAAWwJ,GAC7B,OAAO,SAACnJ,GACJ,OAAOC,KAAMC,KAAKX,GAAU,oBAAqB,CAAC6J,WAAU,CACxDzJ,QAASA,IAEZQ,MAAK,SAAAC,GACmC,SAAlCA,EAASC,KAAKC,QAAQC,SACrB,EAAK+I,oBACLtJ,EAASoG,aAAM,mBACf4B,GAAiBhI,EAAU4E,EAAaiE,eAAgB,YAExD7I,EAASwF,SAGhB7D,OAAM,SAAAC,GACH,MAAMA,MAKX,IAAM2H,GAAwB,SAAC,GAAU,IAATpO,EAAQ,EAARA,GAC7BgO,EAAMvJ,GAAMC,WAAWC,mBAAmBC,QAC1CrD,EAAUkD,GAAMC,WAAWgF,gBAAgBuD,qBAC3CzI,EAAU,CAAE,QAAWwJ,GAC7B,OAAO,SAACnJ,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,+BAAgCpE,EAAK,CAC5DwE,QAASA,IAEZQ,MAAK,SAAAC,GACF,GAAqC,SAAlCA,EAASC,KAAKC,QAAQC,QACrB,OAAON,KAAMiH,IAAI3H,GAAU,sBAAuB,CAC9CI,QAASA,IAEpBQ,MAAK,SAACgH,GACK,GAAqC,SAAlC/G,EAASC,KAAKC,QAAQC,QAMrB,OALAP,EAAS+I,GAAoB5B,EAAS9G,KAAKC,QAAQrK,WACnD+J,EAASqI,GAA6B,IACtCrI,EAASuI,GAA0B,mDACnCvI,EAASyI,GAAuB,YAChChD,YAAW,WAAYzF,EAASqI,GAA6B,MAAQ3L,GAC9DuD,KAAMiH,IAAI3H,GAAU,kBAC1CY,MAAK,SAAAgH,GACc,GAAqC,SAAlCA,EAAS9G,KAAKC,QAAQC,QAAmB,CACxC,IAAIiJ,EAAqB,IAAIC,IAC7BtC,EAAS9G,KAAKC,QAAQrK,SAASyT,KAAI,SAACN,GAAD,OAAYI,EAAmBG,IAAIP,EAAQtG,SAC9E9C,EAAS4J,GAA4B,aAAIJ,KACzCxJ,EAAS6J,GAAmB1C,EAAS9G,KAAKC,QAAQrK,eAGzD0L,OAAM,SAAAC,GACH,MAAMA,KAGV5B,EAASwF,SAIjBxF,EAASwF,SAGhB7D,OAAM,SAAAC,GACH,MAAMA,EAAMpB,aAKjB,SAAS8I,KACZ,IACM3J,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAEhD,OAAO,SAACC,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,sBAAuB,CAC9CI,QAASA,IAEZQ,MAAK,SAAAgH,GACmC,SAAlCA,EAAS9G,KAAKC,QAAQC,QACrBP,EAAS+I,GAAoB5B,EAAS9G,KAAKC,QAAQrK,WAEnD+J,EAASwF,SAGhB7D,OAAM,SAAAC,GACH,MAAMA,MAKX,SAASkI,KACZ,OAAO,SAAC9J,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,kBAC1BY,MAAK,SAAAgH,GACF,GAAqC,SAAlCA,EAAS9G,KAAKC,QAAQC,QAAmB,CACxC,IAAIiJ,EAAqB,IAAIC,IAC7BtC,EAAS9G,KAAKC,QAAQrK,SAASyT,KAAI,SAACN,GAAD,OAAYI,EAAmBG,IAAIP,EAAQtG,SAC9E9C,EAAS4J,GAA4B,aAAIJ,KACzCxJ,EAAS6J,GAAmB1C,EAAS9G,KAAKC,QAAQrK,eAGzD0L,OAAM,SAAAC,GACH,MAAMA,MAKlB,SAASoG,GAAiBhI,EAAUQ,EAAS5H,GACzC,IAAM8D,EAAUkD,GAAMC,WAAWgF,gBAAgBuD,qBACjDpI,EAASqI,GAA6B,IACtCrI,EAASuI,GAA0B/H,IACnCR,EAASyI,GAAuB7P,IAChC6M,YAAW,WAAYzF,EAASqI,GAA6B,MAAQ3L,GAGzE,SAASqM,GAAoB9S,GACzB,MAAM,CACF2C,KN9L2B,sBM+L3B3C,SAAUA,GAIlB,SAAS4T,GAAmB5T,GACxB,MAAM,CACF2C,KNpM0B,qBMqM1BmR,aAAc9T,GAItB,SAASuP,KACL,MAAM,CACF5M,KNrL4B,wBMyLpC,SAASyP,GAA6BjG,GAClC,MAAM,CACFxJ,KN9KqC,gCM+KrC8P,uBAAwBtG,GAIhC,SAASmG,GAA0B/H,GAC/B,MAAM,CACF5H,KNpLkC,4BMqLlC0P,oBAAqB9H,GAI7B,SAASiI,GAAuB7P,GAC5B,MAAM,CACFA,KN1L+B,0BM2L/B4P,iBAAkB5P,GAI1B,SAASgR,GAA4B3T,GACjC,MAAM,CACF2C,KN9M0C,qCM+M1CoR,4BAA6B/T,GCrOrC,IAAMsJ,GAAUxC,GAAQC,aAEjB,SAASiN,KACZ,IAAMd,EAAMvJ,GAAMC,WAAWC,mBAAmBC,QAC1CnB,EAAegB,GAAMC,WAAWqK,eAAe1L,qBAC/CmB,EAAU,CAAE,QAAWwJ,GAC7B,OAAO,SAACnJ,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,gBAAiB,CACxCI,QAASA,IAEZQ,MAAK,SAAAgH,GACF,GAAqC,SAAlCA,EAAS9G,KAAKC,QAAQC,QAAmB,CACxC,IAAI4J,EAAiCpN,GAAQW,wBAAwByJ,EAAS9G,KAAKC,QAAQ8J,QAASxK,GAAMC,WAAWqK,eAAeF,4BAA6BpK,GAAMC,WAAWqK,eAAeG,4BACjMrK,EAASsK,GAA4BnL,KAAKoL,KAAKJ,EAA+B7K,OAAOV,KACrFoB,EAASwK,GAAmBzN,GAAQuB,iBAAiB6L,EAAgCvL,EAAcgB,GAAMC,WAAWqK,eAAezL,iCACnIuB,EAyGN,CACFpH,KPvHoB,eOwHpBwR,QA3G+BjD,EAAS9G,KAAKC,QAAQ8J,UAC7CpK,EAAS0B,IAA6B,SAEtC1B,EAAS0B,IAA6B,IACtC1B,EA6GN,CACFpH,KP7G4B,4BOE3B+I,OAAM,SAAAC,GACH,MAAMA,MAKX,SAAS6I,GAA+BxU,GAC3C,OAAM,SAAC+J,GACHA,EAkFR,SAAqC/J,GACjC,MAAM,CACF2C,KP5F0C,qCO6F1CoR,4BAA6B/T,GArFpB2T,CAA4B3T,KAItC,SAASqU,GAA4BlH,GACxC,OAAM,SAACpD,GACHA,EAuDR,SAA+BoD,GAC3B,MAAO,CACHxK,KPpEgD,2COqEhD8R,mBAAoBtH,GA1DXuH,CAAsBvH,KAUhC,SAAS1B,GAA6BiB,GACzC,MAAM,CACF/J,KP0B8B,yBOzB9BgK,WAAYD,GAIb,SAAS6H,GAAmBJ,GAC/B,OAAM,SAACpK,GACHA,EAmDE,CACFpH,KPpF4B,uBOqF5BgS,gBArDyBR,KAI1B,SAASS,GAAgBlM,GAC5B,OAAM,SAACqB,GACHA,EAqCR,SAAwBrB,GACpB,MAAO,CACH/F,KP5EqC,gCO6ErC+F,MAAOA,GAxCEmM,CAAenM,KAIzB,SAASoM,GAA2B3H,GACvC,OAAM,SAACpD,GACHA,EAiBR,SAA8BoD,GAC1B,MAAO,CACHxK,KP5D6C,wCO6D7CiG,kBAAmBuE,GApBV4H,CAAqB5H,KAI/B,SAAS6H,GAAuB7H,GACnC,OAAM,SAACpD,GACHA,EAIR,SAA0BoD,GACtB,MAAO,CACHxK,KPpDyC,oCOqDzCiF,cAAeuF,GAPN8H,CAAiB9H,KCzElC,IAAM7D,GAAUxC,GAAQC,aAEjB,SAASmO,GAAYC,GACxB,OAAM,SAACpL,GACHA,EAiHR,SAA6BoL,GACzB,MAAM,CACFxS,KRvFoB,eQwFpBwS,KAAMA,GApHGC,CAAoBD,KAI9B,SAASxU,KACZ,IAAM+N,EAAW/E,GAAMC,WAAW2E,KAAK8G,wBAAwB5G,OAAOC,SAChEwE,EAAMvJ,GAAMC,WAAWC,mBAAmBC,QAC1CrD,EAAUkD,GAAMC,WAAWgF,gBAAgBuD,qBAC3CzI,EAAU,CAAE,QAAWwJ,GAC7B,OAAO,SAACnJ,GACJ,OAAOC,KAAMC,KAAKX,GAAU,uBAAwB,CAAEoF,YAAY,CAC9DhF,QAASA,IAEZQ,MAAK,SAAAC,GACmC,SAAlCA,EAASC,KAAKC,QAAQC,SACrBP,EAiHN,CACFpH,KRjH4B,yBQApBoH,EAASqI,GAA6B,IACtCrI,EAASuI,GAA0B,8EACnCvI,EAASyI,GAAuB,YAChChD,YAAW,WAAYzF,EAASqI,GAA6B,MAAQ3L,IAErE0K,MAAM,4CAGbzF,OAAM,SAAAC,GACH,MAAMA,MAKX,SAAS2J,KACZ,IACM5L,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAE1CrD,EAAUkD,GAAMC,WAAWgF,gBAAgBuD,qBACjD,OAAO,SAACpI,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,gCAAiC,CACxDI,QAASA,IACVQ,MAAK,SAACgH,GACgC,SAAlCA,EAAS9G,KAAKC,QAAQC,SACrBP,EAASwL,GAAoBrE,EAAS9G,KAAKC,QAAQlK,WACnD4J,EAASqI,GAA6B,IACtCrI,EAASuI,GAA0B,qDACnCvI,EAASyI,GAAuB,YAChChD,YAAW,WAAYzF,EAASqI,GAA6B,MAAQ3L,IAErE0K,MAAM,6CAMf,SAASqE,KACZ,IACM9L,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAE1CrD,EAAUkD,GAAMC,WAAWgF,gBAAgBuD,qBACjD,OAAO,SAACpI,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,8BAA+B,CACtDI,QAASA,IACVQ,MAAK,SAACgH,GACgC,SAAlCA,EAAS9G,KAAKC,QAAQC,SACrBP,EAASwL,GAAoBrE,EAAS9G,KAAKC,QAAQlK,WACnD4J,EAASqI,GAA6B,IACtCrI,EAASuI,GAA0B,4CACnCvI,EAASyI,GAAuB,YAChChD,YAAW,WAAYzF,EAASqI,GAA6B,MAAQ3L,IAErE0K,MAAM,6CAMf,SAASsE,GAAmBN,GAC/B,OAAO,SAACpL,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,2BAA2BY,MAAK,SAACgH,GACnB,SAAlCA,EAAS9G,KAAKC,QAAQC,QACrBP,EAASwL,GAAoBrE,EAAS9G,KAAKC,QAAQlK,WAEnDgR,MAAM,6CAMf,SAASuE,GAA2B/I,GACvC,IAAMqE,EAASrH,GAAMC,WAAWC,mBAAmBmH,OAC7CrL,EAASgE,GAAMC,WAAWC,mBAAmBlE,OACnD,GAAkB,IAAfgH,GAAoBqE,GAAqB,IAAXrL,EAAa,CAC1C,IACM+D,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAEhD,OAAO,SAACC,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,uBAAwB0H,EAAQ,CACvDtH,QAASA,IACVQ,MAAK,SAACgH,GACgC,SAAlCA,EAAS9G,KAAKC,QAAQC,SACrBP,EAmEV,CACFpH,KR1HmC,8BQ2HnC6O,kBArE0C,IAC9BzH,EAAS4L,GAAmC,KAE5CxE,MAAM,6CAIf,OAAkB,IAAfxE,EACC,SAAC5C,GACJA,EAAS4L,GAAmC,KAI7C,SAAC5L,GACJA,EAAS4L,GAAmC,KAWpD,SAASA,GAAmChJ,GACxC,MAAM,CACFhK,KRlFqC,gCQmFrCiT,wBAAyBjJ,GAUjC,SAASyF,GAA6BjG,GAClC,MAAM,CACFxJ,KR1GqC,gCQ2GrC8P,uBAAwBtG,GAIhC,SAASmG,GAA0B/H,GAC/B,MAAM,CACF5H,KRhHkC,4BQiHlC0P,oBAAqB9H,GAI7B,SAASiI,GAAuB7P,GAC5B,MAAM,CACFA,KRtH+B,0BQuH/B4P,iBAAkB5P,GAI1B,SAAS4S,GAAoBpV,GACzB,MAAM,CACFwC,KR5H2B,sBQ6H3BxC,SAAUA,GC9JlB,IAAMmJ,GAAUxC,GAAQC,aAEX8O,GAAkC,SAAC3Q,GAC5C,OAAO,SAAC6E,GACJA,EA4LR,SAA2C7E,GACvC,MAAM,CACFvC,KTlJ2C,sCSmJ3CmT,UAAW5Q,GA/LF6Q,CAAkC7Q,MAItC8Q,GAAoC,SAACnJ,GAC9C,OAAO,SAAC9C,GACJA,EA6LR,SAA6C8C,GACzC,MAAM,CACFlK,KTxJ6C,wCSyJ7CoF,YAAa8E,GAhMJoJ,CAAoCpJ,MAI9C,SAASqJ,GAAT,GAA6G,IAA5EvL,EAA2E,EAA3EA,SAAUwL,EAAiE,EAAjEA,YAAaC,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,aAAcR,EAAW,EAAXA,UACpG,OAAO,SAAC/L,GACJA,EAIR,YAAqH,IAA5EY,EAA2E,EAA3EA,SAAUwL,EAAiE,EAAjEA,YAAaC,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,aAAcR,EAAW,EAAXA,UACrG,MAAM,CACFnT,KAAM,yBAA0BgI,WAAUwL,cAAaC,eAAcC,cAAaC,eAAcR,aANvFS,CAA+B,CAAC5L,WAAUwL,cAAaC,eAAcC,cAAaC,eAAcR,gBAU1G,SAASU,KACZ,IAAM7L,EAAWhB,GAAMC,WAAW2E,KAAKkI,8BAA8BhI,OAAO9D,SACtEwL,EAAcxM,GAAMC,WAAW2E,KAAKkI,8BAA8BhI,OAAOiI,WACzEN,EAAezM,GAAMC,WAAW2E,KAAKkI,8BAA8BhI,OAAOkI,WAC1EN,EAAc1M,GAAMC,WAAW2E,KAAKkI,8BAA8BhI,OAAOmI,WACzEN,EAAe3M,GAAMC,WAAW2E,KAAKkI,8BAA8BhI,OAAOoI,cAC1EC,EAAgBnN,GAAMC,WAAW2E,KAAKkI,8BAA8BhI,OAAOqI,cAC3EhB,EAAYnM,GAAMC,WAAW2E,KAAKkI,8BAA8BhI,OAAOqH,UACvE9E,EAASrH,GAAMC,WAAW2E,KAAKkI,8BAA8BhI,OAAOuC,OAGpEtH,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAEhD,OAAO,SAACC,GACJ,OAAOC,KAAMC,KAAKX,GAAU,qCAAsC,CAAEqB,WAAUwL,cAAaC,eAAcC,cAAaC,eAAcQ,gBAAehB,YAAW9E,UAAU,CACpKtH,QAASA,IAEZQ,MAAK,SAAAC,GACmC,SAAlCA,EAASC,KAAKC,QAAQC,SACrBP,EAASoG,aAAM,kCACfpC,GAAoBhE,EAAU,6BAA8B,WAC5DA,EAASgN,GAAgC,KACzChN,EAASiN,GAAgC,KAEzCjJ,GAAoBhE,EAAU,gBAAiB,YAGtD2B,OAAM,SAAAC,GACHoC,GAAoBhE,EAAU,gBAAiB,aAKpD,SAASkN,KACZ,IAAMH,EAAgBnN,GAAMC,WAAW2E,KAAKkI,8BAA8BhI,OAAOqI,cAE3EpN,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAEhD,OAAO,SAACC,GACJ,OAAOC,KAAMC,KAAKX,GAAU,qCAAsC,CAAEwN,iBAAiB,CACjFpN,QAASA,IAEZQ,MAAK,SAAAC,GACmC,SAAlCA,EAASC,KAAKC,QAAQC,SACrBP,EAASoG,aAAM,kCACfpC,GAAoBhE,EAAU,mBAAoB,WAClDA,EAASgN,GAAgC,KACzChN,EAASiN,GAAgC,KAEzCjJ,GAAoBhE,EAAU,gBAAiB,YAGtD2B,OAAM,SAAAC,GACHoC,GAAoBhE,EAAU,gBAAiB,aAKpD,SAASmN,KACZ,OAAO,SAACnN,GACJA,EAASgN,GAAgC,MAI1C,SAASI,KACZ,IACMzN,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAEhD,OAAO,SAACC,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,6BAA8B,CACrDI,QAASA,IAEZQ,MAAK,SAAAgH,GACmC,SAAlCA,EAAS9G,KAAKC,QAAQC,QACrBP,EA8GN,CACFpH,KT7J8B,yBS8J9ByU,yBAhH6ClG,EAAS9G,KAAKC,QAAQgN,cAE3DtN,EAASwF,SAGhB7D,OAAM,SAAAC,GACH,MAAMA,MAKX,SAAS2L,GAA0BpS,GACtC,IACMwE,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAGhD,OAAO,SAACC,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,kCAAoCpE,EAAI,CAC/DwE,QAASA,IAEZQ,MAAK,SAAAgH,GACmC,SAAlCA,EAAS9G,KAAKC,QAAQC,QACrBP,EAASgN,GAAgC7F,EAAS9G,KAAKC,QAAQ7C,UAE/DuC,EAASwF,SAGhB7D,OAAM,SAAAC,GACH,MAAMA,MAKX,SAAS4L,GAAyBrS,GACrC,IACMwE,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAGhD,OAAO,SAACC,GAEJ,OAAOC,KAAMiH,IAAI3H,GAAU,iCAAmCpE,EAAI,CAC9DwE,QAASA,IAGZQ,MAAK,SAAAgH,GACmC,SAAlCA,EAAS9G,KAAKC,QAAQC,QACrBP,EAsFN,CACFpH,KT7KkC,6BS8KlC6U,4BAxFgDtG,EAAS9G,KAAKC,QAAQ7C,UAE9DuC,EAASwF,SAGhB7D,OAAM,SAAAC,GACH,MAAMA,MAKX,SAAS8L,KACZ,IACM/N,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAEhD,OAAO,SAACC,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,4BAA6B,CACpDI,QAASA,IAEZQ,MAAK,SAAAgH,GACmC,SAAlCA,EAAS9G,KAAKC,QAAQC,QACrBP,EAkBN,CACFpH,KT9H6B,wBS+H7B+U,iBApB4CxG,EAAS9G,KAAKC,QAAQgN,cAE1DtN,EAASwF,SAGhB7D,OAAM,SAAAC,GACH,MAAMA,MAKX,SAASgM,GAAwBxL,GACpC,OAAO,SAACpC,GACJA,EAASiN,GAAgC7K,KAWjD,SAAS6K,GAAgC7K,GACrC,MAAM,CACFxJ,KTtIkC,6BSuIlCiV,qBAAsBzL,GAyB9B,SAASoD,KACL,MAAM,CACF5M,KTtM4B,wBS0MpC,SAASoU,GAAgCvP,GACrC,MAAM,CACF7E,KTzKgC,2BS0KhCkV,6BAA8BrQ,GCvOtC,IA+BiBlI,GA/BA,CACbC,GAAI,CACFQ,MAAO,QACPU,YAAa,eACbC,aAAc,gBACdoX,OAAQ,gCACRC,OAAQ,iBACRC,eAAgB,kBAChBC,sBAAuB,uDACvBC,cAAe,iBACfvP,aAAc,qBACdwP,OAAQ,SACRhF,QAAS,UACTiF,gBAAiB,+BAGnBvX,GAAI,CACFd,MAAO,2EACPU,YAAa,wFACbC,aAAc,sHACdoX,OAAQ,wHACRC,OAAQ,uEACRC,eAAgB,sEAChBC,sBAAuB,0NACvBC,cAAe,kIACfvP,aAAc,+EACdwP,OAAQ,mBACRC,gBAAiB,gCCRjB9O,GAAUxC,GAAQC,aAuBjB,SAASsR,KACZ,IAAMnF,EAAMvJ,GAAMC,WAAWC,mBAAmBC,QAC1CnB,EAAegB,GAAMC,WAAW0O,iBAAiB/P,qBACjDK,EAAoBe,GAAMC,WAAW0O,iBAAiB1P,kBACxD2P,EAAgB5O,GAAMC,WAAW0O,iBAAiBzM,iBAChD2M,EAAgB7O,GAAMC,WAAW0O,iBAAiBE,cAClD9O,EAAU,CAAE,QAAWwJ,GAC7B,OAAO,SAACnJ,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,mBAAqBiP,EAAgB,IAAMC,EAAe,CACjF9O,QAASA,IAEZQ,MAAK,SAAAgH,GACF,GAAqC,SAAlCA,EAAS9G,KAAKC,QAAQC,QAAmB,CACzCP,EAAS0O,GAA2BvH,EAAS9G,KAAKC,QAAQqO,UAAUrP,SACpEU,EAAS4O,GAAmBzH,EAAS9G,KAAKC,QAAQqO,YAClD,IAAIE,EAAqB9R,GAAQ2B,uBAAuByI,EAAS9G,KAAKC,QAAQqO,UAAW/P,EAAcC,GACvGmB,EAAS8O,GAAoBD,SAE5B7O,EAASwF,SAGhB7D,OAAM,SAAAC,GACH,MAAMA,MAKX,SAASmN,GAAuB5T,GACnC,IAAMgO,EAAMvJ,GAAMC,WAAWC,mBAAmBC,QAC1CnB,EAAegB,GAAMC,WAAW0O,iBAAiB/P,qBACjDK,EAAoBe,GAAMC,WAAW0O,iBAAiB1P,kBACxD2P,EAAgB5O,GAAMC,WAAW0O,iBAAiBzM,iBAChD2M,EAAgB7O,GAAMC,WAAW0O,iBAAiBE,cAClD9O,EAAU,CAAE,QAAWwJ,GAC7B,OAAO,SAACnJ,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,gCAAkCpE,EAAI,CAC7DwE,QAASA,IAEZQ,MAAK,SAAAgH,GACF,GAAqC,SAAlCA,EAAS9G,KAAKC,QAAQC,QACrB,OAAON,KAAMiH,IAAI3H,GAAU,mBAAqBiP,EAAgB,IAAMC,EAAe,CACjF9O,QAASA,IAEZQ,MAAK,SAAAgH,GACF,GAAqC,SAAlCA,EAAS9G,KAAKC,QAAQC,QAAmB,CACzCP,EAAS0O,GAA2BvH,EAAS9G,KAAKC,QAAQqO,UAAUrP,SACpEU,EAAS4O,GAAmBzH,EAAS9G,KAAKC,QAAQqO,YAClD,IAAIE,EAAqB9R,GAAQ2B,uBAAuByI,EAAS9G,KAAKC,QAAQqO,UAAW/P,EAAcC,GACvGmB,EAAS8O,GAAoBD,SAE5B7O,EAASwF,SAGhB7D,OAAM,SAAAC,GACH5B,EAASwF,SAGZxF,EAASwF,SAGjB7D,OAAM,SAAAC,GACH,MAAMA,MAKX,SAASoN,KACZ,OAAO,SAAChP,GACJA,EAAS0O,GAA2B,KAIrC,SAASO,GAAY9T,GACxB,IACMwE,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAEhD,OAAO,SAACC,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,iBAAmBpE,EAAI,CAC9CwE,QAASA,IAEZQ,MAAK,SAAAgH,GAiLP,IAAoBjE,EAhLsB,SAAlCiE,EAAS9G,KAAKC,QAAQC,QACrBP,GA+KWkD,EA/KSiE,EAAS9G,KAAKC,QAAQ4C,QAgL/C,SAAClD,GACJA,EAASkP,GAAqBhM,OA/KtBlD,EAASwF,SAGhB7D,OAAM,SAAAC,GACH,MAAMA,MAKX,SAASuN,GAAmChU,GAC/C,IACMwE,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAGhD,OAAO,SAACC,GACJ,OAAOC,KAAMiH,IAAI3H,GAAU,qCAAuCpE,EAAI,CAClEwE,QAASA,IAEZQ,MAAK,SAAAgH,GACmC,SAAlCA,EAAS9G,KAAKC,QAAQC,QACrBP,EAoJN,CACFpH,KX3NoC,+BW4NpC6E,QAtJ8C0J,EAAS9G,KAAKC,QAAQ7C,UAE5DuC,EAASwF,SAGhB7D,OAAM,SAAAC,GACH,MAAMA,MAKX,SAASwN,GAAT,GAA2C,IAAfC,EAAc,EAAdA,aAC/B,OAAO,SAACrP,GACJA,EAASsP,GAA0B,CAACD,mBAIrC,SAASC,GAAT,GACH,MAAM,CACF1W,KAAM,wBACNyW,aAHiD,EAAdA,cAQpC,SAASE,GAAT,GAAiD,IAAfF,EAAc,EAAdA,aACrC,OAAO,SAACrP,GACJA,EAASwP,GAAgC,CAACH,mBAI3C,SAASG,GAAT,GACH,MAAM,CACF5W,KAAM,+BACNyW,aAHuD,EAAdA,cAS1C,SAASI,GAAeC,GAC3B,IACM/P,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAE1CyB,EAAa5B,GAAMC,WAAW0O,iBAAiBoB,sBAAsBnO,WACrE5C,EAAegB,GAAMC,WAAW0O,iBAAiB/P,qBACjDK,EAAoBe,GAAMC,WAAW0O,iBAAiB1P,kBACxD2P,EAAgB5O,GAAMC,WAAW0O,iBAAiBzM,iBAChD2M,EAAgB7O,GAAMC,WAAW0O,iBAAiBE,cAExD,OAAO,SAACzO,GACJ,OAAOC,KAAM8H,OAAOxI,GAAU,wBAA0BiC,EAAY,CAChE7B,QAASA,IAEZQ,MAAK,SAAAgH,GACF,GAAqC,SAAlCA,EAAS9G,KAAKC,QAAQC,QACrB,OAAON,KAAMiH,IAAI3H,GAAU,mBAAqBiP,EAAgB,IAAMC,EAAe,CACjF9O,QAASA,IAEZQ,MAAK,SAAAgH,GACF,GAAqC,SAAlCA,EAAS9G,KAAKC,QAAQC,QAAmB,CACxCP,EAAS0O,GAA2BvH,EAAS9G,KAAKC,QAAQqO,UAAUrP,SACpEU,EAAS4P,GAAyBC,SAASrO,KAC3CxB,EAAS4O,GAAmBzH,EAAS9G,KAAKC,QAAQqO,YAClD,IAAIE,EAAqB9R,GAAQ2B,uBAAuByI,EAAS9G,KAAKC,QAAQqO,UAAW/P,EAAcC,GACvGmB,EAAS8O,GAAoBD,IAC1Ba,GACC1P,EAAS8P,GAAqC,IAElD9L,GAAoBhE,EAAU,yCAA0C,gBAExEgE,GAAoBhE,EAAU,8BAA+B,SAC7DA,EAASwF,SAGhB7D,OAAM,SAAAC,GACHoC,GAAoBhE,EAAU,8BAA+B,SAC7DA,EAASwF,SAGbxB,GAAoBhE,EAAU,8BAA+B,SAC7DA,EAASwF,SAGhB7D,OAAM,SAAAC,GACH,MAAMA,MAKX,SAASoJ,GAAqB/L,GACjC,OAAO,SAACe,GACJA,EAAS+P,GAA6B9Q,KAIvC,SAAS2Q,GAAyBzU,GACrC,OAAO,SAAC6E,GACJA,EAASgQ,GAAiC7U,KAI3C,SAAS2U,GAAqCG,GACjD,OAAO,SAACjQ,GACJA,EAASkQ,GAA6CD,KAIvD,SAASE,GAAYrN,GACxB,OAAO,SAAC9C,GACJA,EAASoQ,GAA8BtN,KAIxC,SAASuN,KACZ,OAAO,SAACrQ,GACJA,EAASsQ,OAIV,SAASA,GAAiCnV,GAC7C,MAAM,CACFvC,KX3LmC,8BW4LnCuC,GAAIA,GAIL,SAAS6U,GAAiC7U,GAC7C,MAAM,CACFvC,KXnMoF,+EWoMpFuC,GAAIA,GAIL,SAAS+U,GAA6CD,GACzD,MAAM,CACFrX,KX3MmD,8CW4MnDqX,EAAGA,GAIJ,SAASG,GAA8BtN,GAC1C,MAAM,CACFlK,KXnNkD,6CWoNlDkK,KAAMA,GAiBP,IAAMoM,GAAuB,SAAChM,GACjC,MAAM,CACFtK,KXzOmC,8BW0OnCsK,QAASA,IAIV,SAASqN,KACZ,OAAO,SAACvQ,GACJA,EAAS4O,GAAmB,KAC5B5O,EAAS8O,GAAoB,MAI9B,SAASA,GAAoB1E,GAChC,OAAO,SAACpK,GACJA,EAASwQ,GAA4BpG,KAItC,SAASqG,GAAUrC,GACtB,OAAO,SAACpO,GACJA,EAAS0Q,GAAkBtC,KAI5B,IAAMsC,GAAoB,SAACtC,GAC9B,MAAM,CACFxV,KXpQoC,+BWqQpCwV,OAAQA,IAIHoC,GAA8B,SAACpG,GACxC,MAAM,CACFxR,KX5Q+B,0BW6Q/BwR,QAASA,IAIJ2F,GAA+B,SAAC3M,GACzC,MAAM,CACFxK,KXpRmD,8CWqRnDwK,OAAQA,IAIHsL,GAA6B,SAACtL,GACvC,MAAM,CACFxK,KX5R0D,qDW6R1DwK,OAAQA,IAIHwL,GAAqB,SAACD,GAC/B,MAAM,CACF/V,KXpSgD,2CWqShD+V,UAAWA,IAINgC,GAAmC,SAACxV,GAC7C,OAAO,SAAC6E,GACJA,EAAS4Q,GAAmCzV,MAIvCyV,GAAqC,SAACzV,GAC/C,MAAM,CACFvC,KXnT8C,yCWoT9CuC,GAAIA,IAIC0V,GAAsB,WAC/B,IAAMjQ,EAAWhB,GAAMC,WAAW2E,KAAKkI,8BAA8BhI,OAAO9D,SACtEwL,EAAcxM,GAAMC,WAAW2E,KAAKkI,8BAA8BhI,OAAOiI,WACzEN,EAAezM,GAAMC,WAAW2E,KAAKkI,8BAA8BhI,OAAOkI,WAC1EN,EAAc1M,GAAMC,WAAW2E,KAAKkI,8BAA8BhI,OAAOmI,WACzEN,EAAe3M,GAAMC,WAAW2E,KAAKkI,8BAA8BhI,OAAOoI,cAC1Ef,EAAYnM,GAAMC,WAAW0O,iBAAiBzM,iBAG9CnC,EAAU,CAAE,QADNC,GAAMC,WAAWC,mBAAmBC,SAE1CrD,EAAUkD,GAAMC,WAAWgF,gBAAgBuD,qBAC3C0I,EAAclR,GAAMC,WAAWgF,gBAAgB3N,SACrD,OAAO,SAAC8I,GACJ,OAAOC,KAAMC,KAAKX,GAAU,oBAAqB,CAAEqB,WAAUwL,cAAaC,eAAcC,cAAaC,eAAcR,aAAa,CAC5HpM,QAASA,IAEZQ,MAAK,SAAAC,GACmC,SAAlCA,EAASC,KAAKC,QAAQC,SACrBP,EAASoG,aAAM,kCACfpC,GAAoBhE,EAAUzK,GAASub,GAAa5C,sBAAuB,WAC3EzI,YAAW,WAAYzF,EAmD7B,CACFpH,KX3ZqC,gCW4ZrC8P,uBArDqE,MAAQhM,IAErEsH,GAAoBhE,EAAU,gBAAiB,YAGtD2B,OAAM,SAAAC,GACHoC,GAAoBhE,EAAU,gBAAiB,cAsC3D,SAASwF,KACL,MAAM,CACF5M,KXla4B,wBY1B7B,SAASmY,GAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,QAASC,EAAO,EAAPA,MAClC,OAAO,SAACjR,GACJA,EAUR,YAA+C,IAAjBgR,EAAgB,EAAhBA,QAASC,EAAO,EAAPA,MACnC,MAAM,CACFrY,KAAM,eACNoY,QAASA,EACTC,MAAOA,GAdEC,CAAoB,CAACF,UAASC,YAIxC,SAASE,GAAT,GAAkC,IAAb3P,EAAY,EAAZA,WACxB,OAAO,SAACxB,GACJA,EAYR,YAAkD,IAArBwB,EAAoB,EAApBA,WAAYyF,EAAQ,EAARA,OACrC,MAAM,CACFrO,KAAM,cACN4I,WAAYA,EACZyF,OAAQA,GAhBCmK,CAAmB,CAAC5P,iBAoB9B,SAAS6P,KACZ,OAAO,SAACrR,GACJA,EAKE,CACFpH,KAAM,+BCpCP,SAAS0Y,GAAT,GAA0D,IAAxBC,EAAuB,EAAvBA,sBACrC,OAAO,SAACvR,GACJA,EAKE,CACFpH,KAAM,6BACN2Y,sBAPyC,CAACA,yBAIRA,yBAQnC,SAASC,KACZ,OAAO,SAACxR,GACJA,EAKE,CACFpH,KAAM,8CACNqX,EAAG,M,yBCQM1a,I,OA/BA,CACbC,GAAI,CACFic,aAAc,qBACdC,kBAAmB,uEACnBC,YAAa,mWACbC,sBAAuB,6BACvBlO,cAAe,yMACfmO,mBAAoB,yHACpBzI,QAAS,UACT0I,kBAAmB,iBACnBC,WAAY,cACZ5b,GAAI,OACJ6b,wBAAyB,kEACzBC,0CAA2C,kGAE7Cnb,GAAI,CACF2a,aAAc,oDACdC,kBAAmB,gXACnBC,YAAa,0xDACbC,sBAAuB,8HACvBlO,cAAe,miCACfmO,mBAAoB,2lBACpBzI,QAAS,6CACT0I,kBAAmB,uEACnBC,WAAY,oFACZ5b,GAAI,yCACJ6b,wBAAyB,gVACzBC,0CAA2C,gjB,oBCb3CC,G,kDACJ,WAAYjb,GAAQ,IAAD,uBACjB,cAAMA,IA8BRE,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IA9BvB,EAAK+G,MAAQja,IAAMka,YAFF,IAGTC,EAAYpb,EAAZob,QACFC,EAAWD,EAAQnL,IAAI,yBAA2BmL,EAAQnL,IAAI,yBAA2B,QACzFqL,EAAkCF,EAAQnL,IAAI,iBAAmBmL,EAAQnL,IAAI,iBAAmB,QALrF,OAOjB,EAAK3O,MAAQ,CACXia,sBAAuBF,EACvBG,8BAA+BF,GAThB,E,gEAaC,IAAD,OACjBlb,KAAKJ,MAAM6S,oBACXrE,YAAW,WACN,EAAKlN,MAAMia,sBAAsBlT,OAAS,GAC3C,EAAKrI,MAAMyb,QAAQC,KAAK,cAEvB,EAAKpa,MAAMka,8BAA8BnT,OAAS,GACnD,EAAKrI,MAAMyb,QAAQC,KAAK,wBAEzB,KACHtb,KAAKJ,MAAMoP,wCAAwC,K,gDAKnDhP,KAAKJ,MAAM+P,4B,+BAQX,IAAM4L,EAAU,CAAC,CACfC,UAAW,OACX9T,KAA8B,OAAxB1H,KAAKJ,MAAMC,SAAoB3B,GAASC,GAAG4T,QAAU7T,GAASuB,GAAGsS,QACvEnL,MAAM,GACL,CACD4U,UAAW,mBACX9T,KAA8B,OAAxB1H,KAAKJ,MAAMC,SAAoB3B,GAASC,GAAGsc,kBAAoBvc,GAASuB,GAAGgb,kBACjF7T,MAAM,IAGF2G,EAAe,CACnBkO,WAAoC,OAAxBzb,KAAKJ,MAAMC,SAAoB3B,GAASC,GAAGuc,WAAaxc,GAASuB,GAAGib,YAEpF,OACM,6BACE,kBAAC,IAAD,CAAc1Y,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WAEvE,kBAAC,GAAD,CAAsB4E,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAAU8D,OAAQvE,KAAKJ,MAAM2E,OAAQzE,eAAgBE,KAAKF,eAAgBD,SAAUG,KAAKJ,MAAMC,WAC7K,yBAAKK,UAAU,YAAYC,MAAQH,KAAKkB,MAAMia,sBAAsBlT,OAAS,EAAK,CAAC7H,QAAS,QAAU,IACpG,yBAAKD,MAA8B,IAAtBH,KAAKJ,MAAM2E,QAAsC,IAAtBvE,KAAKJ,MAAM2E,QAAsC,IAAtBvE,KAAKJ,MAAM2E,OAAgB,GAAK,CAACnE,QAAS,SAC3G,4BAAI,kBAAC,IAAD,CAAkB0D,GAAG,kBACzB,4CAAiB,kBAAC,IAAD,CAAkBA,GAAG,gBAAtC,kBACA,gDAAqB,kBAAC,IAAD,CAAkBA,GAAG,sBAA1C,oBACA,kBAAC,KAAD,CAAgB4X,SAAS,KAAK1S,KAAOhJ,KAAKJ,MAAM8S,aAAe6I,QAAUA,KAE3E,yBAAKpb,MAA8B,IAAtBH,KAAKJ,MAAM2E,OAAgB,GAAK,CAACnE,QAAS,SACvD,6BAAK,6BAAK,6BAAK,6BAAK,6BAClB,iDAAsB,kBAAC,IAAD,CAAkB0D,GAAG,0BAA3C,oBACA,6BAAK,6BACL,gDAAqB,kBAAC,IAAD,CAAkBA,GAAG,kBAA1C,oBACA,gDAAqB,kBAAC,IAAD,CAAkBA,GAAG,uBAA1C,oBACA,6BAAK,6BACL,kBAAC6X,GAAA,EAAD,CAAQpY,QAAQ,YAAaxD,QAASC,KAAK2P,wBAAwB1P,KAAKD,OAAQuN,EAAakO,aAE/F,yBAAKtb,MAA8B,IAAtBH,KAAKJ,MAAM2E,OAAgB,GAAK,CAACnE,QAAS,SACvD,6BAAK,6BAAK,6BAAK,6BAAK,6BAClB,iDAAsB,kBAAC,IAAD,CAAkB0D,GAAG,OAAQ9D,KAAKJ,MAAMa,SAA9D,oBACA,6BAAK,6BACL,gDAAqB,kBAAC,IAAD,CAAkBqD,GAAG,4BAA4B,2BAAI9D,KAAKJ,MAAMgO,kBAArF,oBACA,gDAAqB,kBAAC,IAAD,CAAkB9J,GAAG,8CAA1C,4B,GA5EGjD,IAAMR,WA2FVub,iBANO,SAAC1a,GACrB,OAAO,mDACFA,EAAMkI,aAAgBlI,EAAMuH,oBAAuBvH,EAAM2a,iBAAoB3a,EAAMsM,mBAIlDsO,EAAzBF,CAAyCG,aAAYlB,K,qCC9FnD3c,GAXA,CACbC,GAAI,CACF6d,SAAU,YACVC,QAAS,OAEXxc,GAAI,CACFuc,SAAU,8FACVC,QAAS,uB,gzCCLf,IAuDeC,GAvDSC,KAAOC,IAAV,MAOV,SAAAxc,GAAK,OAAIA,EAAMyc,WAEf,SAAAzc,GAAK,OAAIA,EAAM0c,UCgGXC,G,kDArGX,aAAe,IAAD,8BACV,gBACKrb,MAAQ,CAAEsb,KAAM,GAAIP,QAAS,GAAIQ,OAAQ,QAASC,QAAS,IAChE,EAAKC,MAAQ,EACb,EAAKC,WAAa,EAAKA,WAAW3c,KAAhB,iBAClB,EAAK4c,UAAY,EAAKA,UAAU5c,KAAf,iBACjB,EAAK6c,WAAa,EAAKA,WAAW7c,KAAhB,iBANR,E,0DASE8c,GACZ,IAEIC,EAAsBD,EAAI,KAG1BE,EAAsBD,EAAsB,GAQhD,MALU,CACR,EATUlV,KAAKC,MAAMgV,EAAI,MAUzB,EAPYjV,KAAKC,MAAMiV,EAAsB,IAQ7C,EALYlV,KAAKoL,KAAK+J,M,mCAWxBjd,KAAKmB,SAAS,CACV8a,QAAS,O,0CAKb,IAAIiB,EAAcld,KAAKmd,cAAcnd,KAAKkB,MAAM+a,SAChDjc,KAAKmB,SAAS,CAAEqb,KAAMU,M,mCAItBE,cAAcpd,KAAK2c,OACnB3c,KAAK2c,MAAQ,EACb3c,KAAKmB,SAAS,CAAEqb,KAAM,KACtBxc,KAAKmB,SAAS,CAAE8a,QAAS,KACN,IAAfjc,KAAK2c,OAAe3c,KAAKkB,MAAM+a,QAAU,IAC3Cjc,KAAK2c,MAAQU,YAAYrd,KAAK6c,UAAW,Q,kCAM3C,IAAIZ,EAAUjc,KAAKkB,MAAM+a,QAAU,EAC7BqB,EAAqC,IAAtBtd,KAAKkB,MAAMsb,KAAKe,EAAU,MAAUvd,KAAKkB,MAAMsb,KAAKe,EAAG,GAAI,IAChFvd,KAAKmB,SAAS,CACZqb,KAAMxc,KAAKmd,cAAclB,GACzBA,QAASA,EACTQ,OAAQa,EAAe,OAEtBrB,GAAU,GAAKA,EAAU,GAC1Bjc,KAAKmB,SAAS,CACZub,QAAS,YAEFT,GAAU,IAAMA,EAAU,GACnCjc,KAAKmB,SAAS,CACZub,QAAS,YAEFT,GAAU,IAAMA,EAAU,IACnCjc,KAAKmB,SAAS,CACZub,QAAS,YAIG,IAAZT,IACFmB,cAAcpd,KAAK2c,OACnB3c,KAAK2c,MAAQ,EACb3c,KAAKmB,SAAS,CAAEqb,KAAM,KACtBxc,KAAKmB,SAAS,CAAE8a,QAAS,KACzBjc,KAAKJ,MAAM4d,kB,+BAKjB,IAAMC,EAAuC,IAAtBzd,KAAKkB,MAAMsb,KAAKe,EAAU,IAAQvd,KAAKkB,MAAMsb,KAAKe,EAAG,GAAI,IAChF,OACE,kBAAC,GAAD,CAAiBlB,QAASoB,EAAgBnB,OAAQtc,KAAKkB,MAAMwb,SAC3D,kBAAC,IAAD,CAAc1a,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACvE,yBAAKK,UAAU,aACb,+BACA,+BACI,4BACI,wBAAIA,UAAU,kBAAkBC,MAAO,CAACud,gBAAkB1d,KAAKkB,MAAMwb,QAASxZ,MAAO,QAASX,MAAO,UAArG,OAAqH,kBAAC,IAAD,CAAkBuB,GAAG,aAA1I,KAA0J9D,KAAKkB,MAAMsb,KAAKe,EAA1K,IAA6K,kBAAC,IAAD,CAAkBzZ,GAAG,YAAlM,kB,GAzFIzD,aCgDPnC,GArDA,CACbC,GAAI,CACFwf,MAAO,QACPC,qBAAsB,iFACtBC,eAAgB,8IAChBC,MAAO,QACPpH,OAAQ,0DACRC,OAAQ,aACRC,eAAgB,UAChBmH,kBAAmB,WACnBxU,SAAU,WACVyU,uBAAwB,4BACxBC,YAAa,0BACbC,uBAAwB,mBACxBC,eAAgB,UAChBC,WAAY,eACZC,UAAW,iBACXC,UAAW,cACXjgB,KAAM,QACNuN,gBAAiB,mBACjB2S,sBAAuB,2BACvBC,YAAa,OACbC,WAAY,eACZC,eAAgB,+BAChBC,YAAa,gBAEflf,GAAI,CACFke,MAAO,4BACPC,qBAAsB,ygBACtBC,eAAgB,kqBAChBC,MAAO,kCACPpH,OAAQ,sVACRC,OAAQ,2CACRC,eAAgB,6CAChBmH,kBAAmB,8CACnBxU,SAAU,uCACVyU,uBAAwB,8KACxBC,YAAa,mKACbC,uBAAwB,wIACxBC,eAAgB,oDAChBC,WAAY,mFACZC,UAAW,kHACXC,UAAW,2DACXjgB,KAAM,4BACNuN,gBAAiB,kFACjB2S,sBAAuB,sJACvBC,YAAa,2BACbC,WAAY,uEACZC,eAAgB,sJAChBC,YAAa,yE,8BC2BJC,G,4MAnEX1d,MAAQ,CACJ2d,MAAM,G,EAGVC,UAAY,WACR,EAAK3d,SAAS,CACV0d,MAAM,K,EAIdE,UAAY,SAAAC,GACR,EAAK7d,SAAS,CACV0d,MAAM,K,EAIdI,SAAW,WACP,EAAK9d,SAAS,CACV0d,MAAM,IAEV,EAAKjf,MAAMsf,a,EAGfC,iBAAmB,SAACH,GAChBA,EAAEI,mB,EAGNC,YAAc,WACV,EAAKle,SAAS,CACV0d,MAAM,K,uDAKV,OACI,kBAACS,GAAA,EAAD,CAAQje,KAAMrB,KAAKkB,MAAM2d,KAAMva,QAAStE,KAAKqf,YAAYpf,KAAKD,OAC1D,kBAACuf,GAAA,EAAD,KAAcvf,KAAKJ,MAAM1B,SAASqgB,uBAClC,kBAACiB,GAAA,EAAD,KACA,yBAAKrf,MAAO,CAAEoC,MAAO,SACjB,kBAACC,EAAA,EAAD,CAAKpC,QAAQ,OAAOqC,cAAc,MAAMC,EAAG,EAAGC,EAAG,GAC7C,kBAACc,EAAA,EAAD,CAASC,MAAO1D,KAAKJ,MAAM1B,SAASsgB,aAChC,kBAAChc,EAAA,EAAD,CAAKH,GAAI,CAAEK,EAAG,EAAGmB,GAAI,MACjB,kBAAC8X,GAAA,EAAD,CAAQpY,QAAQ,YAAYL,MAAM,QAAQnD,QAASC,KAAKif,SAAShf,KAAKD,OACjEA,KAAKJ,MAAM1B,SAASsgB,eAIjC,yBAAKre,MAAO,CAAEoC,MAAO,SACrB,kBAACC,EAAA,EAAD,CAAKpC,QAAQ,OAAOqC,cAAc,cAAcC,EAAG,EAAGC,EAAG,GACrD,kBAACc,EAAA,EAAD,CAASC,MAAO1D,KAAKJ,MAAM1B,SAASugB,YAChC,kBAACjc,EAAA,EAAD,CAAKH,GAAI,CAAEK,EAAG,EAAGmB,GAAI,MACjB,kBAAC8X,GAAA,EAAD,CAAQpY,QAAQ,YAAaxD,QAASC,KAAK+e,UAAU9e,KAAKD,OACrDA,KAAKJ,MAAM1B,SAASugB,wB,GArDtC5d,IAAMR,W,gyBCN7B,IAiCeof,GAjCOtD,KAAOC,IAAV,M,UCgFJsD,OA3Ef,SAAyB9f,GAAQ,IAAD,EACEiB,WAAe,MADjB,mBACvBkD,EADuB,KACb4b,EADa,OAEY9e,YAAgB,GAF5B,mBAEvBe,EAFuB,KAERC,EAFQ,KAGxBR,EAAOgD,QAAQN,GAKfwJ,EAAe,CACnBoJ,OAA4B,OAAnB/W,EAAMC,SAAoBD,EAAM1B,SAASC,GAAGwY,OAAS/W,EAAM1B,SAASuB,GAAGkX,OAChFiJ,cAAmC,OAAnBhgB,EAAMC,SAAoBD,EAAM1B,SAASC,GAAGyhB,cAAgBhgB,EAAM1B,SAASuB,GAAGmgB,eAG1FC,EAAYjgB,EAAMkgB,QACpBrU,EAA6B,IAAtB7L,EAAMmgB,aAAqBxS,EAAaoJ,OAASkJ,EAAUje,GAAe6J,KAQ/EF,EAAe3L,EAAM2L,YAAmC,SAArB3L,EAAM2L,WAAwB,OAAS,QAMhF,OACE,uBAAKpL,MAAO,CAACC,QAASmL,IACpB,gBAACvG,EAAA,EAAD,CACEgb,UAAU,MACVld,aAAW,kBACXT,GAAI,CAAEqa,QAAS,qBAEf,gBAACuD,GAAA,EAAD,CACEC,QAAM,EACNpc,GAAG,cACHd,gBAAc,UACdD,gBAAc,YACdD,aAAW,wBACXqd,gBAAe9e,EAAO,YAAS4E,EAC/BlG,QAtCoB,SAACuB,GAC3Bqe,EAAYre,EAAMqC,iBAuCZ,gBAACuB,EAAA,EAAD,CACEkb,QAAS7S,EAAaqS,cACtBS,UAAW5U,MAIjB,gBAAC7H,EAAA,EAAD,CACEE,GAAG,YACHC,SAAUA,EACV1C,KAAMA,EACNiD,QA9Bc,WAClBqb,EAAY,OA8BRW,cAAe,CACb,kBAAmB,cACnBxb,KAAM,YAGPlF,EAAMkgB,QAAQzN,KAAI,SAACkO,EAAQxe,GAAT,OACjB,gBAACyC,EAAA,EAAD,CACEhD,IAAK+e,EAAOzc,GACZ0c,KAAQze,EACR0e,SAAU1e,IAAUH,EACpB7B,QAAS,SAACuB,GAAD,OAjDS,SAACA,EAAOS,EAAO+B,EAAI2H,GAC7C7L,EAAM8gB,oBAAoB5c,EAAI2H,GAC9B5J,EAAiBE,GACjB4d,EAAY,MA8CgBgB,CAAoBrf,EAAOS,EAAOwe,EAAOzc,GAAIyc,EAAO9U,QAEvE8U,EAAO9U,Y,0CCnDdmV,G,kDACJ,WAAYhhB,GAAQ,IAAD,8BACjB,cAAMA,IAURihB,qBAAuB,WACrBC,KAAE,cAAcC,QAAQ,UAZP,EA8CnBC,iBAAmB,SAAC1f,GAClB,IAAM2f,EAAW,EAAKrhB,MAAM8S,aAAahM,QAAO,SAAAqE,GAAK,OAAIA,EAAMjH,KAAOxC,EAAM4f,OAAOnW,SACnF,EAAK5J,SAAS,CACZsJ,iBAAkBnJ,EAAM4f,OAAOnW,MAC/BoW,mBAAoBF,IAEtB,EAAKrhB,MAAMuL,oBAAoB7J,EAAM4f,OAAOnW,OACzCkW,EAAS,GACV,EAAKrhB,MAAM4L,sBAAsByV,EAAS,GAAGxV,MAE7C,EAAK7L,MAAM4L,sBAAsB,KAxDlB,EA4DnBkV,oBAAsB,SAAC5c,EAAI2H,GACzB,EAAKtK,SAAS,CACZsJ,iBAAkB3G,EAClBqd,mBAAoB1V,IAEtB,EAAK7L,MAAMuL,oBAAoBrH,GAC1B2H,EACH,EAAK7L,MAAM4L,sBAAsBC,GAEhC,EAAK7L,MAAM4L,sBAAsB,KArEnB,EAyEnB4V,cAAgB,SAACtd,GACf,EAAKlE,MAAMyL,sBAAqB,GAChC+C,YACE,WACE,EAAKiT,UAAUC,QAAQxE,aACvB,EAAKld,MAAMuI,eAAe,EAAKvI,MAAMwI,mBAAoBtE,EAAI,EAAKlE,MAAM6K,kBACxE,IAAI8W,GAAiB,EAAK3hB,MAAMqK,gBAAgB,EAAK,KAAO,GAC5D,EAAK9I,SAAS,CACZsJ,iBAAkB8W,IAEpB,EAAK3hB,MAAMwK,yBAAyB,KACnC,MApFY,EA8FnBoX,0BAA4B,WAC1B,EAAK5hB,MAAM4K,aAAa,EAAKtJ,MAAMuJ,iBAAkB,EAAK7K,MAAM8K,kBAChE,EAAK2W,UAAUC,QAAQ1E,cAhGN,EAmGnB6E,yBAA2B,WACzB,EAAK7hB,MAAMgL,+BApGM,EAuGnB8W,2BAA6B,WACF,IAAtB,EAAK9hB,MAAM2E,OACZ,EAAK3E,MAAMyb,QAAQC,KA7GM,QA+GzB,EAAK1b,MAAMyb,QAAQC,KAhHG,kBAKP,EA+GnBqG,eAAiB,WAEf,EAAK/hB,MAAM8T,2BAA2B,GACtC,EAAK9T,MAAMqL,iCAAiC,EAAKrL,MAAMwI,mBAxHrB,GAyHlC,EAAKwZ,WAEL,EAAKhiB,MAAM6S,oBACX,EAAKmP,WACL,EAAKf,wBAvHY,EA0HnB/gB,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IAzHvB,EAAK+G,MAAQja,IAAMka,YACnB,EAAKsG,UAAYxgB,IAAMka,YACvB,EAAK7Z,MAAQ,CACXuJ,iBAAkB,GAClB0W,mBAAoB,IAEtB,EAAKU,OAAShhB,IAAMka,YARH,E,uDAgBjB/a,KAAKJ,MAAMuL,oBAAoB,IAC/BnL,KAAKJ,MAAM8L,wBAAwB,IACnC1L,KAAKJ,MAAM+L,sBAAsB,IACjC3L,KAAKJ,MAAM0J,mBAAmB,IAC9BtJ,KAAKJ,MAAM4J,WAAW,IACtBxJ,KAAKJ,MAAM8J,oBAAoB,GAC/B1J,KAAKJ,MAAMgK,mBAAmB,GAC9B5J,KAAKJ,MAAMkK,qBAAqB,K,0CAIhC9J,KAAKJ,MAAM6S,oBACXzS,KAAK4hB,WACL5hB,KAAK6gB,uBACL3a,SAAS4b,uBAAuB,iBAAiB,GAAGC,iBAAiB,eAAe,SAAC/C,GACnFA,EAAEgD,sB,2CAKJhiB,KAAK6gB,yB,6CAKL7gB,KAAKJ,MAAM8T,2BAA2B,GACtC1T,KAAKJ,MAAMqL,iCAAiCjL,KAAKJ,MAAMwI,mBAhDrB,GAiDlCpI,KAAK4hB,a,kCAgDH5hB,KAAK6hB,OAAOP,QAAQxC,c,+BAmCd,IAAD,OACDvT,EAA+C,KAAlCvL,KAAKJ,MAAMwI,mBAA6B,GAAK,OACtCpI,KAAKJ,MAAMqiB,kBAEpC,OACC,kBAACC,GAAD,KACE,kBAAC,IAAD,CAAclgB,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACrE,kBAAC,GAAD,CAAUsiB,IAAKniB,KAAK6hB,OAAQ3C,UAAalf,KAAKyhB,yBAAyBxhB,KAAKD,MAAO9B,SAAUA,GAAS8B,KAAKJ,MAAMC,YACjH,6BACE,kBAAC,GAAD,CAAsB4E,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAAU8D,OAAQvE,KAAKJ,MAAM2E,OAAQzE,eAAgBE,KAAKF,eAAgBD,SAAUG,KAAKJ,MAAMC,WAC7K,yBAAKK,UAAU,2BACb,wBAAIA,UAAU,eAAc,kBAAC,IAAD,CAAkB4D,GAAG,WACjD,wBAAI3D,MAAyC,KAAlCH,KAAKkB,MAAMigB,mBAA4B,CAAC/gB,QAAS,QAAW,IACrE,kBAAC,IAAD,CAAkB0D,GAAG,mBADvB,KAC6C9D,KAAKJ,MAAMuhB,oBAGxD,yBAAKjhB,UAAU,oBAAoBC,MAAuC,KAAhCH,KAAKJ,MAAM6K,iBAA0B,GAAK,CAACrK,QAAS,SAC1F,uBAAGD,MAA+B,KAAxBH,KAAKJ,MAAMa,SAAkB,GAAK,CAAEL,QAAS,SACrD,kBAAC,IAAD,CAAkB0D,GAAG,0BAEvB,uBAAG3D,MAA+B,KAAxBH,KAAKJ,MAAMa,SAAkB,GAAK,CAAEL,QAAS,SACrD,kBAAC,IAAD,CAAkB0D,GAAG,mBAAmB,kBAAC,IAAD,CAAMR,GAAG,eAAc,kBAAC,IAAD,CAAkBQ,GAAG,YAEtF,2BACE,kBAAC,IAAD,CAAkBA,GAAG,aAM3B,kBAAC,GAAD,CAAiBgc,QAAS9f,KAAKJ,MAAM8S,aAAcgO,oBAAqB1gB,KAAK0gB,oBAAqB7gB,SAAUG,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAUqN,WAAYA,EAAYwU,aAAgB/f,KAAKJ,MAAM6K,mBACxM,6BAIA,yBAAKtK,MAAuC,KAAhCH,KAAKJ,MAAM6K,iBAA0B,CAACrK,QAAS,QAAU,IACnE,kBAACub,GAAA,EAAD,CAAQpY,QAAQ,YAAaxD,QAASC,KAAKwhB,0BAA2BrhB,MAAyC,KAAlCH,KAAKJ,MAAMwI,mBAA6B,GAAK,CAAChI,QAAS,SAClI,kBAAC,IAAD,CAAkB0D,GAAG,cADvB,IACuC9D,KAAKJ,MAAMuhB,mBADlD,IACsE,kBAAC,IAAD,CAAkBrd,GAAG,WAM7F,yBAAK5D,UAAU,cAAcC,MAAsC,KAA/BH,KAAKJ,MAAMgM,gBAAyB,CAACxL,QAAS,QAAU,IAC1F,2BAAOF,UAAU,kBACf,+BACE,4BACI,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,sBAAzB,KAAkD9D,KAAKJ,MAAMwiB,0BAA7D,QACA,4BAAI,kBAAC,GAAD,CAAWD,IAAKniB,KAAKqhB,UAAW7D,aAAgBxd,KAAKyhB,yBAA0B5hB,SAAUG,KAAKJ,MAAMC,YACxG,4BACE,yBAAKK,UAAU,aAAaC,MAA8B,IAAtBH,KAAKJ,MAAM2E,QAAsC,IAAtBvE,KAAKJ,MAAM2E,OAAgB,GAAK,CAAEnE,QAAS,SACxG,kBAAC6E,EAAA,EAAD,CAAgB5C,GAAI,CAAEa,MAAO,OAASnD,QAAS,WAAK,EAAKH,MAAMka,WAAW,CAAC3P,WAAY,EAAKvK,MAAMqiB,sBAChG,kBAAC1c,EAAA,EAAD,KACE,kBAAC,KAAD,CAAelD,GAAI,CAAEa,MAAO,UAE9B,kBAACgC,EAAA,EAAD,CAAc7C,GAAI,CAAEC,IAAK,EAAG+f,QAAS,QACnC,kBAAC,IAAD,CAAkBve,GAAG,wBAMjC,4BAAI,4BAAI,kBAAC,IAAD,CAAkBA,GAAG,mBAAzB,KAA+C9D,KAAKJ,MAAM0iB,0BAA8B,6BAAS,gCAGzG,6BACA,2BACE,kBAAC,IAAD,CAAkBxe,GAAG,oBADvB,KAGA,uBAAG5D,UAAU,iBAAiBF,KAAKJ,MAAMgM,iBACzC,kBAAC,IAAD,CAAkB9H,GAAG,2BA3BvB,IA2BmD,6BAChD9D,KAAKJ,MAAMiM,QAAQwG,KAAI,SAACtH,GAAD,OACxB,yBAAK7K,UAAU,cAAcwD,MAAM,4BAA4BvD,MAA0C,MAAlC,EAAKP,MAAMyJ,oBAAmE,IAArC,EAAKzJ,MAAM2iB,sBAA+B,EAAKrhB,MAAMuJ,mBAAqBM,EAAMjH,GAAK,CAAC0e,QAAS,mBAAqB,CAACA,QAAS,iBAAoB,GAC9PhhB,IAAKuJ,EAAMjH,GAAI2e,UAAS1X,EAAMjH,GAAI/D,QAAS,kBAAM,EAAKqhB,cAAcrW,EAAMjH,MAAMiH,EAAMU,SAClF,6BAAK,6BACb,kBAACkQ,GAAA,EAAD,CAAQpY,QAAQ,YAAYL,MAAM,QAAQnD,QAASC,KAAK0iB,UAAUziB,KAAKD,OAAO,kBAAC,IAAD,CAAkB8D,GAAG,kBAKrG,yBAAK3D,MAAwC,IAAjCH,KAAKJ,MAAMmK,kBAA0B,CAAC3J,QAAS,QAAU,IACnE,2BAAG,kBAAC,IAAD,CAAkB0D,GAAG,2BAAxB,KACA,2BAAG,kBAAC,IAAD,CAAkBA,GAAG,sBAAxB,KAAiD9D,KAAKJ,MAAMwiB,0BAA5D,KACA,2BAAG,kBAAC,IAAD,CAAkBte,GAAG,mBAAxB,KAA8C9D,KAAKJ,MAAM0iB,yBAAzD,KACA,kBAAC3G,GAAA,EAAD,CAAQpY,QAAQ,YAAYxD,QAASC,KAAK2hB,gBACxC,6BACE,kBAAC,IAAD,CAAkB7d,GAAG,kBAN3B,eAUE,kBAAC6X,GAAA,EAAD,CAAQpY,QAAQ,YAAaxD,QAASC,KAAK0hB,4BACzC,yBAAKvhB,MAA6B,IAAtBH,KAAKJ,MAAM2E,OAAe,CAACnE,QAAS,QAAU,IACxD,kBAAC,IAAD,CAAkB0D,GAAG,gBAEvB,yBAAK3D,MAA6B,IAAtBH,KAAKJ,MAAM2E,OAAe,CAACnE,QAAS,QAAU,IACxD,kBAAC,IAAD,CAAkB0D,GAAG,yB,GA9NxBjD,IAAMR,WAkPVub,iBANO,SAAC1a,GACrB,OAAO,+DACFA,EAAMkI,aAAgBlI,EAAMuH,oBAAuBvH,EAAM2a,iBAAoB3a,EAAM2R,gBAAmB3R,EAAMsM,mBAI3EsO,EAAzBF,CAAyCgF,I,oBC5OvC1iB,GA7BA,CACbC,GAAI,CACAI,MAAO,QACPokB,YAAa,QACbC,aAAc,iBACdtV,SAAU,WACVkC,eAAgB,kBAChB+K,sBAAuB,6BACvBsI,eAAgB,mBAChBC,SAAU,gBACVC,WAAY,wBACZC,SAAU,WACV1U,OAAQ,UAEZ7O,GAAI,CACAlB,MAAO,iCACPokB,YAAa,wEACbC,aAAc,mIACdtV,SAAU,uCACVkC,eAAgB,8FAChB+K,sBAAuB,8HACvBsI,eAAgB,uEAChBC,SAAU,8FACVC,WAAY,oLACZC,SAAU,oGACV1U,OAAQ,4G,UCVV2U,GAAc,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,MAAOzX,EAA2D,EAA3DA,KAAM0X,EAAqD,EAArDA,MAAqD,KAA9C5hB,KAA8C,EAAxC6hB,MAAQC,EAAgC,EAAhCA,QAAS9Y,EAAuB,EAAvBA,MAC1D+Y,GADiF,EAAhBC,QAC3DF,KAAe9Y,GACrBiZ,EAAcH,GAAW9Y,EAC7B,OAAQ,kBAACkZ,GAAA,EAAD,eAAW3f,GAAI2H,EAAMA,KAAMA,GAAUyX,EAArC,CAA4CC,MAAOA,EAAO5Y,MAAO+Y,EAAKI,WAAYF,EAAa3gB,KAAK,QAAQU,QAAQ,WAAWogB,WAAS,MAI9IC,GAAsB,SAAC,GAAoF,IAAlFV,EAAiF,EAAjFA,MAAQzX,EAAyE,EAAzEA,KAAO0X,EAAkE,EAAlEA,MAAkE,KAA1D5hB,KAA0D,EAAnD6hB,MAAQC,EAA2C,EAA3CA,QAAS9Y,EAAkC,EAAlCA,MAAkBsZ,GAAgB,EAA3BN,QAA2B,EAAhBM,YACxFP,EAAMD,KAAe9Y,EACrBiZ,EAAcH,GAAW9Y,EAC7B,OAAQ,kBAACkZ,GAAA,EAAD,eAAW3f,GAAI2H,EAAMA,KAAMA,GAAUyX,EAArC,CAA4CC,MAAOA,EAAO5Y,MAAO+Y,EAAKI,WAAYF,EAAa3gB,KAAK,QAAQU,QAAQ,WAAWogB,WAAS,EAACpiB,KAAMsiB,MAuC5IC,gBAAU,CACvB3W,KAAM,iBACN4W,SA1De,SAAC1W,EAAQzN,GACtB,IAAMokB,EAAS,GAGf,OAFK3W,EAAOH,MAA0E,4CAA4C7O,KAAKgP,EAAOH,SAAW8W,EAAO9W,MAAQhP,GAAS0B,EAAMC,UAAUkjB,YAA3KiB,EAAO9W,MAAShP,GAAS0B,EAAMC,UAAUmjB,SAC1D3V,EAAOC,WAAc0W,EAAO1W,SAAYpP,GAAS0B,EAAMC,UAAUmjB,UAC/DgB,IAoDIF,EApCI,SAAAlkB,GAAU,IACnBqkB,EAAmIrkB,EAAnIqkB,aAAcC,EAAqHtkB,EAArHskB,SAAUnV,EAA2GnP,EAA3GmP,MAAOoV,EAAoGvkB,EAApGukB,WAAY5V,EAAwF3O,EAAxF2O,aAAc6V,EAA0ExkB,EAA1EwkB,uBAAwBvkB,EAAkDD,EAAlDC,SAAUwkB,EAAwCzkB,EAAxCykB,MAAOR,EAAiCjkB,EAAjCikB,WAAYS,EAAqB1kB,EAArB0kB,iBAChH/W,EAAe,CACnBqV,aAA4B,OAAb/iB,EAAoB3B,GAASC,GAAGykB,aAAe1kB,GAASuB,GAAGmjB,aAC1EtV,SAAwB,OAAbzN,EAAoB3B,GAASC,GAAGmP,SAAWpP,GAASuB,GAAG6N,UAKpE,OACE,kBAAC,IAAD,CAActL,OAAQnC,EAAU3B,SAAUA,GAAS2B,IACjD,0BAAM0kB,SAAUN,GACd,2BAAO/jB,UAAU,oBACb,+BACI,4BACI,4BAAI,kBAACskB,GAAA,EAAD,CAAQ/Y,KAAK,QAASuU,UAAWiD,GAAa1hB,KAAK,OAAO4hB,MAAO5V,EAAaqV,gBAAqB,8BAE3G,4BACI,4BAAK,kBAAC4B,GAAA,EAAD,CAAQ/Y,KAAK,WAAauU,UAAW4D,GAAqBT,MAAO5V,EAAaD,SAAUuW,WAAYA,KACzG,wBAAI3jB,UAAU,2BAA0B,0BAAMA,UAAU,mBAAmBH,QAASukB,GAA5C,eAAgF,uBAAGpkB,UAAU,YAAYukB,cAAY,OAAOtkB,MAAsB,SAAf0jB,EAAwB,CAACa,QAAS,IAAO,QAExN,wBAAIvkB,MAAO,CAACoL,WAAW,GAAD,OAAK6Y,KAA2B,4BAAI,0BAAMlkB,UAAU,SAASqO,OAG3F,kBAAC,IAAD,CAAMjL,GAAG,uBAAsB,kBAAC,IAAD,CAAkBQ,GAAG,oBACpD,6BAAK,6BACL,6BACE,kBAAC6X,GAAA,EAAD,CAAQpa,KAAK,SAASgC,QAAQ,YAAYohB,UAAWN,GAASH,GAAYC,GAAY,kBAAC,IAAD,CAAkBrgB,GAAG,WAD7G,eAEE,kBAAC6X,GAAA,EAAD,CAAQpY,QAAQ,YAAYL,MAAM,QAAQyhB,SAAUT,GAAYC,EAAYpkB,QAASgP,GAAO,kBAAC,IAAD,CAAkBjL,GAAG,iBAFnH,eAGE,kBAAC,IAAD,CAAMR,GAAG,eAAc,kBAACqY,GAAA,EAAD,CAAQpY,QAAQ,YAAYL,MAAM,SAAQ,kBAAC,IAAD,CAAkBY,GAAG,mBCjBjF8gB,OA7Bf,SAAkChlB,GAChC,OACE,2BACA,gBAAC,IAAD,CAAcoC,OAAQpC,EAAMC,SAAU3B,SAAUA,EAAS0B,EAAMC,WAC7D,gBAACoC,EAAA,EAAD,CAAQC,SAAS,UACb,gBAACC,EAAA,EAAD,CAASC,gBAAc,EAACC,GAAI,CAAEC,GAAI,IAChC,uBAAKnC,MAAO,CAAEoC,MAAO,SACnB,gBAACC,EAAA,EAAD,CAAKpC,QAAQ,OAAOqC,cAAc,MAAMC,EAAG,EAAGC,EAAG,GAC/C,gBAACH,EAAA,EAAD,CAAKH,GAAI,CAAEc,GAAI,EAAGC,GAAI,KAAMC,IAAK,IAC/B,gBAAC,IAAD,CAAMC,GAAG,QAAQJ,MAAM,OAAOK,QAAQ,KAAKC,UAAU,OAAOtD,UAAU,uBAAuBmC,GAAI,CAAEgB,GAAI,IAAvG,mBAEF,uBAAKlD,MAAO,CAAEoC,MAAO,SACnB,gBAACC,EAAA,EAAD,CAAKpC,QAAQ,OAAOqC,cAAc,cAAcC,EAAG,EAAGC,EAAG,GACvD,gBAACc,EAAA,EAAD,CAASC,MAAM,mBACb,gBAAClB,EAAA,EAAD,CAAKH,GAAI,CAAEK,EAAG,EAAGmB,GAAI,MACnB,gBAAC,GAAD,CAAsBhE,SAAUD,EAAMC,SAAUC,eAAgBF,EAAME,4BCfxF+kB,G,kDAEJ,WAAYjlB,GAAQ,IAAD,uBACjB,cAAMA,IAkBRklB,iBAAmB,SAAAxjB,GACjB,EAAKH,SAAS,CAAE+L,MAAO5L,EAAM4f,OAAOnW,SApBnB,EAuBnBga,qBAAuB,SAAAzjB,GACrB,EAAKH,SAAS,CAAEmM,SAAUhM,EAAM4f,OAAOnW,SAxBtB,EA2BnBjL,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IA5BN,EA+BnBuQ,iBAAmB,WACW,aAA5B,EAAKpjB,MAAM8jB,aAA8B,EAAK7jB,SAAS,CAAE6jB,aAAc,SAAY,EAAK7jB,SAAS,CAAE6jB,aAAc,cA9BjH,EAAKlK,MAAQja,IAAMka,YAFF,IAGTC,EAAYpb,EAAZob,QACFC,EAAWD,EAAQnL,IAAI,yBAA2BmL,EAAQnL,IAAI,yBAA2B,QAJ9E,OAKjB,EAAK3O,MAAQ,CACXgM,MAAO,GACPI,SAAU,GACV2X,KAAMjK,EACNG,sBAAuBF,EACvB+J,aAAc,YAVC,E,gEAejBhlB,KAAKkB,MAAM+jB,KAAKC,OAAO,yBACvBllB,KAAKkB,MAAM+jB,KAAKC,OAAO,mB,+BAmBf,IAAD,OACP,OACE,kBAAC,IAAD,CAAcljB,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACvE,kBAAC,GAAD,CAA0B4E,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAAU8D,OAAQvE,KAAKJ,MAAM2E,OAAQzE,eAAgBE,KAAKF,eAAgBD,SAAUG,KAAKJ,MAAMC,WACjL,6BACE,yBAAKK,UAAU,aACb,gCAAQ,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,WACjC,wBAAI3D,MAAQH,KAAKkB,MAAMia,sBAAsBlT,OAAS,EAAK,GAAK,CAAC7H,QAAS,SAAS,kBAAC,IAAD,CAAkB0D,GAAG,2BACxG,6BAAK,6BACD,kBAAC,GAAD,CACAygB,SAAU,WAAK,EAAK3kB,MAAMqN,kBAC1BsB,aAAcvO,KAAKJ,MAAMyQ,WACzB+T,uBAAwBpkB,KAAKJ,MAAM0Q,qBACnCzQ,SAAUG,KAAKJ,MAAMC,SACrBgkB,WAAY7jB,KAAKkB,MAAM8jB,aACvBV,iBAAkBtkB,KAAKskB,iBAAiBrkB,KAAKD,gB,GApDxCa,IAAMR,WAoEZub,iBANO,SAAC1a,GACrB,OAAO,2BACFA,EAAMuH,oBAAuBvH,EAAMsM,mBAIFsO,EAAzBF,CAAyCG,aAAY8I,KClDrD3mB,GA7BE,CACfC,GAAI,CACF4T,QAAS,UACToT,OAAQ,SACRC,eAAgB,mBAChBC,KAAM,OACN3U,OAAQ,SACR4U,KAAM,OACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,WACVC,SAAU,WACVC,QAAS,WAEXlmB,GAAI,CACAsS,QAAS,UACToT,OAAQ,mDACRC,eAAgB,gHAChBC,KAAM,6CACN3U,OAAQ,6CACR4U,KAAM,yDACNC,OAAQ,6CACRC,QAAS,8CACTC,SAAU,+DACVC,SAAU,qEACVC,QAAS,4D,0vCCvBf,IAgEeC,GAhEKzJ,KAAOC,IAAV,MCqDFyJ,G,4MAjDX3kB,MAAQ,CACJ2d,MAAM,G,EAGVC,UAAY,WACR,EAAK3d,SAAS,CACV0d,MAAM,K,EAIdE,UAAY,SAAAC,GACR,EAAK7d,SAAS,CACV0d,MAAM,K,EAIdI,SAAW,WACP,EAAK9d,SAAS,CACV0d,MAAM,IAEV,EAAKjf,MAAMsf,a,EAGfC,iBAAmB,SAACH,GAChBA,EAAEI,mB,uDAKN,OAAIpf,KAAKkB,MAAM2d,KAIR,kBAAC,GAAD,CAAa9e,QAASC,KAAK+e,UAAU9e,KAAKD,OACrC,yBAAKE,UAAU,aAAaH,QAASC,KAAKmf,iBAAiBlf,KAAKD,OAC5D,yBAAKE,UAAU,eACVF,KAAKJ,MAAMkmB,QAEhB,yBAAK5lB,UAAU,aACX,uBAAGA,UAAU,YAAYF,KAAKJ,MAAMuJ,SACpC,4BAAQ5H,KAAK,SAASrB,UAAU,iBAAiBH,QAASC,KAAK+e,UAAU9e,KAAKD,OAA9E,UACA,4BAAQuB,KAAK,SAASrB,UAAU,kBAAkBH,QAASC,KAAKif,SAAShf,KAAKD,OAA9E,UAXT,S,GA/BKa,IAAMR,WC0DX0lB,G,4MAzDX7kB,MAAQ,CACJ2d,MAAM,EACN9T,MAAO,I,EAGX+T,UAAY,SAAAE,GACR,EAAK7d,SAAS,CACV0d,MAAM,K,EAIdmH,SAAW,SAAAhH,GACP,EAAK7d,SAAS,CACV4J,MAAOiU,EAAEkC,OAAOnW,S,EAIxBgU,UAAY,SAAAC,GACR,EAAK7d,SAAS,CACV0d,MAAM,K,EAIdI,SAAW,WACP,EAAK9d,SAAS,CACV0d,MAAM,IAEV,EAAKjf,MAAMsf,a,EAGfC,iBAAmB,SAACH,GAChBA,EAAEI,mB,uDAKN,OAAIpf,KAAKkB,MAAM2d,KAIR,kBAAC,GAAD,CAAa9e,QAASC,KAAK+e,UAAU9e,KAAKD,OACrC,yBAAKE,UAAU,aAAaH,QAASC,KAAKmf,iBAAiBlf,KAAKD,OAC5D,yBAAKE,UAAU,eACVF,KAAKJ,MAAMkmB,QAEhB,yBAAK5lB,UAAU,aACX,8BAAU4D,GAAG,WAAW2H,KAAK,WAAWwa,KAAK,IAAIC,KAAK,KAAKF,SAAUhmB,KAAKgmB,SAAS/lB,KAAKD,MAAOmmB,YAAY,aAC3G,uBAAGjmB,UAAU,YAAYF,KAAKJ,MAAMuJ,SACpC,4BAAQ5H,KAAK,SAASrB,UAAU,iBAAiBH,QAASC,KAAK+e,UAAU9e,KAAKD,OAA9E,UACA,4BAAQuB,KAAK,SAASrB,UAAU,kBAAkBH,QAASC,KAAKif,SAAShf,KAAKD,MAAO2kB,SAAsC,IAA5B3kB,KAAKkB,MAAM6J,MAAM9C,QAAhH,UAZT,S,GAtCMpH,IAAMR,WCGN+lB,G,kDACjB,WAAYxmB,GAAO,IAAD,8BACd,cAAMA,IACDsB,MAAQ,CACT4C,GAAI,EAAKlE,MAAMymB,KAAKC,QACpBvP,OAAQ,EAAKnX,MAAMymB,KAAKtP,QAE5B,EAAK8K,OAAShhB,IAAMka,YACpB,EAAKwL,QAAU1lB,IAAMka,YAPP,E,wDAWd/a,KAAK6hB,OAAOP,QAAQxC,c,oCAIS,mBAA3B9e,KAAKJ,MAAMymB,KAAKtP,OACd/W,KAAKumB,QAAQjF,QAAQxC,YAErB9e,KAAKJ,MAAMiR,kBAAkB,CAAC/M,GAAI9D,KAAKkB,MAAM4C,GAAIgN,OAAQ,W,8CAK7D9Q,KAAKJ,MAAMsS,sBAAsB,CAACpO,GAAI9D,KAAKkB,MAAM4C,O,mCAIjD9D,KAAKJ,MAAM6Q,WAAW,CAAC3M,GAAI9D,KAAKkB,MAAM4C,O,0CAItC9D,KAAKJ,MAAMgR,kBAAkB,CAAC9M,GAAI9D,KAAKkB,MAAM4C,O,0CAI7C9D,KAAKJ,MAAMiR,kBAAkB,CAAC/M,GAAI9D,KAAKkB,MAAM4C,GAAIgN,OAAQ9Q,KAAKumB,QAAQjF,QAAQpgB,MAAM6J,U,6BAGjFnL,GAAQ,IAAD,EACmEI,KAAKJ,MAAMymB,KAAhF5a,EADE,EACFA,KAAMyB,EADJ,EACIA,MAAO6J,EADX,EACWA,OAAQyP,EADnB,EACmBA,cAAezf,EADlC,EACkCA,UAAW8G,EAD7C,EAC6CA,kBAC/ChO,EAAaG,KAAKJ,MAAlBC,SACV,OACE,oCACI,kBAAC,GAAD,CAAOsiB,IAAKniB,KAAK6hB,OAAQ3C,UAAalf,KAAKyQ,WAAWxQ,KAAKD,MAAOmJ,QAAS,+BAAgC2c,OAAQ,mBACnH,kBAAC,GAAD,CAAQ3D,IAAKniB,KAAKumB,QAASrH,UAAalf,KAAK6Q,kBAAkB5Q,KAAKD,MAAOmJ,QAAS,GAAI2c,OAAQ,sBAChG,kBAAC,IAAD,CAAc9jB,OAAQnC,EAAU3B,SAAUA,GAAS2B,IAC/C,4BACI,gCAAQ4L,EAAR,KACA,gCAAQyB,EAAR,KACA,4BACMnG,GAEN,wBAAK5G,MAAkB,mBAAX4W,EAA8B,CAAC2G,gBAAiB,WAAwB,mBAAX3G,EAA8B,CAAC2G,gBAAiB,WAAa,CAACA,gBAAiB,YAClJ3G,GAEN,4BACMyP,GAEN,4BACI,4BAAQtmB,UAAU,wBAAwBH,QAASC,KAAK0iB,UAAUziB,KAAKD,MAAQ2kB,SAAU6B,EAAgB,GAAgB,mBAAXzP,GAA0C,mBAAXA,GAA7I,WAEJ,4BACI,4BAAQ7W,UAAU,yBAAyBH,QAASC,KAAK4Q,kBAAkB3Q,KAAKD,MAAO2kB,SAAqB,mBAAX5N,GAA0C,mBAAXA,GAAhI,YAEJ,4BACI,4BAAQ7W,UAAU,yBAA0BH,QAASC,KAAKymB,YAAYxmB,KAAKD,MAAO2kB,SAAqB,qBAAX5N,GAC5E,mBAAXA,EAA8B,WAAa,YAGpD,4BACI,6BAAMlJ,W,GAvEWhN,IAAMR,WCS9BnC,GAjBA,CACbC,GAAI,CACF4T,QAAS,UACToT,OAAQ,SACRC,eAAgB,mBAChBC,KAAM,OACN3U,OAAQ,UAEVjR,GAAI,CACAsS,QAAS,6CACToT,OAAQ,mDACRC,eAAgB,gHAChBC,KAAM,6CACN3U,OAAQ,+CC0BDgW,GAlCS,SAAA9mB,GAAU,IACxBjB,EAA6FiB,EAA7FjB,MAAOuT,EAAsFtS,EAAtFsS,sBAAuBrS,EAA+DD,EAA/DC,SAAU4Q,EAAqD7Q,EAArD6Q,WAAYG,EAAyChR,EAAzCgR,kBAAmBC,EAAsBjR,EAAtBiR,kBAC/E,OACE,kBAAC,IAAD,CAAc7O,OAAQnC,EAAU3B,SAAUA,GAAS2B,IACjD,2BAAOK,UAAU,SACb,+BACE,4BACE,oCACA,qCACA,0CACA,sCACA,qCACA,2CACA,4CACA,4CACA,wCAGJ,+BACKvB,EAAM0T,KAAI,SAAAgU,GAAI,OAAI,kBAAC,GAAD,CACjBA,KAAMA,EACNnU,sBAAyBA,EACzB1Q,IAAK6kB,EAAKC,QACVzmB,SAAUA,EACV4Q,WAAYA,EACZG,kBAAmBA,EACnBC,kBAAmBA,WCtBlB3S,GATA,CACbC,GAAI,CACFQ,MAAO,SAETc,GAAI,CACFd,MAAO,6E,qTCHb,IAeegoB,GAfSxK,KAAOC,IAAV,MCgBfwK,G,kDACJ,WAAYhnB,GAAQ,IAAD,8BACjB,cAAMA,IAQRE,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IARvB,EAAK+G,MAAQja,IAAMka,YAFF,E,gEAMjB/a,KAAKJ,MAAM2Q,c,+BAQX,OACE,kBAAC,IAAD,CAAcvO,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACzE,6BACE,kBAAC,GAAD,CAAsB4E,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAAU8D,OAAQvE,KAAKJ,MAAM2E,OAAQzE,eAAgBE,KAAKF,eAAgBD,SAAUG,KAAKJ,MAAMC,WAD/K,aACoM,yBAAKK,UAAU,aAC7M,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,WACzB,6BAAK,6BACL,kBAAC,GAAD,KACI,kBAAC,KAAD,CAAW+iB,sBAAsB,OAAOC,kBAAkB,QACxD,kBAAC,KAAD,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,0BAIJ,kBAAC,KAAD,oCAKQ,6BAAK,6BACvB,kBAACC,GAAD,CACEpoB,MAAQqB,KAAKJ,MAAMjB,MACnB8R,WAAYzQ,KAAKJ,MAAM6Q,WACvBG,kBAAmB5Q,KAAKJ,MAAMgR,kBAC9BC,kBAAmB7Q,KAAKJ,MAAMiR,kBAC9BhR,SAAUG,KAAKJ,MAAMC,kB,GAxCfgB,IAAMR,WAuDXub,iBANO,SAAC1a,GACrB,OAAO,mDACFA,EAAMkI,aAAgBlI,EAAM8lB,cAAiB9lB,EAAMuH,oBAAuBvH,EAAMsM,mBAI/CsO,EAAzBF,CAAyCgL,ICzCzCK,GA7BC,SAAArnB,GACZ,IAAMsnB,EAAYC,iBAAO,MAwBzB,OAfAC,qBAAU,WACN,IACMC,EADSH,EAAU5F,QACFgG,WAAW,MAElCD,EAAQE,UAAY,OACpBF,EAAQG,SAAS,EAAG,EAAGH,EAAQI,OAAOllB,MAAO8kB,EAAQI,OAAOC,QAC5DL,EAAQE,UAAY,OACpBF,EAAQM,KAAO,aACfN,EAAQO,SAAShoB,EAAM8H,KAAM,GAAI,IAEjC2f,EAAQE,UAAY,OACpBF,EAAQM,KAAO,aACfN,EAAQO,SAAS,kBAAmB,IAAK,MACxC,CApBQ,SAAAC,GACTA,EAAIN,UAAY,OAChBM,EAAIC,YACJD,EAAIE,IAAI,GAAI,IAAK,GAAI,EAAG,EAAEjgB,KAAKkgB,IAC/BH,EAAII,UAkBD,0CAAQ9F,IAAK+E,GAAetnB,EAA5B,CAAmC2C,MAAM,QAAQmlB,OAAO,WCQlDxpB,GApCA,CACbC,GAAI,CACAK,SAAU,UACVmkB,YAAa,eACblX,KAAM,OACNmX,aAAc,iBACdtV,SAAU,WACV4a,eAAgB,mBAChB5b,gBAAiB,2BACjB0W,SAAU,WACVmF,WAAY,+BACZpF,WAAY,wBACZqF,YAAa,+BACbC,cAAe,gCACfC,oBAAqB,4BACrB/pB,MAAO,SAGXkB,GAAI,CACAjB,SAAU,yDACVmkB,YAAa,wEACblX,KAAM,qBACNmX,aAAc,mIACdtV,SAAU,uCACV4a,eAAgB,0GAChB5b,gBAAiB,8MACjB0W,SAAU,oGACVmF,WAAY,+JACZpF,WAAY,oLACZqF,YAAa,qKACbC,cAAe,gKACfC,oBAAqB,2GACrB/pB,MAAO,oFCkBP0kB,GAAc,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,MAAOzX,EAA2D,EAA3DA,KAAM0X,EAAqD,EAArDA,MAAqD,KAA9C5hB,KAA8C,EAAxC6hB,MAAQC,EAAgC,EAAhCA,QAAS9Y,EAAuB,EAAvBA,MAC5D+Y,GADmF,EAAhBC,QAC7DF,KAAe9Y,GACrBiZ,EAAcH,GAAW9Y,EAC7B,OAAQ,kBAACkZ,GAAA,EAAD,eAAW3f,GAAI2H,EAAMA,KAAMA,GAAUyX,EAArC,CAA4CC,MAAOA,EAAO5Y,MAAO+Y,EAAKI,WAAYF,EAAa3gB,KAAK,QAAQU,QAAQ,WAAWogB,WAAS,MAG5IC,GAAsB,SAAC,GAAoF,IAAlFV,EAAiF,EAAjFA,MAAQzX,EAAyE,EAAzEA,KAAO0X,EAAkE,EAAlEA,MAAkE,KAA1D5hB,KAA0D,EAAnD6hB,MAAQC,EAA2C,EAA3CA,QAAS9Y,EAAkC,EAAlCA,MAAkBsZ,GAAgB,EAA3BN,QAA2B,EAAhBM,YACxFP,EAAMD,KAAe9Y,EACrBiZ,EAAcH,GAAW9Y,EAC7B,OAAQ,kBAACkZ,GAAA,EAAD,eAAW3f,GAAI2H,EAAMA,KAAMA,GAAUyX,EAArC,CAA4CC,MAAOA,EAAO5Y,MAAO+Y,EAAKI,WAAYF,EAAa3gB,KAAK,QAAQU,QAAQ,WAAWogB,WAAS,EAACpiB,KAAMsiB,MAIzJ0E,GAAc,SAAA3oB,GAAU,IAClBqkB,EAA6HrkB,EAA7HqkB,aAAcC,EAA+GtkB,EAA/GskB,SAAUnV,EAAqGnP,EAArGmP,MAAOoV,EAA8FvkB,EAA9FukB,WAAYlU,EAAkFrQ,EAAlFqQ,cAAeuY,EAAmE5oB,EAAnE4oB,gBAAiB3oB,EAAkDD,EAAlDC,SAAUwkB,EAAwCzkB,EAAxCykB,MAAOR,EAAiCjkB,EAAjCikB,WAAYS,EAAqB1kB,EAArB0kB,iBAC1G/W,EAAe,CACnB9B,KAAoB,OAAb5L,EAAoB3B,GAASC,GAAGsN,KAAOvN,GAASuB,GAAGgM,KAC1DmX,aAA4B,OAAb/iB,EAAoB3B,GAASC,GAAGykB,aAAe1kB,GAASuB,GAAGmjB,aAC1EtV,SAAwB,OAAbzN,EAAoB3B,GAASC,GAAGmP,SAAWpP,GAASuB,GAAG6N,SAClEhB,gBAA+B,OAAbzM,EAAoB3B,GAASC,GAAGmO,gBAAkBpO,GAASuB,GAAG6M,gBAChF4b,eAA6B,OAAbroB,EAAoB3B,GAASC,GAAG+pB,eAAiBhqB,GAASuB,GAAGyoB,gBAG/E,OACE,kBAAC,IAAD,CAAclmB,OAAQnC,EAAU3B,SAAUA,GAAS2B,IACjD,gCAAQ,0BAAM0kB,SAAUN,GACtB,6BACE,6BACI,2BAAO/jB,UAAU,oBACb,+BACI,4BACE,4BAAI,kBAACskB,GAAA,EAAD,CAAQ/Y,KAAK,OAASuU,UAAWiD,GAAc1hB,KAAK,OAAS4hB,MAAO5V,EAAa9B,QACrF,8BAEF,4BAAI,4BAAI,kBAAC+Y,GAAA,EAAD,CAAQ/Y,KAAK,QAAUuU,UAAWiD,GAAe1hB,KAAK,OAAS4hB,MAAO5V,EAAaqV,gBAAqB,8BAChH,4BACE,4BAAI,kBAAC4B,GAAA,EAAD,CAAQ/Y,KAAK,WAAauU,UAAW4D,GAAqBT,MAAO5V,EAAaD,SAAUmb,qBAAqB,EAAM5E,WAAYA,KACnI,wBAAI3jB,UAAU,2BAA0B,0BAAMA,UAAU,mBAAmBH,QAASukB,GAA5C,eAAgF,uBAAGpkB,UAAU,YAAYukB,cAAY,OAAOtkB,MAAsB,SAAf0jB,EAAwB,CAACa,QAAS,IAAO,QAEtN,4BAAI,4BAAI,kBAACF,GAAA,EAAD,CAAQ/Y,KAAK,iBAAmBuU,UAAW4D,GAAwBT,MAAO5V,EAAa2a,eAAgBO,qBAAqB,EAAM5E,WAAYA,KACtJ,8BAEA,4BAAI,4BAAI,kBAACW,GAAA,EAAD,CAAQ/Y,KAAK,UAAYuU,UAAWiD,GAAgB1hB,KAAK,OAAO4hB,MAAO5V,EAAajB,mBAAwB,8BACpH,4BAAI,4BAAI,kBAAC,GAAD,CAAS5E,KAAMuI,EAAelQ,QAASyoB,KAAuB,kCAKpF,6BACE,kBAAC7M,GAAA,EAAD,CAAQpa,KAAK,SAASgC,QAAQ,YAAYohB,UAAWN,GAASH,GAAYC,GAAY,kBAAC,IAAD,CAAkBrgB,GAAG,cAD7G,eAEE,kBAAC6X,GAAA,EAAD,CAAQpY,QAAQ,YAAYL,MAAM,QAAQyhB,SAAUT,GAAYC,EAAYpkB,QAASgP,GAAO,kBAAC,IAAD,CAAkBjL,GAAG,iBAFnH,eAGE,kBAAC,IAAD,CAAMR,GAAG,cAAa,kBAACqY,GAAA,EAAD,CAAQpY,QAAQ,YAAYL,MAAM,SAAQ,kBAAC,IAAD,CAAkBY,GAAG,iBAQ/FykB,GAAczE,aAAU,CACtB3W,KAAM,aACN4W,SAnGe,SAAC1W,EAAQzN,GACtB,IAAMokB,EAAS,GAkCf,OAjCK3W,EAAO5B,KAED4B,EAAO5B,KAAKxD,OAAS,IAC9B+b,EAAOvY,KAAOvN,GAAS0B,EAAMC,UAAUsoB,YAFvCnE,EAAOvY,KAAOvN,GAAS0B,EAAMC,UAAUmjB,SAKpC3V,EAAOH,MAEA,4CAA4C7O,KAAKgP,EAAOH,SAChE8W,EAAO9W,MAAQhP,GAAS0B,EAAMC,UAAUkjB,YAFxCiB,EAAO9W,MAAShP,GAAS0B,EAAMC,UAAUmjB,SAKxC3V,EAAOC,SAEDD,EAAOC,SAASrF,OAAS,EAChC+b,EAAO1W,SAAWpP,GAAS0B,EAAMC,UAAUuoB,YACpC/a,EAAOC,SAASrF,OAAS,KAChC+b,EAAO1W,SAAWpP,GAAS0B,EAAMC,UAAUwoB,eAJ3CrE,EAAO1W,SAAYpP,GAAS0B,EAAMC,UAAUmjB,SAO3C3V,EAAOqb,iBACR1E,EAAO0E,eAAkBxqB,GAAS0B,EAAMC,UAAUmjB,UAGjD3V,EAAOuB,UACRoV,EAAOpV,QAAW1Q,GAAS0B,EAAMC,UAAUmjB,UAG3C3V,EAAOC,UAAYD,EAAOqb,gBAAmBrb,EAAOC,WAAaD,EAAOqb,iBACxE1E,EAAO1W,SAAWpP,GAAS0B,EAAMC,UAAUyoB,oBAC3CtE,EAAO0E,eAAiBxqB,GAAS0B,EAAMC,UAAUyoB,qBAG9CtE,IA8DGF,CAGXyE,IAQHA,GAAc3M,cACZ,SAAA1a,GAAK,MAAK,CACRynB,cAAe,CAAC/Z,QAAS,OAFfgN,CAIZ2M,IAEa3M,qBAZO,SAAC1a,GACrB,OAAO,uCACFA,EAAMkI,aAAgBlI,EAAMuH,oBAAuBvH,EAAMsM,mBAUxBsO,EAAzBF,CAAyC2M,IClFzCK,G,kDAzCX,aAAgB,IAAD,8BACX,gBACK1nB,MAAQ,CACT2nB,UAAU,EACVvb,SAAU,IAJH,E,uEASXtN,KAAKmB,SAAS,CACV0nB,UAAW7oB,KAAKkB,MAAM2nB,a,+BAIpB,IAENC,EAAM5lB,EAFD,EAC+ElD,KAAKJ,MAArFsjB,EADC,EACDA,MAAOC,EADN,EACMA,MAAOsF,EADb,EACaA,oBADb,IACkCrF,KAAQC,EAD1C,EAC0CA,QAAS9Y,EADnD,EACmDA,MAAOgZ,EAD1D,EAC0DA,QAASwF,EADnE,EACmEA,MAC3DxmB,EAAQ,GAUzB,OATG2gB,EAAMnY,MAAM9C,QAAU,GACrB6gB,EAAO,YAAa5lB,EAAQ,UAAWX,EAAM,QACtC2gB,EAAMnY,MAAM9C,QAAU,IAC7B6gB,EAAO,OAAQ5lB,EAAM,aAAcX,EAAM,SAClC2gB,EAAMnY,MAAM9C,QAAU,IAC7B6gB,EAAO,SAAU5lB,EAAM,eAAgBX,EAAM,UAE7CumB,EAAO,cAAe5lB,EAAM,QAASX,EAAM,SAG3C,6BACA,+BAAQ4gB,GACR,6BACI,2CAAWD,EAAX,CAAkBiD,YAAahD,EAAO5hB,KAAK,OAAOpB,MAAOH,KAAKkB,MAAM2nB,SAAW,GAAK,CAACzoB,QAAS,WAC9F,2CAAW8iB,EAAX,CAAkBiD,YAAahD,EAAO5hB,KAAK,WAAWpB,MAAOH,KAAKkB,MAAM2nB,SAAW,CAACzoB,QAAS,QAAU,MACvG,0BAAML,QAASC,KAAKgpB,yBAAyB/oB,KAAKD,OAAlD,eAA2E,uBAAGE,UAAU,YAAYukB,cAAY,OAAOtkB,MAAOH,KAAKkB,MAAM2nB,SAAW,GAAK,CAACnE,QAAS,OAClKrB,IAAc9Y,GAAS,0BAAMrK,UAAU,SAASqK,IAAmBgZ,GAAW,8BAAOA,IACtF,yBAAKpjB,MAAO,CAACunB,OAAQ,OAAQrF,QAAS,EAAG5c,UAAW,QAAUsjB,GAASN,GAAyB,yBAAKtoB,MAAO,CAACoC,MAAOA,EAAO8f,QAAS,QAAS3E,gBAAiBxa,EAAOA,MAAO,OAAQ+lB,SAAU,SAAUH,U,GAnC3LzoB,aCyCjB4iB,GAAc,SAAC,GAAD,IAClBC,EADkB,EAClBA,MACAC,EAFkB,EAElBA,MACA5hB,EAHkB,EAGlBA,KAHkB,IAIlB6hB,KAAQC,EAJU,EAIVA,QAAS9Y,EAJC,EAIDA,MAAOgZ,EAJN,EAIMA,QAJN,OAMlB,6BACE,+BAAQJ,GACR,6BACE,2CAAWD,EAAX,CAAkBiD,YAAahD,EAAO5hB,KAAMA,KAC3C8hB,IACG9Y,GAAS,0BAAMrK,UAAU,SAASqK,IACjCgZ,GAAW,8BAAOA,OAM3B2F,GAAwB,SAAAtpB,GAAU,IAC5BqkB,EAAwDrkB,EAAxDqkB,aAAcC,EAA0CtkB,EAA1CskB,SAAUnV,EAAgCnP,EAAhCmP,MAAOoV,EAAyBvkB,EAAzBukB,WAAYtkB,EAAaD,EAAbC,SAC7C0N,EAAe,CACnB9B,KAAoB,OAAb5L,EAAoB3B,GAASC,GAAGsN,KAAOvN,GAASuB,GAAGgM,KAC1DmX,aAA4B,OAAb/iB,EAAoB3B,GAASC,GAAGykB,aAAe1kB,GAASuB,GAAGmjB,aAC1EtV,SAAwB,OAAbzN,EAAoB3B,GAASC,GAAGmP,SAAWpP,GAASuB,GAAG6N,SAClEhB,gBAA+B,OAAbzM,EAAoB3B,GAASC,GAAGmO,gBAAkBpO,GAASuB,GAAG6M,gBAChF4b,eAA6B,OAAbroB,EAAoB3B,GAASC,GAAG+pB,eAAiBhqB,GAASuB,GAAGyoB,gBAG/E,OACE,kBAAC,IAAD,CAAclmB,OAAQnC,EAAU3B,SAAUA,GAAS2B,IACjD,0BAAM0kB,SAAUN,GACd,6BACE,6BACI,+BACI,+BACI,4BAAI,4BAAI,kBAACO,GAAA,EAAD,CAAQ/Y,KAAK,OAASuU,UAAWiD,GAAc1hB,KAAK,OAAS4hB,MAAO5V,EAAa9B,SACzF,4BAAI,4BAAI,kBAAC+Y,GAAA,EAAD,CAAQ/Y,KAAK,QAAUuU,UAAWiD,GAAe1hB,KAAK,OAAS4hB,MAAO5V,EAAaqV,iBAC3F,4BAAI,4BAAI,kBAAC4B,GAAA,EAAD,CAAQ/Y,KAAK,WAAauU,UAAW4I,GAAYzF,MAAO5V,EAAaD,SAAUmb,qBAAqB,MAC5G,4BAAI,4BAAI,kBAACjE,GAAA,EAAD,CAAQ/Y,KAAK,iBAAmBuU,UAAW4I,GAAezF,MAAO5V,EAAa2a,eAAgBO,qBAAqB,UAKzI,6BACE,4BAAQlnB,KAAK,SAASrB,UAAU,kBAAkBykB,SAAUT,GAAYC,GAAY,kBAAC,IAAD,CAAkBrgB,GAAG,cAD3G,WAEE,4BAAQvC,KAAK,SAASrB,UAAU,iBAAiBykB,SAAUT,GAAYC,EAAYpkB,QAASgP,GAAO,kBAAC,IAAD,CAAkBjL,GAAG,qBAOlIolB,GAAwBpF,aAAU,CAChC3W,KAAM,aACN4W,SAxFe,SAAC1W,GACd,IAAM2W,EAAS,GA8Bf,OA7BK3W,EAAO5B,KAED4B,EAAO5B,KAAKxD,OAAS,IAC9B+b,EAAOvY,KAAO,gCAFduY,EAAOvY,KAAO,WAKX4B,EAAOH,MAEA,4CAA4C7O,KAAKgP,EAAOH,SAChE8W,EAAO9W,MAAQ,yBAFf8W,EAAO9W,MAAQ,WAKdG,EAAOC,SAEDD,EAAOC,SAASrF,OAAS,EAChC+b,EAAO1W,SAAW,+BACXD,EAAOC,SAASrF,OAAS,KAChC+b,EAAO1W,SAAW,iCAJlB0W,EAAO1W,SAAW,WAOjBD,EAAOqb,iBACR1E,EAAO0E,eAAiB,YAGxBrb,EAAOC,UAAYD,EAAOqb,gBAAmBrb,EAAOC,WAAaD,EAAOqb,iBACxE1E,EAAO1W,SAAW,yBAClB0W,EAAO0E,eAAiB,0BAGrB1E,IAuDaF,CAGrBoF,IAQHA,GAAwBtN,cACtB,SAAA1a,GAAK,MAAK,CACRynB,cAAe,CAAC/Z,QAAS,OAFLgN,CAItBsN,IAEatN,qBAZO,SAAC1a,GACrB,OAAO,uCACFA,EAAMkI,aAAgBlI,EAAMuH,oBAAuBvH,EAAMsM,mBAUxBsO,EAAzBF,CAAyCsN,ICvGvChrB,GATA,CACbC,GAAI,CACAK,SAAU,WAEdiB,GAAI,CACAjB,SAAU,4GCOZ2qB,G,kDACJ,WAAYvpB,GAAQ,IAAD,8BACjB,cAAMA,IASRwpB,kBAAoB,WAClB,EAAKC,iBACL,EAAKzpB,MAAMyU,sBAZM,EAenBgV,eAAiB,WACf,IAAIpZ,EAAgBvK,GAAQ+B,aAC5B,EAAK7H,MAAMoQ,iBAAiBC,GAC5B,EAAK9O,SAAS,CACZmoB,aAAcrZ,KAnBC,EAsBnBnQ,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IAvBN,EA0BnBuQ,iBAAmB,WACW,aAA5B,EAAKpjB,MAAM8jB,aAA8B,EAAK7jB,SAAS,CAAE6jB,aAAc,SAAY,EAAK7jB,SAAS,CAAE6jB,aAAc,cAzBjH,EAAKlK,MAAQja,IAAMka,YACnB,EAAKsO,eAAeppB,KAApB,iBACA,EAAKiB,MAAM,CACTooB,aAAc,GACdtE,aAAc,YANC,E,qDA8BT,IAAD,OACP,OACE,kBAAC,IAAD,CAAchjB,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACvE,6BACA,kBAAC,GAAD,CAA0B4E,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAAU8D,OAAQvE,KAAKJ,MAAM2E,OAAQzE,eAAgBE,KAAKF,eAAgBD,SAAUG,KAAKJ,MAAMC,WADjL,eACwM,yBAAKK,UAAU,aACjN,gCAAQ,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,eACG,IAAnC9D,KAAKJ,MAAMkP,qBACZ,kBAAC,GAAD,CAAayV,SAAU,WAAK,EAAK3kB,MAAM0O,UACvCC,aAAcvO,KAAKJ,MAAMyQ,WACzB+T,uBAAwBpkB,KAAKJ,MAAM0Q,qBACnCL,cAAejQ,KAAKkB,MAAMooB,aAC1Bd,gBAAiBxoB,KAAKqpB,eACtBxpB,SAAUG,KAAKJ,MAAMC,SACrBgkB,WAAY7jB,KAAKkB,MAAM8jB,aACvBV,iBAAkBtkB,KAAKskB,iBAAiBrkB,KAAKD,QAIT,IAAnCA,KAAKJ,MAAMkP,qBACZ,kBAAC,GAAD,CAAuByV,SAAU,WAAK,EAAK3kB,MAAM0O,UACjDC,aAAcvO,KAAKJ,MAAMyQ,WACzB+T,uBAAwBpkB,KAAKJ,MAAM0Q,qBACnCkY,gBAAiBxoB,KAAKqpB,eACtBxpB,SAAUG,KAAKJ,MAAMC,SACrBgkB,WAAY7jB,KAAKkB,MAAM8jB,aACvBV,iBAAkBtkB,KAAKskB,iBAAiBrkB,KAAKD,e,GAxDtCa,IAAMR,WAyEZub,iBANO,SAAC1a,GACrB,OAAO,uCACFA,EAAMkI,aAAgBlI,EAAMuH,oBAAuBvH,EAAMsM,mBAIxBsO,EAAzBF,CAAyCuN,IC9CzCI,G,4MApCbroB,MAAQ,CACNsoB,WAAW,G,EAGbC,qBAAuB,WAAO,IAAD,EACa,EAAK7pB,MAArC8pB,EADmB,EACnBA,qBAAsBvG,EADH,EACGA,MAE9B,EAAKhiB,UAAS,kBACZ,CACEqoB,WAFU,EAAGA,cAMjBE,EAAqBvG,I,uDAGb,IACAA,EAAUnjB,KAAKJ,MAAfujB,MACAqG,EAAcxpB,KAAKkB,MAAnBsoB,UAER,OACE,yBAAKtpB,UAAU,YACb,+BACE,2BACMqB,KAAK,WACLwJ,MAAOoY,EACPwG,QAASH,EACTxD,SAAUhmB,KAAKypB,uBALvB,OAOGtG,Q,GA9BY9iB,aCaRupB,G,uKAZH,IAAD,EACiC5pB,KAAKJ,MAArCkgB,EADD,EACCA,QAASkG,EADV,EACUA,SAAU6D,EADpB,EACoBA,SAC3B,OACA,yBAAK3pB,UAAU,UACX,4BAAQA,UAAU,eAAe8lB,SAAUA,EAAYjb,MAAO8e,GACxD/J,EAAQzN,KAAI,SAACtH,GAAD,OAAa,4BAAQvJ,IAAKuJ,EAAMjH,GAAIiH,MAAOA,EAAMjH,IAAKiH,EAAMA,gB,GANjE1K,a,gbCArB,IAyBeypB,GAzBU3N,KAAOC,IAAV,MCsCP2N,G,uKAnCH,IAAD,EAC2D/pB,KAAKJ,MAA/DoqB,EADD,EACCA,mBAAoBC,EADrB,EACqBA,iBAAkBC,EADvC,EACuCA,gBAC9C,OACI,kBAAC,GAAD,KACI,wBAAIhqB,UAAU,sCACZ,wBAAIA,UAAU,YAAYC,MAA6B,IAArB8pB,EAA0B,CAACvF,QAAS,MAAQ,GAAI3kB,QAAS,kBAAMmqB,EAAgB,IAAI1oB,IAAI,MACvH,4BAAQtB,UAAU,YAAYsB,IAAI,MAAlC,OAEF,wBAAItB,UAAU,YAAYC,MAA6B,IAArB8pB,EAA0B,CAACvF,QAAS,MAAQ,GAC9E3kB,QAAS,WAAWkqB,EAAmB,GAAIC,EAAgBD,EAAiB,IAAOzoB,IAAI,MACrF,4BAAQtB,UAAU,YAAYsB,IAAI,MAAlC,MAEF,wBAAItB,UAAU,YAAYC,MAAQ8pB,EAAmB,EAAK,GAAK,CAAC7pB,QAAS,QAASoB,IAAI,MACpF,4BAAQtB,UAAU,YAAYsB,IAAI,MAAlC,OAEH2oB,MAAMH,GAAoB/B,OAAO5V,KAAI,SAAC+X,EAAGxiB,GAAJ,OAAU,oCAC9C,wBAAI1H,UAAY+pB,IAAqBriB,EAAI,mBAAqB,YAAc7H,QAAS,kBAAMmqB,EAAgBtiB,IAC3GpG,IAAKoG,EAAGzH,MAAQ8pB,EAAoBriB,EAAE,GAAMqiB,EAAoBriB,EAAE,EAAM,CAACxH,QAAS,QAAU,IAC1F,4BAAQF,UAAU,YAAYsB,IAAKoG,GAAIA,EAAI,QAE7C,wBAAI1H,UAAU,YAAYC,MAAQ8pB,EAAoBD,EAAmB,EAAM,GAAK,CAAC5pB,QAAS,QAASoB,IAAI,QACzG,4BAAQtB,UAAU,YAAYsB,IAAI,QAAlC,OAEF,wBAAItB,UAAU,YAAYC,MAAQ8pB,IAAsBD,EAAqB,EAAM,CAACtF,QAAS,MAAQ,GAAIljB,IAAI,OAAOzB,QAAS,WAAUkqB,EAAkBD,EAAmB,GAAIE,EAAgBD,EAAiB,KAC/M,4BAAQ/pB,UAAU,YAAYsB,IAAI,QAAlC,MAEF,wBAAItB,UAAU,YAAYC,MAAQ8pB,IAAsBD,EAAqB,EAAM,CAACtF,QAAS,MAAQ,GAAIljB,IAAI,OAAOzB,QAAS,kBAAMmqB,EAAgBF,EAAqB,KACtK,4BAAQ9pB,UAAU,YAAYsB,IAAI,QAAlC,a,GA5BSnB,aCuCRnC,GA3CA,CACbC,GAAI,CACF4U,QAAS,UACTsX,gBAAiB,+BACjBzrB,SAAU,WACVmT,QAAS,UACT+E,cAAe,iBACfvP,aAAc,qBACd+iB,cAAe,OACfC,MAAO,QACPxM,kBAAmB,WACnBhX,UAAW,OACXyjB,YAAa,mBACbC,aAAc,mBACdC,WAAY,sBACZC,YAAa,uBACbC,QAAS,eACTC,UAAW,gBACXC,UAAW,cAIbrrB,GAAI,CACFsT,QAAS,0DACTsX,gBAAiB,8HACjBzrB,SAAU,mDACVmT,QAAS,6CACT+E,cAAe,kIACfvP,aAAc,+EACd+iB,cAAe,2BACfC,MAAO,sBACPxM,kBAAmB,8CACnBhX,UAAW,2BACXyjB,YAAa,uGACbC,aAAc,uGACdC,WAAY,yFACZC,YAAa,yFACbC,QAAS,6EACTC,UAAW,6EACXC,UAAW,0F,8BClBXC,G,kDACJ,WAAYnrB,GAAQ,IAAD,8BACjB,cAAMA,IAwBRorB,cAAgB,SAAC1kB,EAAgBC,EAAgBY,EAAsBC,EAA+BZ,GACpG,IAAIU,EAA4BxB,GAAQW,wBAAwBC,EAAgBC,EAAgBC,GAEhG,OADA,EAAK5G,MAAMqT,4BAA4BnL,KAAKoL,KAAKhM,EAA0Be,OAAOd,IAC3EzB,GAAQuB,iBAAiBC,EAA2BC,EAAsBC,IA5BhE,EA+BnB6jB,eAAiB,SAAC9H,GACZ,EAAKhR,mBAAmB+Y,IAAI/H,GAAW,EAAKhR,mBAAmBzB,OAAOyS,GAAmB,EAAKhR,mBAAmBG,IAAI6Q,GACzH,IAAI5P,EAAkB,EAAKyX,cAAc,EAAKprB,MAAMmT,QAA9B,aAA2C,EAAKZ,oBAAqB,EAAKvS,MAAMuH,qBAAsB,EAAG,EAAKvH,MAAMoT,4BAC1I,EAAKpT,MAAMuT,mBAAmBI,GAC9B,EAAK3T,MAAMwT,+BAAX,aAA8C,EAAKjB,qBACnD,EAAKvS,MAAM8T,2BAA2B,IApCrB,EAuCnByX,eAAiB,SAAApZ,GAAO,OACtB,kBAAC,GAAD,CAAUoR,MAAOpR,EAAQtG,KAAMie,qBAAsB,EAAKuB,eAAehrB,KAApB,iBAAgCuB,IAAKuQ,EAAQjO,MAxCjF,EA2CnBsnB,iBAAmB,kBACjB,EAAKxrB,MAAM8S,aAAaL,IAAI,EAAK8Y,iBA5ChB,EA+CnBE,6BAA+B,SAAC/pB,GAC9B,IAAIiS,EAAkB,EAAKyX,cAAc,EAAKprB,MAAMmT,QAA9B,aAA2C,EAAKZ,oBAAqB7Q,EAAM4f,OAAOnW,MAAO,EAAG,EAAKnL,MAAMoT,4BAC7H,EAAKpT,MAAMuT,mBAAmBI,GAC9B,EAAK3T,MAAM4T,gBAAgBlS,EAAM4f,OAAOnW,OACxC,EAAKnL,MAAM8T,2BAA2B,IAnDrB,EAsDnB4X,+BAAiC,SAAChqB,GAChC,IAAIiS,EAAkB,EAAKyX,cAAc,EAAKprB,MAAMmT,QAA9B,aAA2C,EAAKZ,oBAAqB,EAAKvS,MAAMuH,qBAAsB,EAAG7F,EAAM4f,OAAOnW,OAC5I,EAAKnL,MAAMuT,mBAAmBI,GAC9B,EAAK3T,MAAM8T,2BAA2B,GACtC,EAAK9T,MAAMgU,uBAAuBtS,EAAM4f,OAAOnW,QA1D9B,EA6DnBmf,gBAAkB,SAACtiB,GACjB,IAAI2L,EAAkB,EAAKyX,cAAc,EAAKprB,MAAMmT,QAA9B,aAA2C,EAAKZ,oBAAqB,EAAKvS,MAAMuH,qBAAsBS,EAAG,EAAKhI,MAAMoT,4BAC1I,EAAKpT,MAAMuT,mBAAmBI,GAC9B,EAAK3T,MAAM8T,2BAA2B9L,IAhErB,EAmEnB9H,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IAlEvB,EAAK+G,MAAQja,IAAMka,YACnB,EAAK7Z,MAAQ,CACXqqB,eAAgB,CACZ,CAACznB,GAAI,EAAGiH,MAAO,KACf,CAACjH,GAAI,GAAIiH,MAAO,MAChB,CAACjH,GAAI,GAAIiH,MAAO,MAChB,CAACjH,GAAI,GAAIiH,MAAO,QARL,E,gEAaE,IAAD,OAClB/K,KAAKJ,MAAMyL,sBAAqB,GAChCrL,KAAKJ,MAAM6S,oBACXzS,KAAKJ,MAAMgT,cACX5S,KAAKmS,mBAAqB,IAAIC,IAC9BpS,KAAKJ,MAAM8S,aAAaL,KAAI,SAACN,GAAD,OAAY,EAAKI,mBAAmBG,IAAIP,EAAQtG,W,6CAI5EzL,KAAKJ,MAAM8T,2BAA2B,K,+BAkDtC,IAAM6H,EAAU,CAAC,CACfC,UAAW,UACX9T,KAA+B,OAAxB1H,KAAKJ,MAAMC,SAAoB3B,GAASC,GAAGosB,MAAQrsB,GAASuB,GAAG8qB,MACtE3jB,MAAM,GACL,CACD4U,UAAW,4BACX9T,KAA8B,OAAxB1H,KAAKJ,MAAMC,SAAoB3B,GAASC,GAAG4f,kBAAoB7f,GAASuB,GAAGse,kBACjFnX,MAAM,GACN,CACA4U,UAAW,YACX9T,KAA8B,OAAxB1H,KAAKJ,MAAMC,SAAoB3B,GAASC,GAAG4I,UAAY7I,GAASuB,GAAGsH,UACzEH,MAAM,GACL,CACD4U,UAAW,cACX9T,KAA8B,OAAxB1H,KAAKJ,MAAMC,SAAoB3B,GAASC,GAAG4T,QAAU7T,GAASuB,GAAGsS,QACvEnL,MAAM,IAIF4kB,EACN,CACE,CAAC1nB,GAAI,EAAGiH,MAA+B,OAAxB/K,KAAKJ,MAAMC,SAAoB3B,GAASC,GAAGqsB,YAActsB,GAASuB,GAAG+qB,aACpF,CAAC1mB,GAAI,EAAGiH,MAA+B,OAAxB/K,KAAKJ,MAAMC,SAAoB3B,GAASC,GAAGssB,aAAevsB,GAASuB,GAAGgrB,cACrF,CAAC3mB,GAAI,EAAGiH,MAA+B,OAAxB/K,KAAKJ,MAAMC,SAAoB3B,GAASC,GAAGusB,WAAaxsB,GAASuB,GAAGirB,YACnF,CAAC5mB,GAAI,EAAGiH,MAA+B,OAAxB/K,KAAKJ,MAAMC,SAAoB3B,GAASC,GAAGwsB,YAAczsB,GAASuB,GAAGkrB,aACpF,CAAC7mB,GAAI,EAAGiH,MAA+B,OAAxB/K,KAAKJ,MAAMC,SAAoB3B,GAASC,GAAGysB,QAAU1sB,GAASuB,GAAGmrB,SAChF,CAAC9mB,GAAI,EAAGiH,MAA+B,OAAxB/K,KAAKJ,MAAMC,SAAoB3B,GAASC,GAAG0sB,UAAY3sB,GAASuB,GAAGorB,YAGnF,OACC,kBAAC,IAAD,CAAc7oB,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACzE,6BACA,kBAAC,GAAD,CAAsB4E,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAAU8D,OAAQvE,KAAKJ,MAAM2E,OAAQzE,eAAgBE,KAAKF,eAAgBD,SAAUG,KAAKJ,MAAMC,WAD7K,WACgM,yBAAKK,UAAU,aAC3M,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,aACzB,kBAAC,GAAD,KACE,kBAAC2nB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAkBC,WAAY,kBAAC,IAAD,MAAoB5oB,gBAAc,kBAAmBe,GAAG,kBACpF,kBAACY,EAAA,EAAD,KAAY,kBAAC,IAAD,CAAkBZ,GAAG,oBAEnC,kBAAC8nB,GAAA,EAAD,KACE,2BAAO1rB,UAAU,iBACf,+BACE,4BACE,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,aAAzB,KACA,4BAAI,kBAAC,IAAD,CAAkBA,GAAG,iBAAzB,KACA,4BAAI,kBAAC,IAAD,CAAkBA,GAAG,kBAAzB,MAEF,4BACE,4BAAK9D,KAAKorB,oBACV,4BAAI,kBAAC,GAAD,CAAQtL,QAAS9f,KAAKkB,MAAMqqB,eAAgBvF,SAAUhmB,KAAKqrB,6BAA8BxB,SAAU7pB,KAAKJ,MAAMuH,wBAClH,4BAAI,kBAAC,GAAD,CAAQ2Y,QAAU0L,EAAcxF,SAAUhmB,KAAKsrB,+BAAgCzB,SAAU7pB,KAAKJ,MAAMoT,oCAOpH,yBAAK7S,MAA8C,IAAtCH,KAAKJ,MAAM2T,gBAAgBtL,OAAgB,CAAC7H,QAAS,QAAU,IAC1E,kBAAC,GAAD,CAAY4pB,mBAAoBhqB,KAAKJ,MAAMisB,gCAAiC5B,iBAAkBjqB,KAAKJ,MAAMwH,8BACvG8iB,gBAAiBlqB,KAAKkqB,kBACxB,kBAAC,KAAD,CAAgBxO,SAAS,KAAK1S,KAAOhJ,KAAKJ,MAAM2T,gBAAkBgI,QAAUA,IAC5E,kBAAC,GAAD,CAAYyO,mBAAoBhqB,KAAKJ,MAAMisB,gCAAiC5B,iBAAkBjqB,KAAKJ,MAAMwH,8BACvG8iB,gBAAiBlqB,KAAKkqB,mBAE1B,yBAAK/pB,MAA8C,IAAtCH,KAAKJ,MAAM2T,gBAAgBtL,OAAgB,GAAK,CAAC7H,QAAS,SACrE,6BAAM,6BAAM,6BAAM,gCAAQ,4BAAI,kBAAC,IAAD,CAAkB0D,GAAG,wB,GA1IxCjD,IAAMR,WAyJdub,iBANO,SAAC1a,GACrB,OAAO,+DACFA,EAAMkI,aAAgBlI,EAAMuH,oBAAuBvH,EAAM2R,gBAAmB3R,EAAM2a,iBAAoB3a,EAAMsM,mBAI3EsO,EAAzBF,CAAyCmP,ICzJzC7sB,GArBE,CACfC,GAAI,CACF4T,QAAS,UACToT,OAAQ,SACR2G,SAAU,aACVzG,KAAM,OACN3U,OAAQ,SACR4U,KAAM,OACNyG,OAAQ,UAEVtsB,GAAI,CACAsS,QAAS,6CACToT,OAAQ,mDACR2G,SAAU,mDACVzG,KAAM,6CACN3U,OAAQ,6CACR4U,KAAM,yDACNyG,OAAQ,gDCSCjI,gBAAU,CACvB3W,KAAM,kBADO2W,EArBQ,SAAAlkB,GAAU,IACvBqkB,EAAwDrkB,EAAxDqkB,aAAcC,EAA0CtkB,EAA1CskB,SAAUnV,EAAgCnP,EAAhCmP,MAAOoV,EAAyBvkB,EAAzBukB,WAAYtkB,EAAaD,EAAbC,SACnD,OACE,kBAAC,IAAD,CAAcmC,OAAQnC,EAAU3B,SAAUA,GAAS2B,IACjD,0BAAM0kB,SAAUN,GACd,6BACE,6BACA,kBAAC,IAAD,CAAkBngB,GAAG,YAClB,SAACkoB,GAAD,OAAmB,kBAACxH,GAAA,EAAD,CAAO/Y,KAAK,UAAUuU,UAAU,QAAQze,KAAK,OAAO4kB,YAAa6F,SAIzF,6BACE,4BAAQzqB,KAAK,SAASojB,SAAUT,GAAYC,GAAY,kBAAC,IAAD,CAAkBrgB,GAAG,YAC7E,4BAAQvC,KAAK,SAASojB,SAAUT,GAAYC,EAAYpkB,QAASgP,GAAO,kBAAC,IAAD,CAAkBjL,GAAG,oBCblFmoB,G,kDACjB,WAAYrsB,GAAO,IAAD,8BACd,cAAMA,IA4BVssB,iBAAmB,SAAA5qB,GACf,EAAKH,SAAS,CAAEsK,KAAMnK,EAAM4f,OAAOnW,SA5BnC,EAAK7J,MAAQ,CACTirB,eAAe,EACf1gB,KAAM,EAAK7L,MAAMmS,QAAQtG,KACzB3H,GAAI,EAAKlE,MAAMmS,QAAQjO,GACvBsoB,UAAU,GAEd,EAAKvK,OAAShhB,IAAMka,YARN,E,0DAad/a,KAAKJ,MAAM+R,YAAY,CAAC7N,GAAI9D,KAAKkB,MAAM4C,GAAI2H,KAAMzL,KAAKkB,MAAMuK,OAC5DzL,KAAKmB,SAAS,CAACirB,UAAU,M,sCAIzBpsB,KAAKJ,MAAMgS,cAAc,CAAC9N,GAAI9D,KAAKkB,MAAM4C,O,kCAIzC9D,KAAK6hB,OAAOP,QAAQxC,c,8CAIpB9e,KAAKJ,MAAMsS,sBAAsB,CAACpO,GAAI9D,KAAKkB,MAAM4C,O,2CAQjD9D,KAAKmB,SAAS,CACVirB,UAAU,M,6BAIXxsB,GAAQ,IAAD,EACiCI,KAAKJ,MAAMmS,QAA9CtG,EADE,EACFA,KAAM0Z,EADJ,EACIA,OAAQkH,EADZ,EACYA,iBAChBC,EAA0B,IAAXnH,EAAuC,OAAxBnlB,KAAKJ,MAAMC,SAAoB3B,GAASC,GAAGqnB,QAAUtnB,GAASuB,GAAG+lB,QAAkC,OAAxBxlB,KAAKJ,MAAMC,SAAoB3B,GAASC,GAAGonB,OAASrnB,GAASuB,GAAG8lB,OACvK1lB,EAAaG,KAAKJ,MAAlBC,SACV,OACE,oCACI,kBAAC,GAAD,CAAOsiB,IAAKniB,KAAK6hB,OAAQ3C,UAAalf,KAAK4R,cAAc3R,KAAKD,MAAOmJ,QAAS,oCAC9E,kBAAC,IAAD,CAAcnH,OAAQnC,EAAU3B,SAAUA,GAAS2B,IAC/C,4BACI,wBAAIM,MAAOH,KAAKkB,MAAMkrB,SAAW,CAAChsB,QAAS,QAAU,CAAEA,QAAS,UAAhE,IAA6EqL,EAA7E,KACA,wBAAItL,MAAOH,KAAKkB,MAAMkrB,SAAW,CAAChsB,QAAS,SAAW,CAAEA,QAAS,SAAU,2BAAOmB,KAAK,OAAQwJ,MAAO/K,KAAKkB,MAAMuK,KAAMua,SAAUhmB,KAAKksB,iBAAiBjsB,KAAKD,SAC5J,wBAAID,QAASC,KAAKkS,sBAAsBjS,KAAKD,MAAOE,UAAU,iBAC7DosB,GAED,4BACCD,GAED,wBAAIlsB,MAAOH,KAAKkB,MAAMkrB,SAAW,CAAChsB,QAAS,SAAW,CAAEA,QAAS,SAC7D,4BAAQF,UAAU,yBAAyBH,QAASC,KAAK2R,YAAY1R,KAAKD,OAAO,kBAAC,IAAD,CAAkB8D,GAAG,WAE1G,wBAAI3D,MAAOH,KAAKkB,MAAMkrB,SAAW,CAAChsB,QAAS,QAAU,CAAEA,QAAS,UAC5D,4BAAQF,UAAU,yBAAyBH,QAASC,KAAKusB,mBAAmBtsB,KAAKD,OAAO,kBAAC,IAAD,CAAkB8D,GAAG,WAEjH,4BACI,4BAAQ5D,UAAU,wBAAwBH,QAASC,KAAK0iB,UAAUziB,KAAKD,MAAO2kB,SAAU0H,EAAmB,GAAG,kBAAC,IAAD,CAAkBvoB,GAAG,oB,GAhE/GjD,IAAMR,WC4BnCqmB,GA7BS,SAAA9mB,GAAU,IACxB+R,EAA0E/R,EAA1E+R,YAAa/S,EAA6DgB,EAA7DhB,SAAUgT,EAAmDhS,EAAnDgS,cAAeM,EAAoCtS,EAApCsS,sBAAuBrS,EAAaD,EAAbC,SACrE,OACE,kBAAC,IAAD,CAAcmC,OAAQnC,EAAU3B,SAAUA,GAAS2B,IACjD,+BACI,+BACE,4BACE,4BAAI,kBAAC,IAAD,CAAkBiE,GAAG,aACzB,4BAAI,kBAAC,IAAD,CAAkBA,GAAG,WAAzB,KACA,4BAAI,kBAAC,IAAD,CAAkBA,GAAG,oBACzB,4BAAI,kBAAC,IAAD,CAAkBA,GAAG,UACzB,4BAAI,kBAAC,IAAD,CAAkBA,GAAG,cAG7B,+BACKlF,EAASyT,KAAI,SAAAN,GAAO,OAAI,kBAAC,GAAD,CACzBA,QAASA,EACTJ,YAAaA,EACbC,cAAeA,EACfM,sBAAyBA,EACzB1Q,IAAKuQ,EAAQjO,GACbjE,SAAUA,WCfP3B,GAXA,CACbC,GAAI,CACFquB,kBAAmB,0BACnBC,oBAAqB,uEAEvBhtB,GAAI,CACF+sB,kBAAmB,2JACnBC,oBAAqB,oTCIrBC,G,kDACJ,WAAY9sB,GAAQ,IAAD,8BACjB,cAAMA,IAKRsB,MAAQ,CACN6Q,QAAS,IAPQ,EAcnBjS,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IAbvB,EAAK+G,MAAQja,IAAMka,YACnB,EAAKsG,UAAYxgB,IAAMka,YAHN,E,gEAWjB/a,KAAKJ,MAAMqS,sB,+BAOH,IAAD,OACP,OACE,kBAAC,IAAD,CAAcjQ,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACvE,6BACE,kBAAC,GAAD,CAAsB4E,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAAU8D,OAAQvE,KAAKJ,MAAM2E,OAAQzE,eAAgBE,KAAKF,eAAgBD,SAAUG,KAAKJ,MAAMC,WAD/K,eACsM,yBAAKK,UAAU,aAC/M,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,uBAA2B,6BAAK,6BACzD,kBAAC,GAAD,CAAgBygB,SAAU,WAAK,EAAK3kB,MAAMiS,iBAAkBhS,SAAUG,KAAKJ,MAAMC,WAAW,6BAAK,6BACjG,kBAAC,IAAD,CAAkBiE,GAAG,wBAH2K,IAGlJ,6BAAK,6BACnD,kBAAC,GAAD,CAAiBlF,SAAUoB,KAAKJ,MAAM+sB,cACpChb,YAAa3R,KAAKJ,MAAM+R,YACxBC,cAAe5R,KAAKJ,MAAMgS,cAC1BM,sBAAuBlS,KAAKJ,MAAMsS,sBAClCrS,SAAUG,KAAKJ,MAAMC,kB,GA/BdgB,IAAMR,WA8Cbub,iBANM,SAAC1a,GACnB,OAAO,mDACFA,EAAMkI,aAAgBlI,EAAMuH,oBAAuBvH,EAAM2a,iBAAoB3a,EAAMsM,mBAInDsO,EAAzBF,CAA0C8Q,IC9CzCxuB,GAXA,CACbC,GAAI,CACFyuB,iBAAkB,eAClBC,gBAAiB,mVAEnBptB,GAAI,CACFmtB,iBAAkB,qDAClBC,gBAAiB,24DCEjBC,G,kDAEJ,WAAYltB,GAAQ,IAAD,uBACjB,cAAMA,IAgBRklB,iBAAmB,SAAAxjB,GACjB,EAAKH,SAAS,CAAE+L,MAAO5L,EAAM4f,OAAOnW,SAlBnB,EAqBnBga,qBAAuB,SAAAzjB,GACrB,EAAKH,SAAS,CAAEmM,SAAUhM,EAAM4f,OAAOnW,SAtBtB,EAyBnBjL,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IAxBvB,EAAK+G,MAAQja,IAAMka,YAFF,IAGTC,EAAYpb,EAAZob,QACFC,EAAWD,EAAQnL,IAAI,yBAA2BmL,EAAQnL,IAAI,yBAA2B,QAJ9E,OAKjB,EAAK3O,MAAQ,CACXgM,MAAO,GACPI,SAAU,GACV2X,KAAMjK,EACNG,sBAAuBF,GATR,E,gEAcjBjb,KAAKkB,MAAM+jB,KAAKC,OAAO,2B,+BAgBvB,OACE,kBAAC,IAAD,CAAcljB,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACvE,6BACE,kBAAC,GAAD,CAAsB4E,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAAU8D,OAAQvE,KAAKJ,MAAM2E,OAAQzE,eAAgBE,KAAKF,eAAgBD,SAAUG,KAAKJ,MAAMC,WAC7K,yBAAKK,UAAU,aACf,6BACE,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,sBACzB,kBAAC,IAAD,CAAkBA,GAAG,2B,GAvCPjD,IAAMR,WAqDjBub,iBANO,SAAC1a,GACrB,OAAO,2BACFA,EAAMuH,oBAAuBvH,EAAMsM,mBAIFsO,EAAzBF,CAAyCG,aAAY+Q,K,8iBC1DpE,IA6BeC,GA7Ba5Q,KAAOC,IAAV,MAQX,SAAAxc,GAAK,OAAwB,IAApBA,EAAMotB,UAAN,oBCCN9uB,GAbA,CACbC,GAAI,CACF8uB,QAAS,oEACTC,MAAO,QACPC,QAAS,cAEX1tB,GAAI,CACFwtB,QAAS,gQACTC,MAAO,8CACPC,QAAS,0ECETC,G,kDACJ,WAAYxtB,GAAQ,IAAD,sBACjB,cAAMA,GADW,IAGXqb,EADcrb,EAAZob,QACiBnL,IAAI,yBAHZ,OAIjB,EAAK3O,MAAQ,CACTmsB,sBAAuBpS,GALV,E,gEASC,IAAD,OACjB7M,YAAW,WACH,EAAKlN,MAAMmsB,uBAA8D,IAArC,EAAKztB,MAAMytB,uBAC/C,EAAKztB,MAAM0U,2BAA2B,KAE3C,O,2CAIqC,IAArCtU,KAAKJ,MAAMytB,uBACVrtB,KAAKJ,MAAM0U,2BAA2B,K,oCAK1CtU,KAAKJ,MAAMob,QAAQsS,IAAI,wBAAyB,WAAY,CAAEC,KAAM,IAAKC,QAAS,IAAIC,KAAKA,KAAKC,MAAM,cACtG1tB,KAAKJ,MAAM0U,2BAA2B,K,+BAItC,OACI,kBAAC,IAAD,CAActS,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACrE,kBAAC,GAAD,CAAqBmtB,UAAWhtB,KAAKJ,MAAM4U,yBACvC,yBAAKtU,UAAU,oBACX,uBAAGA,UAAU,WAAU,kBAAC,IAAD,CAAkB4D,GAAG,aAC5C,kBAAC,IAAD,CAAMR,GAAG,oBAAmB,kBAAC,IAAD,CAAkBQ,GAAG,aACjD,kBAAC6X,GAAA,EAAD,CAAQpY,QAAQ,YAAaxD,QAASC,KAAK2tB,YAAY1tB,KAAKD,OAC1D,kBAAC,IAAD,CAAkB8D,GAAG,kB,GArCfjD,IAAMR,WAoDnBub,iBANO,SAAC1a,GACrB,OAAO,eACFA,EAAMsM,mBAI2BsO,EAAzBF,CAAyCG,aAAYqR,KCCrDtJ,gBAAU,CACvB3W,KAAM,oBACN4W,SA3De,SAAA1W,GACb,IAAM2W,EAAS,GAsBf,OArBK3W,EAAOC,SAEDD,EAAOC,SAASrF,OAAS,EAChC+b,EAAO1W,SAAW,+BACXD,EAAOC,SAASrF,OAAS,KAChC+b,EAAO1W,SAAW,iCAJlB0W,EAAO1W,SAAW,WAOjBD,EAAOmC,eAEDnC,EAAOmC,eAAevH,OAAS,EACtC+b,EAAOxU,eAAiB,+BACjBnC,EAAOmC,eAAevH,OAAS,KACtC+b,EAAOxU,eAAiB,iCAJxBwU,EAAOxU,eAAiB,WAOxBnC,EAAOmC,iBAAmBnC,EAAOC,WACjC0W,EAAO1W,SAAW,yBAClB0W,EAAOxU,eAAiB,0BAGrBwU,IAkCIF,EA/BW,SAAAlkB,GAAU,IAC1BqkB,EAA8FrkB,EAA9FqkB,aAAcC,EAAgFtkB,EAAhFskB,SAAUnV,EAAsEnP,EAAtEmP,MAAOoV,EAA+DvkB,EAA/DukB,WAAY5V,EAAmD3O,EAAnD2O,aAAc6V,EAAqCxkB,EAArCwkB,uBAAwBvkB,EAAaD,EAAbC,SACnF0N,EAAe,CACnBqV,aAA4B,OAAb/iB,EAAoB3B,GAASC,GAAGykB,aAAe1kB,GAASuB,GAAGmjB,aAC1EtV,SAAwB,OAAbzN,EAAoB3B,GAASC,GAAGmP,SAAWpP,GAASuB,GAAG6N,SAClEkC,eAA6B,OAAb3P,EAAoB3B,GAASC,GAAGqR,eAAiBtR,GAASuB,GAAG+P,gBAE/E,OACE,kBAAC,IAAD,CAAcxN,OAAQnC,EAAU3B,SAAUA,GAAS2B,IACjD,0BAAM0kB,SAAUN,GACd,6BACE,6BACI,+BACI,+BACI,4BAAI,4BAAI,kBAACO,GAAA,EAAD,CAAQ/Y,KAAK,WAAauU,UAAW4I,GAAYzF,MAAO5V,EAAaD,SAAWmb,qBAAqB,MAC7G,4BAAI,4BAAI,kBAACjE,GAAA,EAAD,CAAQ/Y,KAAK,iBAAmBuU,UAAW4I,GAAYzF,MAAO5V,EAAaiC,eAAgBiZ,qBAAqB,MACxH,wBAAItoB,MAAO,CAACoL,WAAW,GAAD,OAAK6Y,KAA2B,4BAAI,0BAAMlkB,UAAU,SAASqO,SAKjG,6BAAK,6BACL,6BACE,4BAAQhN,KAAK,SAASrB,UAAU,kBAAkBykB,SAAUT,GAAYC,GAAY,kBAAC,IAAD,CAAkBrgB,GAAG,cAD3G,eAEE,4BAAQvC,KAAK,SAASrB,UAAU,iBAAiBykB,SAAUT,GAAYC,EAAYpkB,QAASgP,GAAO,kBAAC,IAAD,CAAkBjL,GAAG,uBChDjH5F,GATA,CACbC,GAAI,CACAyvB,cAAe,kBAEnBnuB,GAAI,CACAmuB,cAAe,wECKjBC,G,kDAEJ,WAAYjuB,GAAQ,IAAD,uBACjB,cAAMA,IAiBRE,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IAjBvB,EAAK+G,MAAQja,IAAMka,YAFF,IAGTC,EAAYpb,EAAZob,QAHS,OAIjB,EAAK9Z,MAAQ,CACX+jB,KAAMjK,GALS,E,8GAa2C,IAAzDhb,KAAKJ,MAAMkuB,2CACd9tB,KAAKJ,MAAMyb,QAAQC,KAAK,gB,+BAQhB,IAAD,OACP,OACE,kBAAC,IAAD,CAActZ,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACvE,6BACA,kBAAC,GAAD,CAAsB4E,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAAU8D,OAAQvE,KAAKJ,MAAM2E,OAAQzE,eAAgBE,KAAKF,eAAgBD,SAAUG,KAAKJ,MAAMC,WAC3K,yBAAKK,UAAU,aACb,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,mBACzB,kBAAC,GAAD,CAAmBygB,SAAU,WAAK,EAAK3kB,MAAMyP,iBAAkBd,aAAcvO,KAAKJ,MAAMyQ,WAAY+T,uBAAwBpkB,KAAKJ,MAAM0Q,qBAAsBzQ,SAAUG,KAAKJ,MAAMC,kB,GA/BlKgB,IAAMR,WA6CnBub,iBANO,SAAC1a,GACrB,OAAO,2BACFA,EAAMuH,oBAAuBvH,EAAMsM,mBAIFsO,EAAzBF,CAAyCG,aAAY8R,KCrC9DE,G,kDACJ,WAAYnuB,GAAQ,IAAD,8BACjB,cAAMA,IAeRE,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IAfvB,EAAK+G,MAAQja,IAAMka,YAFF,E,gEAMjB/a,KAAKJ,MAAMyU,uB,gDAGXrU,KAAKJ,MAAMsU,4B,wCAIXlU,KAAKJ,MAAMwU,oB,+BAQX,OACM,kBAAC,IAAD,CAAcpS,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACvE,6BACA,kBAAC,GAAD,CAAsB4E,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAAU8D,OAAQvE,KAAKJ,MAAM2E,OAAQzE,eAAgBE,KAAKF,eAAgBD,SAAUG,KAAKJ,MAAMC,WAC7K,yBAAKK,UAAU,aACb,+CACA,kBAAC,GAAD,KACE,kBAAC,KAAD,CAAW2mB,sBAAsB,OAAOC,kBAAkB,QACxD,kBAAC,KAAD,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,4BAIJ,kBAAC,KAAD,KACE,yBAAK3mB,MAA4C,IAArCH,KAAKJ,MAAMouB,sBAA8B,GAAK,CAAC5tB,QAAS,SAApE,4BACqC,4BAAQmB,KAAK,SAASrB,UAAU,kBAAkBH,QAASC,KAAKkU,wBAAwBjU,KAAKD,OAA7F,oBAErC,yBAAKG,MAA4C,IAArCH,KAAKJ,MAAMouB,sBAA8B,GAAK,CAAC5tB,QAAS,SAApE,2BACoC,4BAAQmB,KAAK,SAASrB,UAAU,iBAAiBH,QAASC,KAAKkU,wBAAwBjU,KAAKD,OAA5F,sBAGtC,kBAAC,KAAD,KACA,kBAAC,KAAD,KACI,kBAAC,KAAD,iCAIJ,kBAAC,KAAD,KACE,yBAAKG,MAA0C,IAAnCH,KAAKJ,MAAMkP,oBAA4B,GAAK,CAAC1O,QAAS,SAAlE,4BACqC,4BAAQmB,KAAK,SAASrB,UAAU,kBAAkBH,QAASC,KAAKoU,gBAAgBnU,KAAKD,OAArF,oBAErC,yBAAKG,MAA0C,IAAnCH,KAAKJ,MAAMkP,oBAA4B,GAAK,CAAC1O,QAAS,SAAlE,2BACoC,4BAAQmB,KAAK,SAASrB,UAAU,iBAAiBH,QAASC,KAAKoU,gBAAgBnU,KAAKD,OAApF,0BAM9B,6BAAK,oC,GA7DPa,IAAMR,WA2EnBub,iBANO,SAAC1a,GACrB,OAAO,mDACFA,EAAMkI,aAAgBlI,EAAMuH,oBAAuBvH,EAAM2a,iBAAoB3a,EAAMsM,mBAIlDsO,EAAzBF,CAAyCmS,ICnEvC7vB,GA1BA,CACbC,GAAI,CACAykB,aAAc,iBACdC,eAAgB,mBAChB1T,SAAU,WACVwT,YAAa,QACbsL,KAAM,OACNC,YAAa,6CACbC,MAAO,SACP9hB,cAAe,+OACfC,gBAAiB,4BAGrB7M,GAAI,CACAmjB,aAAc,mIACdC,eAAgB,uEAChB1T,SAAU,8FACVwT,YAAa,8CACbsL,KAAM,yDACNC,YAAa,kWACbC,MAAO,4BACP9hB,cAAe,0tCACfC,gBAAiB,gNCUV2a,GA7BC,SAAArnB,GACZ,IAAMsnB,EAAYC,iBAAO,MAwBzB,OAfAC,qBAAU,WACN,IACMC,EADSH,EAAU5F,QACFgG,WAAW,MAElCD,EAAQE,UAAY,OACpBF,EAAQG,SAAS,EAAG,EAAGH,EAAQI,OAAOllB,MAAO8kB,EAAQI,OAAOC,QAC5DL,EAAQE,UAAY,OACpBF,EAAQM,KAAO,aACfN,EAAQO,SAAShoB,EAAM8H,KAAM,GAAI,IAEjC2f,EAAQE,UAAY,OACpBF,EAAQM,KAAO,aACfN,EAAQO,SAAS,kBAAmB,IAAK,MACxC,CApBQ,SAAAC,GACTA,EAAIN,UAAY,OAChBM,EAAIC,YACJD,EAAIE,IAAI,GAAI,IAAK,GAAI,EAAG,EAAEjgB,KAAKkgB,IAC/BH,EAAII,UAkBD,0CAAQ9F,IAAK+E,GAAetnB,EAA5B,CAAmC2C,MAAM,QAAQmlB,OAAO,WCA3DzE,GAAc,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,MAAOzX,EAA2D,EAA3DA,KAAM0X,EAAqD,EAArDA,MAAqD,KAA9C5hB,KAA8C,EAAxC6hB,MAAQC,EAAgC,EAAhCA,QAAS9Y,EAAuB,EAAvBA,MAC5D+Y,GADmF,EAAhBC,QAC7DF,KAAe9Y,GACrBiZ,EAAcH,GAAW9Y,EAC7B,OAAQ,kBAACkZ,GAAA,EAAD,eAAW3f,GAAI2H,EAAMA,KAAMA,GAAUyX,EAArC,CAA4CC,MAAOA,EAAO5Y,MAAO+Y,EAAKI,WAAYF,EAAa3gB,KAAK,QAAQU,QAAQ,WAAWogB,WAAS,MAqCrIG,gBAAU,CACvB3W,KAAM,0BACN4W,SA5De,SAAA1W,GACb,IAAM2W,EAAS,GAcf,OAbK,4CAA4C3lB,KAAKgP,EAAOH,QAAUG,EAAOH,QAC1E8W,EAAO9W,MAAQ,yBAGdG,EAAO8B,UAAa9B,EAAOH,QAC5B8W,EAAO9W,MAAQ,oCACf8W,EAAO7U,SAAW,qCAGjB9B,EAAOuB,UACVoV,EAAOpV,QAAU,sBAGZoV,IA2CIF,EAlCY,SAAAlkB,GAAU,IAC3BqkB,EAA+FrkB,EAA/FqkB,aAAcC,EAAiFtkB,EAAjFskB,SAAUnV,EAAuEnP,EAAvEmP,MAAOoV,EAAgEvkB,EAAhEukB,WAAYtkB,EAAoDD,EAApDC,SAAUoQ,EAA0CrQ,EAA1CqQ,cAAeuY,EAA2B5oB,EAA3B4oB,gBAAiBnE,EAAUzkB,EAAVykB,MACvF9W,EAAe,CACnBqV,aAA4B,OAAb/iB,EAAoB3B,GAASC,GAAGykB,aAAe1kB,GAASuB,GAAGmjB,aAC1EzT,SAAwB,OAAbtP,EAAoB3B,GAASC,GAAGgR,SAAWjR,GAASuB,GAAG0P,SAClE7C,gBAA+B,OAAbzM,EAAoB3B,GAASC,GAAGmO,gBAAkBpO,GAASuB,GAAG6M,iBAElF,OACE,kBAAC,IAAD,CAActK,OAAQnC,EAAU3B,SAAUA,GAAS2B,IACjD,gCACE,0BAAM0kB,SAAUN,GAChB,6BACE,6BACI,2BAAO/jB,UAAU,oBACb,+BACI,4BAAI,4BAAI,kBAACskB,GAAA,EAAD,CAAQ/Y,KAAK,QAAUuU,UAAWiD,GAAa1hB,KAAK,OAAO4hB,MAAO5V,EAAaqV,iBACvF,4BAAI,4BAAI,kBAAC,IAAD,CAAkB9e,GAAG,YAC7B,4BAAI,4BAAI,kBAAC0gB,GAAA,EAAD,CAAQ/Y,KAAK,WAAauU,UAAWiD,GAAaE,MAAO5V,EAAa4B,aAC9E,4BAAI,4BAAI,kBAACqV,GAAA,EAAD,CAAQ/Y,KAAK,UAAYuU,UAAWiD,GAAgB1hB,KAAK,OAAO4hB,MAAO5V,EAAajB,oBAC5F,4BAAI,4BAAI,kBAAC,GAAD,CAAS5E,KAAMuI,EAAelQ,QAASyoB,UAK7D,6BACE,kBAAC7M,GAAA,EAAD,CAAQpa,KAAK,SAASgC,QAAQ,YAAYohB,UAAWN,GAASH,GAAYC,GAAY,kBAAC,IAAD,CAAkBrgB,GAAG,UAD7G,eAEE,kBAAC6X,GAAA,EAAD,CAAQpY,QAAQ,YAAYL,MAAM,QAAQyhB,SAAUT,GAAYC,EAAYpkB,QAASgP,GAAO,kBAAC,IAAD,CAAkBjL,GAAG,wBCjDrHsqB,G,kDAEJ,WAAYxuB,GAAQ,IAAD,8BACjB,cAAMA,IAcRypB,eAAiB,WACf,IAAIpZ,EAAgBvK,GAAQ+B,aAC5B,EAAK7H,MAAMoQ,iBAAiBC,GAC5B,EAAK9O,SAAS,CACZmoB,aAAcrZ,KAnBC,EAuBnBnQ,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IAtBvB,EAAK+G,MAAQja,IAAMka,YACnB,EAAK7Z,MAAQ,CACXgM,MAAO,GACPI,SAAU,GACVgc,aAAc,IAEhB,EAAKD,eAAeppB,KAApB,iBARiB,E,gEAYjBD,KAAKqpB,mB,+BAeG,IAAD,OACP,OACE,kBAAC,IAAD,CAAcrnB,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACvE,6BACA,kBAAC,GAAD,CAAsB4E,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAAU8D,OAAQvE,KAAKJ,MAAM2E,OAAQzE,eAAgBE,KAAKF,eAAgBD,SAAUG,KAAKJ,MAAMC,WAC3K,yBAAKK,UAAU,aACb,gCAAQ,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,qBACjC,kBAAC,IAAD,CAAkBA,GAAG,gBAAgB,6BAAK,6BAC1C,kBAAC,IAAD,CAAkBA,GAAG,kBAAkB,6BAAK,6BAC5C,gCACA,kBAAC,GAAD,CAAoBygB,SAAU,WAAK,EAAK3kB,MAAMsP,0BAC9CX,aAAcvO,KAAKJ,MAAMyQ,WACzB+T,uBAAwBpkB,KAAKJ,MAAM0Q,qBACnCzQ,SAAUG,KAAKJ,MAAMC,SACrBoQ,cAAejQ,KAAKkB,MAAMooB,aAC1Bd,gBAAiBxoB,KAAKqpB,yB,GA5CLxoB,IAAMR,WA4DpBub,iBANO,SAAC1a,GACrB,OAAO,2BACFA,EAAMuH,oBAAuBvH,EAAMsM,mBAIFsO,EAAzBF,CAAyCG,aAAYqS,KCnCnDlwB,GApCA,CACbC,GAAI,CACFkwB,gBAAiB,mBACjBC,mBAAoB,wBACpBC,eAAgB,iDAChBC,WAAY,8GACZjvB,eAAgB,kBAChBkvB,iBAAkB,gJAClB1C,OAAQ,SACRpJ,YAAa,eACb+L,cAAe,qBACfC,eAAgB,sBAChB3L,SAAU,WACV4L,kBAAmB,+BACnBC,yBAA0B,gCAC1BC,oBAAqB,0BAGvBrvB,GAAI,CACF4uB,gBAAiB,yIACjBC,mBAAoB,mIACpBC,eAAgB,+NAChBC,WAAY,wqBACZjvB,eAAgB,6EAChBkvB,iBAAkB,usBAClB1C,OAAQ,oDACRpJ,YAAa,6EACb+L,cAAe,iHACfC,eAAgB,6HAChB3L,SAAU,sEACV4L,kBAAmB,qKACnBC,yBAA0B,gKAC1BC,oBAAqB,qIC3BrBC,GAAgB,SAAChkB,EAAOikB,EAAWpvB,GACvC,OAAKmL,EAEMA,EAAM9C,OAAS,EACjBrI,EAAM1B,SAAS0B,EAAMC,UAAU+uB,kBAC7B7jB,EAAM9C,OAAS,GACjBrI,EAAM1B,SAAS0B,EAAMC,UAAUgvB,yBAGpCG,EAAUC,iBAAmBD,EAAU1hB,SAClC1N,EAAM1B,SAAS0B,EAAMC,UAAUivB,yBADxC,EAPSlvB,EAAM1B,SAAS0B,EAAMC,UAAUmjB,UAYpCY,GAAsB,SAAC,GAAoF,IAAlFV,EAAiF,EAAjFA,MAAQzX,EAAyE,EAAzEA,KAAO0X,EAAkE,EAAlEA,MAAkE,KAA1D5hB,KAA0D,EAAnD6hB,MAAQC,EAA2C,EAA3CA,QAAS9Y,EAAkC,EAAlCA,MAAkBsZ,GAAgB,EAA3BN,QAA2B,EAAhBM,YAC1FP,EAAMD,KAAe9Y,EACrBiZ,EAAcH,GAAW9Y,EAC7B,OAAQ,kBAACkZ,GAAA,EAAD,eAAW3f,GAAI2H,EAAMA,KAAMA,GAAUyX,EAArC,CAA4CC,MAAOA,EAAO5Y,MAAO+Y,EAAKI,WAAYF,EAAa3gB,KAAK,QAAQU,QAAQ,WAAWogB,WAAS,EAACpiB,KAAMsiB,MAGrJqL,GAAqB,SAAAtvB,GAAU,IACzBqkB,EAAuGrkB,EAAvGqkB,aAAcC,EAAyFtkB,EAAzFskB,SAAUnV,EAA+EnP,EAA/EmP,MAAOoV,EAAwEvkB,EAAxEukB,WAAYE,EAA4DzkB,EAA5DykB,MAAOxkB,EAAqDD,EAArDC,SAAU3B,EAA2C0B,EAA3C1B,SAAU2lB,EAAiCjkB,EAAjCikB,WAAYS,EAAqB1kB,EAArB0kB,iBAC1F,OACE,gCACI,0BAAMC,SAAUN,GAChB,6BACE,6BACI,2BAAO/jB,UAAU,oBACb,+BACI,4BACE,4BAAI,kBAACskB,GAAA,EAAD,CAAQ/Y,KAAK,WAAWuU,UAAW4D,GAAqBriB,KAAK,WAAW4hB,MAAOjlB,EAAS2B,GAAU6uB,cAAe3K,SAAUgL,GAAgBlL,WAAYA,KAC3J,wBAAI3jB,UAAU,2BAA0B,0BAAMA,UAAU,mBAAmBH,QAASukB,GAA5C,eAAgF,uBAAGpkB,UAAU,YAAYukB,cAAY,OAAOtkB,MAAsB,SAAf0jB,EAAwB,CAACa,QAAS,IAAO,QAEtN,4BACE,4BAAI,kBAACF,GAAA,EAAD,CAAQ/Y,KAAK,iBAAmBuU,UAAW4D,GAAwBriB,KAAK,WAAa4hB,MAAOjlB,EAAS2B,GAAU8uB,eAAgB5K,SAAUgL,GAAehb,KAAMlU,EAAUgkB,WAAYA,KACxL,wBAAI3jB,UAAU,iCAM9B,6BACE,6BAAM,6BACR,kBAACyb,GAAA,EAAD,CAAQpa,KAAK,SAASgC,QAAQ,YAAYohB,UAAWN,GAASH,GAAYC,GAAajmB,EAAS2B,GAAUksB,QAF1G,eAGA,kBAACpQ,GAAA,EAAD,CAAQpY,QAAQ,YAAYL,MAAM,QAAQyhB,SAAUT,GAAYC,EAAYpkB,QAASgP,GAAQ7Q,EAAS2B,GAAU8iB,iBAWzGuM,GAJfA,GAAqBpL,aAAU,CAC7B3W,KAAM,2BADa2W,CAElBoL,IC/CGC,G,kDACJ,WAAYvvB,GAAQ,IAAD,8BACjB,cAAMA,IAORE,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IATN,EAYnBqb,uBAAyB,SAACpQ,GACxB,EAAKpf,MAAMkU,YAAYkL,EAAEkC,OAAOnW,QAbf,EAgBnBskB,wBAA0B,SAACrQ,GACzB,EAAKpf,MAAMkL,wBAAwBkU,EAAEkC,OAAOnW,QAjB3B,EAoBnBuZ,iBAAmB,WACW,aAA5B,EAAKpjB,MAAM8jB,aAA8B,EAAK7jB,SAAS,CAAE6jB,aAAc,SAAY,EAAK7jB,SAAS,CAAE6jB,aAAc,cAnBjH,EAAKlK,MAAQja,IAAMka,YACnB,EAAK7Z,MAAQ,CACX8jB,aAAc,YAJC,E,qDAwBT,IAAD,OACP,OACE,kBAAC,IAAD,CAAchjB,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACvE,kBAAC,GAAD,CAAsB4E,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAAU8D,OAAQvE,KAAKJ,MAAM2E,OAAQzE,eAAgBE,KAAKF,eAAgBD,SAAUG,KAAKJ,MAAMC,WAC7K,6BACE,yBAAKK,UAAU,YAAYC,MAAO,CAAEmvB,UAAW,UAC7C,gCACE,4BAAI,kBAAC,IAAD,CAAkBxrB,GAAG,oBACzB,kBAAC,IAAD,CAAkBA,GAAG,qBACrB,6BAAK,6BACL,kBAAC,GAAD,CACAygB,SAAU,WAAK,EAAK3kB,MAAML,kBAC1BM,SAAYG,KAAKJ,MAAMC,SACvB3B,SAAYA,GACZ2lB,WAAY7jB,KAAKkB,MAAM8jB,aACvBV,iBAAkBtkB,KAAKskB,iBAAiBrkB,KAAKD,gB,GAxC7Ba,IAAMR,WAwDrBub,iBANO,SAAC1a,GACrB,OAAO,mDACFA,EAAMkI,aAAgBlI,EAAMuH,oBAAuBvH,EAAM2a,iBAAoB3a,EAAMsM,mBAIlDsO,EAAzBF,CAAyCuT,I,+iBC/DxD,IA8BeI,GA9BYpT,KAAOC,IAAV,MAOb,SAAAxc,GAAK,OAAwB,IAApBA,EAAMotB,UAAN,oBAGI,SAAAptB,GAAK,MAAI,YAAAA,EAAM4vB,SAAN,uBAYP,SAAA5vB,GAAK,MAAI,YAAAA,EAAM4vB,SAAN,uBCpB7BC,G,uKAEF,OACI,kBAAC,GAAD,CAAoBzC,UAAWhtB,KAAKJ,MAAM8vB,wBAAyBF,SAAYxvB,KAAKJ,MAAM+vB,mBACtF,yBAAKzvB,UAAU,oBACX,2BAAIF,KAAKJ,MAAMgwB,4B,GALJ/uB,IAAMR,WAkBlBub,iBANO,SAAC1a,GACrB,OAAO,eACFA,EAAMsM,mBAI2BsO,EAAzBF,CAAyC6T,I,izDCtBxD,IAgFeI,GAhFc1T,KAAOC,IAAV,MAWP,SAAAxc,GAAK,OAAIA,EAAMkwB,SCUjB5xB,GAvBA,CACbC,GAAI,CACI4xB,aAAc,OACdC,OAAQ,SACRjhB,MAAO,QACPkhB,YAAa,oBACbC,MAAO,gBACPC,cAAe,mBACfC,wBAAyB,6BACzBC,OAAQ,YAEhB5wB,GAAI,CACIswB,aAAc,yDACdC,OAAQ,uCACRjhB,MAAO,iCACPkhB,YAAa,2GACbC,MAAO,wDACPC,cAAe,2GACfC,wBAAyB,iNACzBC,OAAQ,qCCeHC,OA/BjB,SAA8B1wB,GAC1B,IAIqB6L,EAJf8kB,EAAkB3wB,EAAMswB,MADG,EAELrvB,IAAM2vB,SAAS,IAFV,mBAE1BnjB,EAF0B,KAElBojB,EAFkB,KAS/B,OACE,6BACE,kBAAChN,GAAA,EAAD,eACEN,MAAOvjB,EAAMujB,MACbuN,WAAY,CACVC,UAAWJ,EACX9kB,KAAM7L,EAAMsjB,MAAMzX,MAEpBV,MAAOsC,EAAO5B,KACdiY,WAAU,UAAK9jB,EAAMsjB,MAAMnY,MAAM9C,OAAvB,YAAiCsoB,GAC3CK,OAAO,SACPrtB,QAAQ,WACRstB,WAAS,EACT7K,UAjBava,EAiBU,UAjBF,SAAAnK,GAC3BmvB,EAAU,2BAAKpjB,GAAN,kBAAe5B,EAAOnK,EAAM4f,OAAOnW,YAiBlCnL,EAAMsjB,MAZZ,CAaE3Y,MAAO3K,EAAMsjB,MAAMnY,MAAM9C,SAAWsoB,EACpC5M,WAAS,O,0CCZjBmN,GAAiB,SAAAlxB,GAAU,IACrBqkB,EAAwErkB,EAAxEqkB,aAAcC,EAA0DtkB,EAA1DskB,SAAUnV,EAAgDnP,EAAhDmP,MAAOoV,EAAyCvkB,EAAzCukB,WAAYtkB,EAA6BD,EAA7BC,SAAUwkB,EAAmBzkB,EAAnBykB,MAAO0M,EAAYnxB,EAAZmxB,QACpE,OACE,kBAAC,IAAD,CAAc/uB,OAAQnC,EAAU3B,SAAUA,GAAS2B,IACjD,0BAAM0kB,SAAUN,GACd,6BACI,2BAAO9jB,MAAO,CAACoC,MAAO,QAASrC,UAAU,oBACrC,+BACE,4BAAI,4BAAI,kBAACskB,GAAA,EAAD,CAAQ/Y,KAAK,UAAUuU,UAAWsQ,GAAsBJ,MAAO,IAAK/M,MAAOjlB,GAAS2B,GAAUswB,cAAgBtwB,SAAUA,QAGtI,kBAAC8b,GAAA,EAAD,CAAQpa,KAAK,SAASgC,QAAQ,YAAaxD,QAASgxB,EAASpM,UAAWN,GAASH,GAAYC,GAC3F,kBAAC,KAAD,OAPN,eASI,kBAACxI,GAAA,EAAD,CAAQpY,QAAQ,YAAYL,MAAM,QAAQyhB,SAAUT,GAAYC,EAAYpkB,QAASgP,GACnF,kBAAC,KAAD,WAcd+hB,GAAiBhN,aAAU,CACzB3W,KAAM,sBACN4W,SArCa,SAAA1W,GACb,IAAM2W,EAAS,GAEf,OADK3W,EAAOsM,QAAoDtM,EAAOsM,QAAQ1R,OAAS,MAAO+b,EAAOrK,QAAU,kCAAxFqK,EAAOrK,QAAU,WAClCqK,IAgCQF,CAGdgN,IAEYlV,qBAXO,SAAC1a,GACrB,OAAO,uCACAA,EAAM8vB,iBAAoB9vB,EAAMuH,oBAAuBvH,EAAMsM,mBASvDoO,CAAyBkV,I,UCtClCG,G,kDACF,aAAe,IAAD,8BACV,gBAIJnS,UAAY,WACR,EAAK3d,SAAS,CACV2uB,MAAO,WAPD,EAWd/Q,UAAY,WACR,EAAK5d,SAAS,CACV2uB,MAAO,UAbD,EAqBdoB,UAAY,WACR,EAAK/vB,SAAS,CAAC2uB,MAAO,UAtBZ,EAyBd3Q,iBAAmB,SAACH,GAChBA,EAAEI,mBA1BQ,EA6BdC,YAAc,WACV,EAAKle,SAAS,CACVE,MAAM,KA/BA,EAmCd8vB,gBAAkB,WACd,EAAKhwB,SAAS,CACVE,MAAM,KAnCV,EAAKH,MAAQ,CAAE4uB,MAAO,OAAQzuB,MAAM,GAF1B,E,gEAkBVrB,KAAKJ,MAAMoa,2B,+BAuBL,IAAD,SACyBha,KAAKJ,MAA3BC,EADH,EACGA,SAAU8Z,EADb,EACaA,QACZC,EAAQhU,OAAOC,SAASurB,KAAK1wB,UAAUkF,OAAOC,SAASurB,KAAKC,QAAQ,SAE1E,OACI,kBAAC,IAAD,CAAcrvB,OAAQnC,EAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WAC1D,kBAAC,GAAD,CAAuBiwB,MAAO9vB,KAAKkB,MAAM4uB,MAAO3vB,MAA8B,IAAtBH,KAAKJ,MAAM2E,QAAsC,IAAtBvE,KAAKJ,MAAM2E,OAAgB,GAAK,CAACnE,QAAS,SACzH,4BAAQF,UAAU,iCAAiCC,MAAqB,OAAbN,EAAqB,GAAK,CAACoB,MAAO,SAAUlB,QAASC,KAAKmxB,gBAAgBlxB,KAAKD,OAAO,kBAAC,IAAD,CAAkB8D,GAAG,mBACtK,kBAACwb,GAAA,EAAD,CAAQje,KAAMrB,KAAKkB,MAAMG,KAAMiD,QAAStE,KAAKqf,YAAYpf,KAAKD,OAC1D,kBAACuf,GAAA,EAAD,KAAa,kBAAC,IAAD,CAAkBzb,GAAG,iBAClC,kBAAC0b,GAAA,EAAD,KACI,kBAAC,IAAD,CAAkB1b,GAAG,4BADzB,KACwD9D,KAAKJ,MAAM0xB,2BAA2B,kBAAC,IAAD,CAAkBxtB,GAAG,WAC/G,kBAAC,GAAD,CAAgBygB,SAAU,WAAK,EAAK3kB,MAAM8Z,YAAY,CAACC,UAASC,WAAW/Z,SAAUG,KAAKJ,MAAMC,SAAUkxB,QAAS/wB,KAAKqf,YAAYpf,KAAKD,gB,GAtDxIa,IAAMR,WAqE7BkxB,GAAWC,aAAkB,uBAEnCP,GAAiBrV,cACjB,SAAA1a,GAEI,MAAO,CACPyY,QAFgB4X,GAASrwB,EAAO,cAFnB0a,CAOfqV,IAGarV,qBAlBO,SAAC1a,GACnB,OAAO,uCACAA,EAAM8vB,iBAAoB9vB,EAAMuH,oBAAuBvH,EAAMsM,mBAgBhCsO,EAAzBF,CAAyCqV,I,oBCvFlDQ,GAAQ5wB,IAAM6wB,YAAW,SAAe9xB,EAAOuiB,GACjD,OAAO,kBAAC,KAAD,eAAUwP,UAAW,EAAGxP,IAAKA,EAAK5e,QAAQ,UAAa3D,OAG5DgyB,G,mLAGF,GAA4C,IAAzC5xB,KAAKJ,MAAMgN,0BAAgC,CAC1C,IAAMilB,EAAO7xB,KACboO,YAAW,WAAYyjB,EAAKjyB,MAAM6P,sBAAsB,KAAOoiB,EAAKjyB,MAAMkyB,4B,+BAK/E,IAAIC,EAAW,UAId,OAHI/xB,KAAKJ,MAAMoyB,uBACfD,EAAW/xB,KAAKJ,MAAMoyB,sBAGlB,kBAACC,GAAA,EAAD,CAAU5wB,KAAMrB,KAAKJ,MAAMgN,0BAA2B5I,aAAc,CAACC,SAAU,MAAOC,WAAY,UAC9F,kBAAC,GAAD,CAAQ6tB,SAAUA,EAAU1vB,GAAI,CAAEE,MAAO,SACpCvC,KAAKJ,MAAMsyB,+B,GAjBErxB,IAAMR,WA8BrBub,iBANO,SAAC1a,GACrB,OAAO,eACFA,EAAMsM,mBAI2BsO,EAAzBF,CAAyCgW,I,uqECtCxD,IAoGeO,GApGehW,KAAOC,IAAV,MCErBgW,G,uKAEE,OAAIpyB,KAAKJ,MAAMyyB,yBAGR,kBAAC,GAAD,KACC,yBAAKnyB,UAAU,kBACX,yBAAKA,UAAU,eACX,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,iCAhBL,S,GAHWW,IAAMR,WAgCrBub,iBANO,SAAC1a,GACnB,OAAO,eACAA,EAAMkI,eAIFwS,CAAyBwW,ICavBl0B,GAjDA,CACbC,GAAI,CACA4W,YAAa,yBACbC,aAAc,0BACdC,YAAa,yBACbC,aAAc,wBACd3L,SAAU,gBACV+oB,aAAc,gBACdC,uBAAwB,4BACxBC,qCAAsC,2BACtCC,2BAA4B,qCAC5B9P,YAAa,eACb+P,gBAAiB,mBACjBC,uBAAwB,wBACxBrN,KAAM,OACNvW,MAAO,QACP6jB,2BAA4B,iCAC5BC,2BAA4B,kCAC5BC,gBAAiB,kCACjB/C,aAAc,gBACdgD,kBAAmB,wCACnBC,wBAAyB,yBACzB9C,MAAO,SAEXzwB,GAAI,CACAsV,YAAa,+IACbC,aAAc,0IACdC,YAAa,0IACbC,aAAc,qJACd3L,SAAU,0DACV+oB,aAAc,8FACdC,uBAAwB,4BACxBU,aAAc,gBACdT,qCAAsC,2BACtCC,2BAA4B,qCAC5B9P,YAAa,oGACbgQ,uBAAwB,oLACxBrN,KAAM,yDACNvW,MAAO,8CACP6jB,2BAA4B,iCAC5BC,2BAA4B,kCAC5BC,gBAAiB,kCACjB/C,aAAc,wFACdgD,kBAAmB,wCACnBC,wBAAyB,4GACzB9C,MAAO,mCCnBEgD,G,uKAtBH,IAAD,EACuElzB,KAAKJ,MAAzEsjB,EADH,EACGA,MAAOC,EADV,EACUA,MAAO5hB,EADjB,EACiBA,KAAMojB,EADvB,EACuBA,SADvB,IACiCvB,KAAQC,EADzC,EACyCA,QAAS9Y,EADlD,EACkDA,MAAOgZ,EADzD,EACyDA,QAC1DrgB,EAAM,GAEV,OAD+BA,EAA5BggB,EAAMnY,MAAM9C,OAAS,IAAe,MAAuB,QAE1D,oCACA,2BAAO9H,MAAO,CAACgzB,aAAc,IAAKlK,SAAU,SAAU9F,GACtD,6BAEA,yBAAKhjB,MAAO,CAACC,QAAS,eAAgBmC,MAAO,SAC3C,8CAAc2gB,EAAd,CAAqBiD,YAAahD,EAAO5hB,KAAMA,EAAM0kB,KAAK,IAAItB,SAAUA,EAAUxkB,MAAO,CAACoC,MAAO,wBACjG,6BACA,0BAAMpC,MAAO,CAACizB,WAAY,OAAQlwB,MAAOA,IAAzC,WAA8DggB,EAAMnY,MAAM9C,QACzEob,IACG9Y,GAAS,0BAAMrK,UAAU,SAASqK,IACjCgZ,GAAW,8BAAOA,W,GAjBTljB,aCexBgzB,GAAwB,SAAAzzB,GAAU,IAC5BqkB,EAA+MrkB,EAA/MqkB,aAAcE,EAAiMvkB,EAAjMukB,WAAYtkB,EAAqLD,EAArLC,SAAWyzB,EAA0K1zB,EAA1K0zB,eAAiBpP,EAAyJtkB,EAAzJskB,SAAWG,EAA8IzkB,EAA9IykB,MAAOkP,EAAuI3zB,EAAvI2zB,gBAAiBC,EAAsH5zB,EAAtH4zB,iBAAkBC,EAAoG7zB,EAApG6zB,iBAAkBC,EAAkF9zB,EAAlF8zB,gBAAiB5U,EAAiElf,EAAjEkf,UAAW6U,EAAsD/zB,EAAtD+zB,SAAUC,EAA4Ch0B,EAA5Cg0B,qBAAsBC,EAAsBj0B,EAAtBi0B,mBAC3LtmB,EAAe,CACnBwH,YAA2B,OAAblV,EAAoB3B,GAASC,GAAG4W,YAAc7W,GAASuB,GAAGsV,YACxEC,aAA4B,OAAbnV,EAAoB3B,GAASC,GAAG6W,aAAe9W,GAASuB,GAAGuV,aAC1EC,YAA2B,OAAbpV,EAAoB3B,GAASC,GAAG8W,YAAc/W,GAASuB,GAAGwV,YACxEC,aAA4B,OAAbrV,EAAoB3B,GAASC,GAAG+W,aAAehX,GAASuB,GAAGyV,aAC1E3L,SAAuB,OAAb1J,EAAoB3B,GAASC,GAAGoL,SAAWrL,GAASuB,GAAG8J,SACjEoZ,YAA0B,OAAb9iB,EAAoB3B,GAASC,GAAGwkB,YAAczkB,GAASuB,GAAGkjB,aAEzE,OAEE,kBAAC,IAAD,CAAc3gB,OAAQnC,EAAU3B,SAAUA,GAAS2B,IACjD,0BAAM0kB,SAAUN,GACZ,6BADJ,IACU,6BACR,6BACE,2BAAO9jB,MAAO,CAACoC,MAAO,QAASrC,UAAU,oBACrC,+BACE,4BAAI,4BAAI,kBAACskB,GAAA,EAAD,CAAQ/Y,KAAK,WAAauU,UAAWkT,GAAe/P,MAAO5V,EAAahE,aAChF,4BAAI,4BAAI,6BAAK,+BACb,4BAAI,4BAAI,kBAACib,GAAA,EAAD,CAAQ/Y,KAAK,aAAeuU,UAAWkT,GAAe/P,MAAO5V,EAAawH,gBAClF,4BAAI,4BAAI,kBAACyP,GAAA,EAAD,CAAQ/Y,KAAK,aAAeuU,UAAWkT,GAAe/P,MAAO5V,EAAayH,iBAClF,4BAAI,4BAAI,kBAACwP,GAAA,EAAD,CAAQ/Y,KAAK,aAAeuU,UAAWkT,GAAe/P,MAAO5V,EAAa0H,gBAClF,4BAAI,4BAAI,kBAACuP,GAAA,EAAD,CAAQ/Y,KAAK,gBAAkBuU,UAAWkT,GAAe/P,MAAO5V,EAAa2H,oBAI7F,6BAAK,6BACL,yBAAK/U,MAA6B,6BAAtBwzB,EAASA,SAA0C,CAACvzB,QAAS,QAAU,IACjF,oCACA,4BAAQmB,KAAK,SAASrB,UAAU,kBAAkBykB,SAAUR,EAAYpkB,QAASuzB,GAAgB,kBAAC,IAAD,CAAkBxvB,GAAG,4BADtH,eAEA,4BAAQvC,KAAK,SAASrB,UAAU,kBAAkBykB,UAAWN,IAAUqP,EAAiB3zB,QAAS0zB,GAAkB,kBAAC,IAAD,CAAkB3vB,GAAG,gCAFxI,eAGA,4BAAQvC,KAAK,SAASrB,UAAU,kBAAkBykB,UAAWN,GAASH,GAAU,kBAAC,IAAD,CAAkBpgB,GAAG,0CAHrG,eAIA,4BAAQvC,KAAK,SAASrB,UAAU,kBAAkBykB,UAAWN,IAAUkP,EAAiBxzB,QAASyzB,GAAkB,kBAAC,IAAD,CAAkB1vB,GAAG,gCAJxI,eAKA,4BAAQvC,KAAK,SAASrB,UAAU,iBAAiBH,QAAS+e,GAAW,kBAAC,IAAD,CAAkBhb,GAAG,uBAG5F,yBAAK3D,MAA6B,6BAAtBwzB,EAASA,SAA0C,GAAK,CAACvzB,QAAS,SAC5E,oCACA,4BAAQmB,KAAK,SAASrB,UAAU,kBAAkBykB,SAAUR,EAAYpkB,QAAS6zB,GAAsB,kBAAC,IAAD,CAAkB9vB,GAAG,4BAD5H,eAEA,4BAAQvC,KAAK,SAASrB,UAAU,kBAAkBykB,UAAWN,GAASH,EAAUnkB,QAAS8zB,GAAoB,kBAAC,IAAD,CAAkB/vB,GAAG,UAFlI,oBAgBKuvB,GANfA,GAAwBvP,aAAU,CAChC3W,KAAM,gCACN2mB,oBAAoB,EACpB/P,SA7De,SAAA1W,GACb,IAAM2W,EAAS,GAMf,OALK3W,EAAO9D,SAAqD8D,EAAO9D,SAAStB,OAAS,MAAQ+b,EAAOza,SAAW,mCAA5Fya,EAAOza,SAAW,WACrC8D,EAAOiI,WAA0DjI,EAAOiI,WAAWrN,OAAS,MAAQ+b,EAAO1O,WAAa,mCAAlG0O,EAAO1O,WAAa,WAC1CjI,EAAOkI,WAA0DlI,EAAOkI,WAAWtN,OAAS,MAAQ+b,EAAOzO,WAAa,mCAAlGyO,EAAOzO,WAAa,WAC1ClI,EAAOmI,WAAwDnI,EAAOmI,WAAWvN,OAAS,MAAQ+b,EAAOxO,WAAa,mCAAjGwO,EAAOxO,WAAa,WACzCnI,EAAOoI,cAA+DpI,EAAOoI,cAAcxN,OAAS,MAAQ+b,EAAOvO,cAAgB,mCAA3GuO,EAAOvO,cAAgB,WAC7CuO,IAmDaF,CAIrBuP,ICzDGU,G,kDACJ,WAAYn0B,GAAQ,IAAD,8BACjB,cAAMA,IAcRE,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IAdvB,EAAK+G,MAAQja,IAAMka,YACnB,EAAK7Z,MAAQ,CACXuJ,iBAAkB,GAClB0W,mBAAoB,GACpB6S,sCAAsC,EACtCC,uCAAuC,EACvCC,eAAgB,GAChBC,eAAgB,GAChBlS,kBAAmB,IAErB,EAAKJ,OAAShhB,IAAMka,YAZH,E,iEAoBwC,IAAtD/a,KAAKJ,MAAMw0B,uCACZp0B,KAAKJ,MAAMyb,QAAQC,KAAK,0BACsC,IAAtDtb,KAAKJ,MAAMw0B,wCACnBp0B,KAAKJ,MAAMyb,QAAQC,KAAK,8B,0CAIR,IAAD,OAEjBtb,KAAKJ,MAAMkY,mCAAmC9X,KAAKJ,MAAMy0B,MAAMC,OAAOxwB,IACtE9D,KAAKmB,SAAS,CACZ8gB,kBAAmBjiB,KAAKJ,MAAMy0B,MAAMC,OAAOxwB,KAE7C,IAAIywB,EAAoBv0B,KAAKJ,MAAM0X,UAAU5Q,QAAQ,SAAA6C,GAAQ,OAAIA,EAASzF,GAAK,EAAKlE,MAAMy0B,MAAMC,OAAOxwB,MACpGywB,EAAkBtsB,OAAS,GAC5BjI,KAAKmB,SAAS,CACZ6yB,sCAAsC,EACtCE,eAAgBK,EAAkB,GAAGzwB,KAIzC,IAAI0wB,EAAwBx0B,KAAKJ,MAAM0X,UAAU5Q,QAAO,SAAA6C,GAAQ,OAAIA,EAASzF,GAAK,EAAKlE,MAAMy0B,MAAMC,OAAOxwB,MAAI8C,MAAK,SAAUC,EAAGC,GAC9H,OAAGD,EAAE/C,GAAKgD,EAAEhD,IAAY,EACrB+C,EAAE/C,GAAKgD,EAAEhD,GAAW,EAChB,KAEN0wB,EAAsBvsB,OAAS,GAChCjI,KAAKmB,SAAS,CACZ8yB,uCAAuC,EACvCE,eAAgBK,EAAsB,GAAG1wB,O,yCAK5B,IAAD,OACZkU,EAAe,CACjBzO,SAAUvJ,KAAKJ,MAAM60B,iBACrB/f,UAAW1U,KAAKJ,MAAM0Y,sBAAsB5D,UAC5CvK,WAAYnK,KAAKJ,MAAM0Y,sBAAsBnO,WAC7CsL,cAAezV,KAAKJ,MAAM80B,qBAC1BC,UAAW30B,KAAKJ,MAAM0Y,sBAAsBqc,UAC5Crf,WAAYtV,KAAKJ,MAAMg1B,oBACvBrf,WAAYvV,KAAKJ,MAAMi1B,qBACvBrf,WAAYxV,KAAKJ,MAAMk1B,oBACvBC,aAAc/0B,KAAKJ,MAAM0Y,sBAAsByc,aAC/CC,aAAch1B,KAAKJ,MAAM0Y,sBAAsB0c,aAC/CC,aAAcj1B,KAAKJ,MAAM0Y,sBAAsB2c,aAC/C5c,kBAAkB,GAEpBrY,KAAKJ,MAAMmY,kBAAkB,CAACC,iBAC9BhY,KAAKJ,MAAMkY,mCAAmC9X,KAAKkB,MAAMgzB,gBACzD,IAAIK,EAAoBv0B,KAAKJ,MAAM0X,UAAU5Q,QAAQ,SAAA6C,GAAQ,OAAIA,EAASzF,GAAK,EAAK5C,MAAMgzB,kBACvFK,EAAkBtsB,OAAS,EAC5BjI,KAAKmB,SAAS,CACZ6yB,sCAAsC,EACtC/R,kBAAmBjiB,KAAKkB,MAAMgzB,eAC9BA,eAAgBK,EAAkB,GAAGzwB,KAGvC9D,KAAKmB,SAAS,CACZ8gB,kBAAmBjiB,KAAKkB,MAAMgzB,eAC9BF,sCAAsC,IAI1C,IAAIQ,EAAwBx0B,KAAKJ,MAAM0X,UAAU5Q,QAAO,SAAA6C,GAAQ,OAAIA,EAASzF,GAAK,EAAK5C,MAAMgzB,kBAAgBttB,MAAK,SAAUC,EAAGC,GAC7H,OAAGD,EAAE/C,GAAKgD,EAAEhD,IAAY,EACrB+C,EAAE/C,GAAKgD,EAAEhD,GAAW,EAChB,KAGR0wB,EAAsBvsB,OAAS,GAC5BjI,KAAKmB,SAAS,CACZ8yB,uCAAuC,EACvCE,eAAgBK,EAAsB,GAAG1wB,O,yCAK9B,IAAD,OACZkU,EAAe,CACjBzO,SAAUvJ,KAAKJ,MAAM60B,iBACrB/f,UAAW1U,KAAKJ,MAAM0Y,sBAAsB5D,UAC5CvK,WAAYnK,KAAKJ,MAAM0Y,sBAAsBnO,WAC7CsL,cAAezV,KAAKJ,MAAM80B,qBAC1BC,UAAW30B,KAAKJ,MAAM0Y,sBAAsBqc,UAC5Crf,WAAYtV,KAAKJ,MAAMg1B,oBACvBrf,WAAYvV,KAAKJ,MAAMi1B,qBACvBrf,WAAYxV,KAAKJ,MAAMk1B,oBACvBC,aAAc/0B,KAAKJ,MAAM0Y,sBAAsByc,aAC/CC,aAAch1B,KAAKJ,MAAM0Y,sBAAsB0c,aAC/CC,aAAcj1B,KAAKJ,MAAM0Y,sBAAsB2c,aAC/C5c,kBAAkB,GAEpBrY,KAAKJ,MAAMmY,kBAAkB,CAACC,iBAC9BhY,KAAKJ,MAAMkY,mCAAmC9X,KAAKkB,MAAMizB,gBACzD,IAAIK,EAAwBx0B,KAAKJ,MAAM0X,UAAU5Q,QAAO,SAAA6C,GAAQ,OAAIA,EAASzF,GAAK,EAAK5C,MAAMizB,kBAAgBvtB,MAAK,SAAUC,EAAGC,GAC7H,OAAGD,EAAE/C,GAAKgD,EAAEhD,IAAY,EACrB+C,EAAE/C,GAAKgD,EAAEhD,GAAW,EAChB,KAEN0wB,EAAsBvsB,OAAS,EAChCjI,KAAKmB,SAAS,CACZ8yB,uCAAuC,EACvChS,kBAAmBjiB,KAAKkB,MAAMizB,eAC9BA,eAAgBK,EAAsB,GAAG1wB,KAG3C9D,KAAKmB,SAAS,CACZ8gB,kBAAmBjiB,KAAKkB,MAAMizB,eAC9BF,uCAAuC,IAI3C,IAAIiB,EAAwBl1B,KAAKJ,MAAM0X,UAAU5Q,QAAQ,SAAA6C,GAAQ,OAAIA,EAASzF,GAAK,EAAK5C,MAAMizB,kBAC3Fe,EAAsBjtB,OAAS,GAChCjI,KAAKmB,SAAS,CACZ+yB,eAAgBgB,EAAsB,GAAGpxB,GACzCkwB,sCAAsC,M,2CAM1C,IAAIhc,EAAe,CACjBzO,SAAUvJ,KAAKJ,MAAM60B,iBACrB/f,UAAW1U,KAAKJ,MAAM0Y,sBAAsB5D,UAC5CvK,WAAYnK,KAAKJ,MAAM0Y,sBAAsBnO,WAC7CsL,cAAezV,KAAKJ,MAAM80B,qBAC1BC,UAAW30B,KAAKJ,MAAM0Y,sBAAsBqc,UAC5Crf,WAAYtV,KAAKJ,MAAMg1B,oBACvBrf,WAAYvV,KAAKJ,MAAMi1B,qBACvBrf,WAAYxV,KAAKJ,MAAMk1B,oBACvBC,aAAc/0B,KAAKJ,MAAM0Y,sBAAsByc,aAC/CC,aAAch1B,KAAKJ,MAAM0Y,sBAAsB0c,aAC/CC,aAAcj1B,KAAKJ,MAAM0Y,sBAAsB2c,aAC/CE,0BAA0B,GAE5Bn1B,KAAKJ,MAAMsY,wBAAwB,CAACF,mB,kCAIpCod,QAAQC,IAAI,cACZr1B,KAAK6hB,OAAOP,QAAQxC,c,uCAIpB9e,KAAKJ,MAAMwY,gBAAe,K,uCAI1BpY,KAAKJ,MAAMyb,QAAQC,KAAK,4B,6CAIxBtb,KAAKJ,MAAMyb,QAAQC,KAAK,8B,+BAGhB,IACJqY,EADG,OAEiDA,EAAvD3zB,KAAKJ,MAAMiG,SAAS3E,MAA8ClB,KAAKJ,MAAMiG,SAAS3E,MAAhD,CAACyyB,SAAU,IAElD,IAAIhL,EAAc,CAChBpf,SAAUvJ,KAAKJ,MAAM0Y,sBAAsB/O,SAC3CmL,UAAW1U,KAAKJ,MAAM0Y,sBAAsB5D,UAC5CvK,WAAYnK,KAAKJ,MAAM0Y,sBAAsBnO,WAC7CsL,cAAezV,KAAKJ,MAAM0Y,sBAAsB7C,cAChDkf,UAAW30B,KAAKJ,MAAM0Y,sBAAsBqc,UAC5Crf,WAAYtV,KAAKJ,MAAM0Y,sBAAsBhD,WAC7CC,WAAYvV,KAAKJ,MAAM0Y,sBAAsB/C,WAC7CC,WAAYxV,KAAKJ,MAAM0Y,sBAAsB9C,WAC7Cuf,aAAc/0B,KAAKJ,MAAM0Y,sBAAsByc,aAC/CC,aAAch1B,KAAKJ,MAAM0Y,sBAAsB0c,aAC/CC,aAAcj1B,KAAKJ,MAAM0Y,sBAAsB2c,cAG7Cjd,EAAe,CACjBzO,SAAUvJ,KAAKJ,MAAM60B,iBACrB/f,UAAW1U,KAAKJ,MAAM0Y,sBAAsB5D,UAC5CvK,WAAYnK,KAAKJ,MAAM0Y,sBAAsBnO,WAC7CsL,cAAezV,KAAKJ,MAAM80B,qBAC1BC,UAAW30B,KAAKJ,MAAM0Y,sBAAsBqc,UAC5Crf,WAAYtV,KAAKJ,MAAMg1B,oBACvBrf,WAAYvV,KAAKJ,MAAMi1B,qBACvBrf,WAAYxV,KAAKJ,MAAMk1B,oBACvBC,aAAc/0B,KAAKJ,MAAM0Y,sBAAsByc,aAC/CC,aAAch1B,KAAKJ,MAAM0Y,sBAAsB0c,aAC/CC,aAAcj1B,KAAKJ,MAAM0Y,sBAAsB2c,aAC/C5c,kBAAkB,GAGpB,OAEE,kBAAC,IAAD,CAAcrW,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACzE,6BACI,kBAAC,GAAD,CAAOsiB,IAAKniB,KAAK6hB,OAAS1Y,QAAS,mCAAoC+V,UAAalf,KAAKoY,eAAenY,KAAKD,QAC7G,kBAAC,GAAD,CAAsByE,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAAU8D,OAAQvE,KAAKJ,MAAM2E,OAAQzE,eAAgBE,KAAKF,eAAgBD,SAAUG,KAAKJ,MAAMC,WAC7K,yBAAKK,UAAU,aACb,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,iBAAzB,MAA8C9D,KAAKkB,MAAM+gB,kBAAzD,KACA,4BAAI,kBAAC,IAAD,CAAkBne,GAAG,YAAzB,QAA6C9D,KAAKJ,MAAMuhB,oBACtD,kBAAC,GAAD,CACAoD,SAAU,WAAK,EAAK3kB,MAAMmY,kBAAkB,CAACC,kBAC7CnY,SAAUG,KAAKJ,MAAMC,SACrBy1B,gBAAiBt1B,KAAKJ,MAAMiW,yBAC5B8S,cAAeA,EACf2K,eAAgBtzB,KAAKszB,eAAerzB,KAAKD,MACzCuzB,gBAAiBvzB,KAAKkB,MAAM8yB,qCAC5BN,gBAAiB1zB,KAAKkB,MAAM+yB,sCAC5BT,iBAAkBxzB,KAAKu1B,iBAAiBt1B,KAAKD,MAC7CyzB,iBAAkBzzB,KAAKyzB,iBAAiBxzB,KAAKD,MAC7C8e,UAAW9e,KAAK8e,UAAU7e,KAAKD,MAC/B2zB,SAAUA,EACVC,qBAAsB5zB,KAAK4zB,qBAAqB3zB,KAAKD,MACrD6zB,mBAAoB7zB,KAAK6zB,mBAAmB5zB,KAAKD,e,GA1O/Ba,IAAMR,WAmPhCkxB,GAAWC,aAAkB,iCAEnCuC,GAAoBnY,cAClB,SAAA1a,GAME,MAAO,CACLuzB,iBANuBlD,GAASrwB,EAAO,YAMrB0zB,oBALQrD,GAASrwB,EAAO,cAKH2zB,qBAJZtD,GAASrwB,EAAO,cAIkB4zB,oBAHnCvD,GAASrwB,EAAO,cAGwCwzB,qBAFvDnD,GAASrwB,EAAO,oBAN7B0a,CAWlBmY,IAGF,IAMenY,iBANO,SAAC1a,GACrB,OAAO,uFACFA,EAAMkI,aAAgBlI,EAAM8lB,cAAiB9lB,EAAMuH,oBAAuBvH,EAAMsM,iBAAqBtM,EAAMgW,kBAAqBhW,EAAM2a,iBAAqB3a,EAAM2R,kBAIhIiJ,EAAzBF,CAAyCmY,ICrQpDyB,GAA4B,SAAA51B,GAAU,IAChCqkB,EAA+GrkB,EAA/GqkB,aAAcE,EAAiGvkB,EAAjGukB,WAAYtkB,EAAqFD,EAArFC,SAAUy1B,EAA2E11B,EAA3E01B,gBAAiBhC,EAA0D1zB,EAA1D0zB,eAAgBmC,EAA0C71B,EAA1C61B,eAAgBvR,EAA0BtkB,EAA1BskB,SAAUnV,EAAgBnP,EAAhBmP,MAAOsV,EAASzkB,EAATykB,MACxG9W,EAAe,CACnBwH,YAA2B,OAAblV,EAAoB3B,GAASC,GAAG4W,YAAc7W,GAASuB,GAAGsV,YACxEC,aAA4B,OAAbnV,EAAoB3B,GAASC,GAAG6W,aAAe9W,GAASuB,GAAGuV,aAC1EC,YAA2B,OAAbpV,EAAoB3B,GAASC,GAAG8W,YAAc/W,GAASuB,GAAGwV,YACxEC,aAA4B,OAAbrV,EAAoB3B,GAASC,GAAG+W,aAAehX,GAASuB,GAAGyV,aAC1E3L,SAAuB,OAAb1J,EAAoB3B,GAASC,GAAGoL,SAAWrL,GAASuB,GAAG8J,SACjEoZ,YAA0B,OAAb9iB,EAAoB3B,GAASC,GAAGwkB,YAAczkB,GAASuB,GAAGkjB,aAEzE,OACE,kBAAC,IAAD,CAAc3gB,OAAQnC,EAAU3B,SAAUA,GAAS2B,IACjD,0BAAM0kB,SAAUN,GACZ,6BADJ,IACU,6BACR,6BACE,2BAAO9jB,MAAO,CAACoC,MAAO,QAASrC,UAAU,oBACrC,+BACE,4BAAI,4BAAI,kBAACskB,GAAA,EAAD,CAAQ/Y,KAAK,WAAauU,UAAWkT,GAAe/P,MAAO5V,EAAahE,aAChF,4BAAI,4BAAI,6BAAK,+BACb,4BAAI,4BAAI,kBAACib,GAAA,EAAD,CAAQ/Y,KAAK,aAAeuU,UAAWkT,GAAe/P,MAAO5V,EAAawH,gBAClF,4BAAI,4BAAI,kBAACyP,GAAA,EAAD,CAAQ/Y,KAAK,aAAeuU,UAAWkT,GAAe/P,MAAO5V,EAAayH,iBAClF,4BAAI,4BAAI,kBAACwP,GAAA,EAAD,CAAQ/Y,KAAK,aAAeuU,UAAWkT,GAAe/P,MAAO5V,EAAa0H,gBAClF,4BAAI,4BAAI,kBAACuP,GAAA,EAAD,CAAQ/Y,KAAK,gBAAkBuU,UAAWkT,GAAe/P,MAAO5V,EAAa2H,oBAI7F,6BAAK,6BACL,6BACE,oCACA,4BAAQ3T,KAAK,SAASrB,UAAU,kBAAkBykB,SAAUR,EAAYpkB,QAASuzB,EAAgBnzB,MAAOs1B,EAAiB,GAAK,CAACr1B,QAAS,SACpI,kBAAC,IAAD,CAAkB0D,GAAG,4BAFzB,eAIA,4BAAQvC,KAAK,SAASrB,UAAU,kBAAkBykB,UAAWN,EAAOlkB,MAAOs1B,EAAiB,GAAK,CAACr1B,QAAS,SAAS,kBAAC,IAAD,CAAkB0D,GAAG,4BAJzI,eAMA,4BAAQvC,KAAK,SAASrB,UAAU,kBAAkBykB,SAAUR,GAAcD,IAAaG,EAAOlkB,MAAOs1B,EAAiB,CAACr1B,QAAS,QAAU,IAAI,kBAAC,IAAD,CAAkB0D,GAAG,UANnK,eAQA,4BAAQvC,KAAK,SAASrB,UAAU,iBAAkBH,QAASgP,EAAO4V,SAAWT,EAAW/jB,MAAOs1B,EAAiB,CAACr1B,QAAS,QAAU,IAAI,kBAAC,IAAD,CAAkB0D,GAAG,WAR7J,eAWA,4BAAQvC,KAAK,SAASrB,UAAU,iBAAiBH,QAASu1B,EAAiB3Q,SAAUR,EAAYhkB,MAAOs1B,EAAiB,GAAK,CAACr1B,QAAS,SACtI,kBAAC,IAAD,CAAkB0D,GAAG,qBAZvB,oBA2BK0xB,GANfA,GAA4B1R,aAAU,CACpC3W,KAAM,gCACN2mB,oBAAoB,EACpB/P,SA9De,SAAA1W,GACb,IAAM2W,EAAS,GAMf,OALK3W,EAAO9D,SAAqD8D,EAAO9D,SAAStB,OAAS,MAAQ+b,EAAOza,SAAW,mCAA5Fya,EAAOza,SAAW,WACrC8D,EAAOiI,WAA0DjI,EAAOiI,WAAWrN,OAAS,MAAQ+b,EAAO1O,WAAa,mCAAlG0O,EAAO1O,WAAa,WAC1CjI,EAAOkI,WAA0DlI,EAAOkI,WAAWtN,OAAS,MAAQ+b,EAAOzO,WAAa,mCAAlGyO,EAAOzO,WAAa,WAC1ClI,EAAOmI,WAAwDnI,EAAOmI,WAAWvN,OAAS,MAAQ+b,EAAOxO,WAAa,mCAAjGwO,EAAOxO,WAAa,WACzCnI,EAAOoI,cAA+DpI,EAAOoI,cAAcxN,OAAS,MAAQ+b,EAAOvO,cAAgB,mCAA3GuO,EAAOvO,cAAgB,WAC7CuO,IAoDiBF,CAIzB0R,IC3DGE,G,kDACJ,WAAY91B,GAAQ,IAAD,8BACjB,cAAMA,IAkBRohB,iBAAmB,SAAC1f,GAClB,IAAM2f,EAAW,EAAKrhB,MAAM+sB,cAAcjmB,QAAO,SAAAqE,GAAK,OAAIA,EAAMjH,IAAMxC,EAAM4f,OAAOnW,SACzD,IAAvBzJ,EAAM4f,OAAOnW,MACZ,EAAK5J,SAAS,CACVsJ,iBAAkBnJ,EAAM4f,OAAOnW,MAC/BoW,mBAAoBF,EAAS,GAAGxV,OAGpC,EAAKtK,SAAS,CACVsJ,iBAAkBnJ,EAAM4f,OAAOnW,MAC/BoW,mBAAoB,KAG5B,EAAKvhB,MAAM0Z,iCAAiChY,EAAM4f,OAAOnW,QAhCxC,EAmCnBjL,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IAlCvB,EAAK+G,MAAQja,IAAMka,YACnB,EAAK7Z,MAAQ,CACTuJ,iBAAkB,GAClB0W,mBAAoB,IALP,E,gEAUjBnhB,KAAKJ,MAAMqS,oBACXjS,KAAKJ,MAAM0Z,iCAAiC,M,6CAI5CtZ,KAAKJ,MAAM+X,oBACX3X,KAAKJ,MAAM0Z,iCAAiC,M,+BAuBpC,IAAD,OACP,OACE,kBAAC,IAAD,CAActX,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACzE,6BACE,kBAAC,GAAD,CAAsB4E,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAAU8D,OAAQvE,KAAKJ,MAAM2E,OAAQzE,eAAgBE,KAAKF,eAAgBD,SAAUG,KAAKJ,MAAMC,WAC3K,yBAAKK,UAAU,aACb,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,iBACzB,uBAAG3D,MAAyC,KAAlCH,KAAKkB,MAAMigB,mBAA6B,GAAK,CAAC/gB,QAAS,SAAS,kBAAC,IAAD,CAAkB0D,GAAG,YAC/F,uBAAG3D,MAAyC,KAAlCH,KAAKkB,MAAMigB,mBAA6B,CAAC/gB,QAAS,QAAU,IAAI,kBAAC,IAAD,CAAkB0D,GAAG,mBAA/F,OAAyH9D,KAAKkB,MAAMigB,oBACpI,4BAAQjhB,UAAU,eAAe8lB,SAAUhmB,KAAKghB,kBAChD,kBAAC,IAAD,CAAkBld,GAAG,WAAU,SAACkoB,GAAD,OAAmB,4BAAQxqB,IAAI,IAAIuJ,MAAM,KAAKihB,MAEzEhsB,KAAKJ,MAAM+sB,cAActa,KAAI,SAACtH,GAAD,OAC5B,4BAAQvJ,IAAKuJ,EAAMjH,GAAIiH,MAAOA,EAAMjH,IAAKiH,EAAMU,UAGpD,6BACA,yBAAKtL,MAAyC,KAAlCH,KAAKkB,MAAMigB,mBAA6B,CAAC/gB,QAAS,QAAU,IACxE,kBAAC,GAAD,CAA4BmkB,SAAU,WAAK,EAAK3kB,MAAM4Z,uBAAwB3Z,SAAUG,KAAKJ,MAAMC,SAAW41B,gBAAgB,Y,GA1D1G50B,IAAMR,WAyEvBub,iBANO,SAAC1a,GACrB,OAAO,2EACFA,EAAMkI,aAAgBlI,EAAM8lB,cAAiB9lB,EAAMuH,oBAAuBvH,EAAMsM,iBAAoBtM,EAAMgW,kBAAqBhW,EAAM2a,mBAIpGC,EAAzBF,CAAyC8Z,ICxDvCx3B,GA3BA,CACbC,GAAI,CACF8X,YAAa,eACb0f,gBAAiB,oBACjBC,sBAAuB,0DACvBnQ,SAAU,WACVC,SAAU,WACVC,QAAS,UACT5O,OAAQ,SACR8e,aAAc,aACd9jB,QAAS,UACTtR,SAAU,aAEZhB,GAAI,CACFwW,YAAa,iMACb0f,gBAAiB,iKACjBC,sBAAuB,sTACvBnQ,SAAU,+DACVC,SAAU,qEACVC,QAAS,0DACT5O,OAAQ,kCACR8e,aAAc,uCACd9jB,QAAS,6CACTtR,SAAU,gGClBKq1B,G,kDACjB,WAAYl2B,GAAO,IAAD,8BACd,cAAMA,IACDsB,MAAQ,CACT4C,GAAI,EAAKlE,MAAMR,aAAa22B,SAC5Bhf,OAAQ,EAAKnX,MAAMR,aAAa2X,QAJtB,E,mDAQXnX,GAAQ,IAAD,EAC2CI,KAAKJ,MAAMR,aAAxDqB,EADE,EACFA,SAAUkG,EADR,EACQA,YAAaI,EADrB,EACqBA,UAAWgQ,EADhC,EACgCA,OAClClX,EAAaG,KAAKJ,MAAlBC,SACJm2B,EAAwB,IAAXjf,EAAe,UAAuB,MAAXA,EAAiB,WAAa,WACtEkf,EAAM,0BAA4Bj2B,KAAKkB,MAAM4C,GACnD,OACE,oCACI,kBAAC,IAAD,CAAc9B,OAAQnC,EAAU3B,SAAUA,GAAS2B,IAC/C,4BACI,gCAAQY,EAAR,KACA,gCAAQkG,EAAR,KACA,gCAAQI,EAAR,KACA,wBAAI5G,MAAkB,MAAX4W,EAAiB,CAAC2G,gBAAiB,WAAwB,MAAX3G,EAAiB,CAAC2G,gBAAiB,UAAWxa,MAAO,oBAAsB,CAACwa,gBAAiB,UAAWxa,MAAO,qBAC3J,MAAX6T,GAAmB,kBAAC,IAAD,CAAMzT,GAAI2yB,GAAOD,IAClB,MAAXjf,GAA6B,MAAXA,IAAmBif,U,GAvBnBn1B,IAAMR,WC0BtCnC,GA/BA,CACbC,GAAI,CACF4T,QAAS,UACToT,OAAQ,SACRC,eAAgB,mBAChBC,KAAM,OACN3U,OAAQ,SACR3J,UAAW,aACXgQ,OAAQ,SACRtW,SAAU,YACVklB,QAAQ,UACRD,SAAS,WACTD,SAAU,WACVyQ,iBAAkB,sBAEpBz2B,GAAI,CACAsS,QAAS,6CACToT,OAAQ,mDACRC,eAAgB,gHAChBC,KAAM,6CACN3U,OAAQ,6CACR3J,UAAW,4EACXgQ,OAAQ,kCACRtW,SAAU,8FACVklB,QAAQ,0DACRD,SAAS,qEACTD,SAAU,+DACVyQ,iBAAkB,2ICDXC,GArBc,SAAAv2B,GAAU,IAC7Bw2B,EAA4Bx2B,EAA5Bw2B,cAAev2B,EAAaD,EAAbC,SACvB,OACE,kBAAC,IAAD,CAAcmC,OAAQnC,EAAU3B,SAAUA,GAAS2B,IACjD,2BAAOK,UAAU,SACb,+BACE,4BACE,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,cACzB,4BAAI,kBAAC,IAAD,CAAkBA,GAAG,aACzB,4BAAI,kBAAC,IAAD,CAAkBA,GAAG,eACzB,4BAAI,kBAAC,IAAD,CAAkBA,GAAG,cAG7B,+BACGqmB,MAAMkM,KAAKD,GAAe/jB,KAAI,SAAAjT,GAAY,OAAI,kBAAC,GAAD,CAAqBA,aAAcA,EAAeS,SAAUA,EAAU2B,IAAKpC,EAAa22B,kBCV7IO,G,kDAEJ,WAAY12B,GAAQ,IAAD,8BACjB,cAAMA,IAcRE,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IAdvB,EAAK+G,MAAQja,IAAMka,YACnB,EAAK7Z,MAAQ,CACXgM,MAAO,GACPI,SAAU,IALK,E,gEAUftN,KAAKJ,MAAMmW,wBACX/V,KAAKJ,MAAMkW,6BACX9V,KAAKJ,MAAM2W,wBAAwB,K,+BAQrC,OACE,kBAAC,IAAD,CAAcvU,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACvE,6BACE,kBAAC,GAAD,CAAsB4E,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAAU8D,OAAQvE,KAAKJ,MAAM2E,OAAQzE,eAAgBE,KAAKF,eAAgBD,SAAUG,KAAKJ,MAAMC,WAC7K,yBAAKK,UAAU,aACb,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,iBACzB,kBAAC,GAAD,CAAuBsyB,cAAgBp2B,KAAKJ,MAAM22B,kBAAoB12B,SAAUG,KAAKJ,MAAMC,kB,GA5BvEgB,IAAMR,WA0CvBub,iBANO,SAAC1a,GACrB,OAAO,mDACFA,EAAMuH,oBAAuBvH,EAAMsM,iBAAoBtM,EAAMs1B,sBAAyBt1B,EAAM8lB,gBAI3DlL,EAAzBF,CAAyC0a,I,s5BCjDxD,IA8CeG,GA9CgBta,KAAOua,GAAV,MCOPC,G,kDACjB,WAAY/2B,GAAO,IAAD,8BACd,cAAMA,IACDsB,MAAQ,CACT4C,GAAI,EAAKlE,MAAM0X,UAAUxT,IAE7B,EAAK+d,OAAShhB,IAAMka,YACpB,EAAKwL,QAAU1lB,IAAMka,YANP,E,wDAUd/a,KAAK6hB,OAAOP,QAAQxC,c,mFAQpB9e,KAAKJ,MAAM8X,uBAAuB1X,KAAKkB,MAAM4C,M,mCAI7C9D,KAAKJ,MAAMg3B,aAAa52B,KAAKkB,MAAM4C,M,+BAG7B,IAAD,EACkC9D,KAAKJ,MAAM0X,UAA5CxT,EADD,EACCA,GAAI2H,EADL,EACKA,KAAM0Z,EADX,EACWA,OAAQ0R,EADnB,EACmBA,WAEpBC,EAD2B92B,KAAKJ,MAA9Bm3B,qBAC4BhxB,SAAS/F,KAAKkB,MAAM4C,IACtD+yB,EAAaA,EAAWn2B,UAAU,EAAG,IACrC,IAAIs1B,EAAwB,IAAX7Q,EAAe,SAAW,WACvC8Q,EAAM,2BAA6Bj2B,KAAKkB,MAAM4C,GAN7C,EAO+B9D,KAAKJ,MAAjCC,EAPH,EAOGA,SAAU4J,EAPb,EAOaA,cAClB,OACI,oCACI,kBAAC,GAAD,CAAwBtJ,MAAO22B,EAAS,CAACpZ,gBAAiB,WAAwB,IAAXyH,EAAe,CAACzH,gBAAiB,QAAU,CAACA,gBAAiB,YAEhI,kBAAC,IAAD,CAAc1b,OAAQnC,EAAU3B,SAAUA,GAAS2B,IAC3C,wBAAI0C,MAAM,OAAOuB,GACjB,wBAAIvB,MAAM,MAAMrC,UAAU,eAAe82B,YAAah3B,KAAKi3B,WAAWh3B,KAAKD,OACtEyL,EACD,yBAAKvL,UAAU,oBACVuJ,EAAc4I,KAAI,SAAA6kB,GAAM,OAAI,yBAAKh3B,UAA8B,IAAnBg3B,EAAOrtB,QAAgB,gBAAkB,kBAAmBrI,IAAK01B,EAAOpzB,IAAKozB,EAAOzrB,WAGzI,wBAAIlJ,MAAM,OAAOs0B,GACjB,wBAAI32B,UAAU,UAAUqC,MAAM,MAAMxC,QAASC,KAAKm3B,oBAAoBl3B,KAAKD,OAAQg2B,GACnF,wBAAIzzB,MAAM,OAAM,kBAAC,IAAD,CAAMe,GAAI2yB,GAAV,gB,GAhDEp1B,IAAMR,WCF/B+2B,G,uKACP,IAAD,EACsGp3B,KAAKJ,MAAxG0X,EADH,EACGA,UAAWzX,EADd,EACcA,SAAU6X,EADxB,EACwBA,uBAAwBkf,EADhD,EACgDA,aAAcntB,EAD9D,EAC8DA,cAAestB,EAD7E,EAC6EA,qBAClF,OACI,kBAAC,IAAD,CAAc/0B,OAAQnC,EAAU3B,SAAUA,GAAS2B,IACnD,2BAAOK,UAAU,SACb,+BACE,4BACE,kCACA,wCACA,0CACA,sCACA,sCAGJ,+BACKoX,EAAUjF,KAAI,SAAAiF,GAAS,OAAI,kBAAC,GAAD,CAC1BA,UAAWA,EACX9V,IAAK8V,EAAUxT,GACfjE,SAAUA,EACV6X,uBAAwBA,EACxBkf,aAAcA,EACdntB,cAAeA,EACfstB,qBAAsBA,c,GAvBGl2B,IAAMR,WCsBtCg3B,G,kDAxBX,WAAYz3B,GAAQ,IAAD,8BACf,cAAMA,IACDsB,MAAQ,CACXo2B,oBAAqB,IAHR,E,qDAOX,IAAD,EAC0Et3B,KAAKJ,MAA9E23B,EADD,EACCA,mBAAoBhwB,EADrB,EACqBA,aAAc2iB,EADnC,EACmCA,gBAAiB1iB,EADpD,EACoDA,kBACvD8vB,EAAsBxvB,KAAKoL,KAAKqkB,EAAmBhwB,GAEvD,OACI,kBAAC,GAAD,KACI,wBAAIrH,UAAU,sCACXiqB,MAAMmN,GAAqBrP,OAAO5V,KAAI,SAAC+X,EAAGxiB,GAAJ,OACvC,wBAAI1H,UAAYsH,IAAuBI,EAAI,EAAK,mBAAqB,YAAcpG,IAAKoG,EAAG7H,QAAS,kBAAMmqB,EAAgBtiB,EAAI,KAC5H,uBAAGpG,IAAKoG,EAAG1H,UAAU,YAAYkxB,KAAK,KAAKxpB,EAAI,a,GAjBhCvH,aCoBzBm3B,G,kDACJ,WAAY53B,GAAQ,IAAD,8BACjB,cAAMA,IAiBRyrB,6BAA+B,SAAC/pB,GAC9B,EAAK1B,MAAM+T,qBAAqB,GAChC,IAAI8jB,EAAmB/xB,GAAQ2B,uBAAuB,EAAKzH,MAAM0X,UAAWhW,EAAM4f,OAAOnW,MAAO,GAChG,EAAKnL,MAAM6X,oBAAoBggB,GAC/B,EAAK73B,MAAM4T,gBAAgBlS,EAAM4f,OAAOnW,QAtBvB,EAyBnB2sB,uBAAyB,SAACp2B,GACxB,EAAK1B,MAAM+T,qBAAqB,GAChC,EAAK/T,MAAMwZ,UAAU9X,EAAM4f,OAAOnW,OAClC,EAAKnL,MAAMqX,iBA5BM,EAwCnBnX,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IAzCN,EA4CnBiN,iBAAmB,SAAC1f,GAClB,IACI2f,EADA0W,EAAc,EAAK/3B,MAAM+sB,cAAcjmB,QAAO,SAAAqE,GAAK,OAAIA,EAAMjH,KAAOxC,EAAM4f,OAAOnW,SAGnFkW,EAD2B,qBAAnB0W,EAAY,GACTA,EAAY,GAAGlsB,KAEf,GAIb,EAAK7L,MAAMkZ,YAAYmI,GACvB,EAAKrhB,MAAM+T,qBAAqB,GAC7BrS,EAAM4f,OAAOnW,MACZ,EAAK5J,SAAS,CACVsJ,iBAAkBnJ,EAAM4f,OAAOnW,QAOvC,EAAKnL,MAAM0Z,iCAAiChY,EAAM4f,OAAOnW,OACzD,EAAKnL,MAAMqX,iBAlEM,EAqEnBiT,gBAAkB,SAACtiB,GACjB,EAAKhI,MAAM+T,qBAAqB/L,GAChC,IAAI6vB,EAAmB/xB,GAAQ2B,uBAAuB,EAAKzH,MAAM0X,UAAW,EAAK1X,MAAMuH,qBAAsBS,GAC7G,EAAKhI,MAAM6X,oBAAoBggB,IAtE/B,EAAK3c,MAAQja,IAAMka,YACnB,EAAK7Z,MAAQ,CACXqqB,eAAgB,CACd,CAACznB,GAAI,EAAGiH,MAAO,KACf,CAACjH,GAAI,GAAIiH,MAAO,MAChB,CAACjH,GAAI,GAAIiH,MAAO,MAChB,CAACjH,GAAI,GAAIiH,MAAO,OAElB6sB,iBAAkB,CAChB,CAAC9zB,GAAI,EAAGiH,MAAO,OACf,CAACjH,GAAI,EAAGiH,MAAO,UACf,CAACjH,GAAI,EAAGiH,MAAO,cAbF,E,gEAkCjB/K,KAAKJ,MAAMqS,oBACXjS,KAAKJ,MAAM6Y,qCAAqC,K,+EAyChD,OACE,kBAAC,IAAD,CAAczW,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACzE,6BACI,kBAAC,GAAD,CAAsB4E,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAAU8D,OAAQvE,KAAKJ,MAAM2E,OAAQzE,eAAgBE,KAAKF,eAAgBD,SAAUG,KAAKJ,MAAMC,WAC7K,yBAAKK,UAAU,aACb,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,kBACzB,uBAAG3D,MAAiD,IAA1CH,KAAKJ,MAAMi4B,2BAAmC,CAACz3B,QAAS,QAAU,IAAI,kBAAC,IAAD,CAAkB0D,GAAG,YACrG,uBAAG3D,MAAiD,IAA1CH,KAAKJ,MAAMi4B,2BAAmC,GAAK,CAACz3B,QAAS,SAAS,kBAAC,IAAD,CAAkB0D,GAAG,mBAArG,OAA+H9D,KAAKJ,MAAMuhB,oBAC1I,4BAAQjhB,UAAU,eAAe8lB,SAAUhmB,KAAKghB,iBAAkBjW,MAAO/K,KAAKJ,MAAM6K,kBACpF,kBAAC,IAAD,CAAkB3G,GAAG,WAAU,SAACkoB,GAAD,OAAmB,4BAAQxqB,IAAI,IAAIuJ,MAAM,KAAKihB,MAEzEhsB,KAAKJ,MAAM+sB,cAActa,KAAI,SAACtH,GAAD,OAC5B,4BAAQvJ,IAAKuJ,EAAMjH,GAAIiH,MAAOA,EAAMjH,IAAKiH,EAAMU,UAGpD,6BACA,yBAAKtL,MAAiD,IAA1CH,KAAKJ,MAAMi4B,2BAAoC,CAACz3B,QAAS,QAAU,IAC7E,kBAAC,GAAD,KACI,kBAAC,KAAD,CAAWymB,sBAAsB,OAAOC,kBAAkB,QACxD,kBAAC,KAAD,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAkBhjB,GAAG,oBAG3B,kBAAC,KAAD,KACE,2BAAO5D,UAAU,iBACf,+BACE,4BACE,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,iBAAzB,KACA,4BAAI,kBAAC,IAAD,CAAkBA,GAAG,WAAzB,KACA,4BAAI,kBAAC,IAAD,CAAkBA,GAAG,qBACzB,kDAEF,4BACE,4BAAI,kBAAC,GAAD,CAAQgc,QAAS9f,KAAKkB,MAAMqqB,eAAgBvF,SAAUhmB,KAAKqrB,6BAA8BxB,SAAU7pB,KAAKJ,MAAMuH,wBAClH,4BAAI,kBAAC,GAAD,CAAQ2Y,QAAS9f,KAAKkB,MAAM02B,iBAAkB/N,SAAU7pB,KAAKJ,MAAMwX,cAAe4O,SAAUhmB,KAAK03B,0BACrG,4BACE,4BAAQn2B,KAAK,SAASrB,UAAU,iBAAiBH,QAASC,KAAKJ,MAAMoZ,0BACnE,kBAAC,IAAD,CAAkBlV,GAAG,sBAGzB,4BACE,4BAAQvC,KAAK,SAASrB,UAAU,iBAAiBH,QAASC,KAAKJ,MAAMqX,eAArE,iBAWpB,kBAAC,GAAD,CAAkBsgB,mBAAoBv3B,KAAKJ,MAAMi4B,2BAA4BtwB,aAAcvH,KAAKJ,MAAMuH,qBAAsB+iB,gBAAiBlqB,KAAKkqB,gBAAiB1iB,kBAAmBxH,KAAKJ,MAAM4H,oBACjM,kBAAC,GAAD,CACE8P,UAAYtX,KAAKJ,MAAMk4B,mBACvBj4B,SAAUG,KAAKJ,MAAMC,SACrB6X,uBAAwB1X,KAAKJ,MAAM8X,uBACnCkf,aAAc52B,KAAKJ,MAAMgY,YACzBnO,cAAezJ,KAAKJ,MAAMiM,QAC1BkrB,qBAAsB/2B,KAAKJ,MAAMm4B,+BAEnC,kBAAC,GAAD,CAAkBR,mBAAoBv3B,KAAKJ,MAAMi4B,2BAA4BtwB,aAAcvH,KAAKJ,MAAMuH,qBAAsB+iB,gBAAiBlqB,KAAKkqB,gBAAiB1iB,kBAAmBxH,KAAKJ,MAAM4H,4B,GA5I9K3G,IAAMR,WA2JxBub,iBANO,SAAC1a,GACrB,OAAO,uFACFA,EAAMkI,aAAgBlI,EAAM8lB,cAAiB9lB,EAAMuH,oBAAuBvH,EAAMsM,iBAAqBtM,EAAMgW,kBAAqBhW,EAAM2a,iBAAqB3a,EAAM2R,kBAIhIiJ,EAAzBF,CAAyC4b,IC1KlDQ,G,kDAEJ,WAAYp4B,GAAQ,IAAD,8BACjB,cAAMA,IAmBRq4B,aAAe,SAACjZ,GACd,EAAK7d,SAAS,CAACoI,SAAUyV,EAAEkC,OAAOnW,SArBjB,EAwBnBjL,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IAvBvB,EAAK+G,MAAQja,IAAMka,YAFF,E,gEAMjB/a,KAAKJ,MAAMsW,0BAA0BlW,KAAKJ,MAAMy0B,MAAMC,OAAOxwB,M,2CAKE,IAA5D9D,KAAKJ,MAAMs4B,8CACZl4B,KAAKJ,MAAMyb,QAAQC,KAAK,4B,uCAK1Btb,KAAKJ,MAAMyb,QAAQC,KAAK,4B,+BAWhB,IAAD,OACP,OACE,kBAAC,IAAD,CAActZ,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACvE,6BACE,kBAAC,GAAD,CAAsB4E,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAAU8D,OAAQvE,KAAKJ,MAAM2E,OAAQzE,eAAgBE,KAAKF,eAAgBD,SAAUG,KAAKJ,MAAMC,WAC7K,yBAAKK,UAAU,aACb,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,qBACzB,4BAAI,kBAAC,IAAD,CAAkBA,GAAG,YAAzB,QAA6C9D,KAAKJ,MAAMu4B,sBAAsBxxB,aAC9E,4BAAI,kBAAC,IAAD,CAAkB7C,GAAG,aAAzB,QAA8C9D,KAAKJ,MAAMu4B,sBAAsB13B,UAC/E,kBAAC,GAAD,CAA4B8jB,SAAU,WAAK,EAAK3kB,MAAMwV,yBAA0BvV,SAAUG,KAAKJ,MAAMC,SACrGy1B,gBAAiBt1B,KAAKJ,MAAMiW,yBAA0B8S,cAAe3oB,KAAKJ,MAAMu4B,sBAAwB7E,eAAgBtzB,KAAKszB,eAAerzB,KAAKD,MAAOy1B,gBAAgB,W,GAxC7I50B,IAAMR,WAsD9Bub,iBANO,SAAC1a,GACrB,OAAO,mDACFA,EAAMuH,oBAAuBvH,EAAMsM,iBAAoBtM,EAAMs1B,sBAAyBt1B,EAAM8lB,gBAI3DlL,EAAzBF,CAAyCoc,IC9CpDI,GAA2B,SAAAx4B,GAAU,IAC/BqkB,EAAuDrkB,EAAvDqkB,aAAcE,EAAyCvkB,EAAzCukB,WAAYtkB,EAA6BD,EAA7BC,SAAUyzB,EAAmB1zB,EAAnB0zB,eACtC/lB,EAAe,CACnBwH,YAA2B,OAAblV,EAAoB3B,GAASC,GAAG4W,YAAc7W,GAASuB,GAAGsV,YACxEC,aAA4B,OAAbnV,EAAoB3B,GAASC,GAAG6W,aAAe9W,GAASuB,GAAGuV,aAC1EC,YAA2B,OAAbpV,EAAoB3B,GAASC,GAAG8W,YAAc/W,GAASuB,GAAGwV,YACxEC,aAA4B,OAAbrV,EAAoB3B,GAASC,GAAG+W,aAAehX,GAASuB,GAAGyV,aAC1E3L,SAAuB,OAAb1J,EAAoB3B,GAASC,GAAGoL,SAAWrL,GAASuB,GAAG8J,SACjEoZ,YAA0B,OAAb9iB,EAAoB3B,GAASC,GAAGwkB,YAAczkB,GAASuB,GAAGkjB,aAEzE,OACE,kBAAC,IAAD,CAAc3gB,OAAQnC,EAAU3B,SAAUA,GAAS2B,IACjD,0BAAM0kB,SAAUN,GACZ,6BADJ,IACU,6BACN,6BACI,2BAAO9jB,MAAO,CAACoC,MAAO,QAAS81B,MAAM,oBACjC,+BACE,4BAAI,4BAAI,kBAAC7T,GAAA,EAAD,CAAQ/Y,KAAK,WAAauU,UAAWkT,GAAe/P,MAAO5V,EAAahE,SAAUob,UAAU,MACpG,4BAAI,4BAAI,+BACR,4BAAI,4BAAI,kBAACH,GAAA,EAAD,CAAQ/Y,KAAK,aAAeuU,UAAWkT,GAAe/P,MAAO5V,EAAawH,YAAa4P,UAAU,MACzG,4BAAI,4BAAI,kBAACH,GAAA,EAAD,CAAQ/Y,KAAK,aAAeuU,UAAWkT,GAAe/P,MAAO5V,EAAayH,aAAc2P,UAAU,MAC1G,4BAAI,4BAAI,kBAACH,GAAA,EAAD,CAAQ/Y,KAAK,aAAeuU,UAAWkT,GAAe/P,MAAO5V,EAAa0H,YAAa0P,UAAU,MACzG,4BAAI,4BAAI,kBAACH,GAAA,EAAD,CAAQ/Y,KAAK,gBAAkBuU,UAAWkT,GAAe/P,MAAO5V,EAAa2H,aAAcyP,UAAU,SAIzH,6BAAK,6BACL,6BACE,kBAAChJ,GAAA,EAAD,CAAQpY,QAAQ,YAAaohB,SAAUR,EAAYpkB,QAASuzB,GAAgB,kBAAC,IAAD,CAAkBxvB,GAAG,gCAa5Fs0B,GANfA,GAA2BtU,aAAU,CACnC3W,KAAM,+BACN2mB,oBAAoB,EACpB/P,SAhDe,SAAA1W,GACb,IAAM2W,EAAS,GAMf,OALK3W,EAAO9D,SAAqD8D,EAAO9D,SAAStB,OAAS,MAAQ+b,EAAOza,SAAW,mCAA5Fya,EAAOza,SAAW,WACrC8D,EAAOiI,WAA0DjI,EAAOiI,WAAWrN,OAAS,MAAQ+b,EAAO1O,WAAa,mCAAlG0O,EAAO1O,WAAa,WAC1CjI,EAAOkI,WAA0DlI,EAAOkI,WAAWtN,OAAS,MAAQ+b,EAAOzO,WAAa,mCAAlGyO,EAAOzO,WAAa,WAC1ClI,EAAOmI,WAAwDnI,EAAOmI,WAAWvN,OAAS,MAAQ+b,EAAOxO,WAAa,mCAAjGwO,EAAOxO,WAAa,WACzCnI,EAAOoI,cAA+DpI,EAAOoI,cAAcxN,OAAS,MAAQ+b,EAAOvO,cAAgB,mCAA3GuO,EAAOvO,cAAgB,WAC7CuO,IAsCgBF,CAIxBsU,I,oMCtDH,IAUeE,GAVoBnc,KAAOC,IAAV,MCQ1Bmc,G,kDAEJ,WAAY34B,GAAQ,IAAD,8BACjB,cAAMA,IAcRq4B,aAAe,SAACjZ,GACd,EAAK7d,SAAS,CAACoI,SAAUyV,EAAEkC,OAAOnW,SAhBjB,EAmBnBjL,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IAlBvB,EAAK+G,MAAQja,IAAMka,YAFF,E,gEAMjB/a,KAAKJ,MAAMuW,yBAAyBnW,KAAKJ,MAAMy0B,MAAMC,OAAOxwB,M,qFAM5D9D,KAAKJ,MAAMyb,QAAQC,KAAK,2B,+BAWhB,IAIJ2F,EAJG,EACwCjhB,KAAKJ,MAAM44B,qBAApDC,EADC,EACDA,eAAgB1xB,EADf,EACeA,UAAW2N,EAD1B,EAC0BA,UAE7B/N,EAAc3G,KAAKJ,MAAM8S,aAAahM,QAAO,SAACsY,GAAD,OAAOA,EAAElb,KAAO4Q,KAE5D/N,EAAY,KACfsa,EAAWta,EAAY,GAAZ,MAGb,IAAIqvB,EAAgC,IAAnByC,EAAuBv6B,GAAS8B,KAAKJ,MAAMC,UAAU8lB,QAA6B,MAAnB8S,EAAyBv6B,GAAS8B,KAAKJ,MAAMC,UAAU4lB,SAAWvnB,GAAS8B,KAAKJ,MAAMC,UAAU6lB,SAChL,OACE,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAc1jB,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACvE,6BACE,kBAAC,GAAD,CAAsB4E,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAAU8D,OAAQvE,KAAKJ,MAAM2E,OAAQzE,eAAgBE,KAAKF,eAAgBD,SAAUG,KAAKJ,MAAMC,WAC7K,yBAAKK,UAAU,aACb,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,2BACzB,wBAAI3D,MAA0B,MAAnBs4B,EAAyB,CAAC/a,gBAAiB,WAAgC,MAAnB+a,EAAyB,CAAC/a,gBAAiB,UAAWxa,MAAO,oBAAsB,CAACwa,gBAAiB,UAAWxa,MAAO,qBACxL,kBAAC,IAAD,CAAkBY,GAAG,WADvB,KACqCkyB,GAHvC,WAKE,4BACE,kBAAC,IAAD,CAAkBlyB,GAAG,YADvB,KACsCmd,GAEtC,wBAAI/gB,UAAU,UAAS,kBAAC,IAAD,CAAkB4D,GAAG,iBAA5C,KAAgEiD,GAEhE,kBAAC,GAAD,CAA2BlH,SAAUG,KAAKJ,MAAMC,SAAW8oB,cAAe3oB,KAAKJ,MAAM44B,qBAAwBlF,eAAgBtzB,KAAKszB,eAAerzB,KAAKD,gB,GAlD9Ha,IAAMR,WAiE7Bub,iBANO,SAAC1a,GACrB,OAAO,+DACFA,EAAMuH,oBAAuBvH,EAAMsM,iBAAoBtM,EAAMs1B,sBAAyBt1B,EAAM8lB,cAAiB9lB,EAAM2a,mBAIlFC,EAAzBF,CAAyC2c,ICpDvCr6B,GAvBA,CACbC,GAAI,CACFqB,mBAAoB,sBACpBk5B,gBAAiB,oBACjBC,WAAY,eACZC,QAAS,UACTC,OAAQ,SACR/M,SAAU,aACVgN,cAAe,UACfC,YAAa,SAEft5B,GAAI,CACFD,mBAAoB,4EACpBk5B,gBAAiB,oIACjBC,WAAY,iDACZC,QAAS,6EACTC,OAAQ,iCACR/M,SAAU,4DACVgN,cAAe,UACfC,YAAa,U,+rBCjBnB,IAqCeC,GArCc7c,KAAO8c,GAAV,MCGLC,G,sLAEbl5B,KAAKJ,MAAMsS,sBAAsB,CAACpO,GAAI9D,KAAKkB,MAAM4C,O,mCAIjD9D,KAAKJ,MAAM6Q,WAAW,CAAC3M,GAAI9D,KAAKkB,MAAM4C,O,0CAItC9D,KAAKJ,MAAMgR,kBAAkB,CAAC9M,GAAI9D,KAAKkB,MAAM4C,O,0CAI7C9D,KAAKJ,MAAMiR,kBAAkB,CAAC/M,GAAI9D,KAAKkB,MAAM4C,GAAIgN,OAAQ9Q,KAAKumB,QAAQjF,QAAQpgB,MAAM6J,U,iCAG7EjH,GACP9D,KAAKJ,MAAMg3B,aAAa9yB,K,+BAGlB,IAAD,SACmC9D,KAAKJ,MAAM2J,SAA7CzF,EADD,EACCA,GAAI2H,EADL,EACKA,KAAM0tB,EADX,EACWA,WAAY7S,EADvB,EACuBA,QACxB8S,EAAUp5B,KAAKJ,MAAMw5B,QACrB3vB,EAAgBzJ,KAAKJ,MAAM6J,cAC7BwsB,EAAM,2BAA6BnyB,EACvC,OAEU,4BACI,gCAAQA,EAAR,KAEA,kBAAC,GAAD,CAAsB5D,UAAU,eAAe82B,YAAa,WAAK,EAAKp3B,MAAMgY,YAAY9T,KACpF,yBAAK5D,UAAU,eACX,yBAAKA,UAAU,aACVuJ,EAAc4I,KAAI,SAAA6kB,GAAM,OAAI,yBAAKh3B,UAA8B,IAAnBg3B,EAAOrtB,QAAgB,gBAAkB,kBAAmBrI,IAAK01B,EAAOpzB,IAAKozB,EAAOzrB,UAGrI,kBAAC,KAAD,CACI4tB,mBAAmB,mBACnBC,YAAa,CAACF,GACdG,YAAY,EACZC,gBAAkB/tB,MAI9B,gCAAQ0tB,EAAR,KACA,gCAAQ7S,EAAR,MACA,4BAAK,kBAAC,IAAD,CAAMhjB,GAAI,CAACm2B,SAAUxD,EAAK/0B,MAAO,CAAEyyB,SAAU/tB,OAAOC,SAAS4zB,YAA7D,c,GA/C4B54B,IAAMR,WCuB5CyjB,gBAAU,CACvB3W,KAAM,2BADO2W,EArBiB,SAAAlkB,GAAU,IAChCqkB,EAAwDrkB,EAAxDqkB,aAAcC,EAA0CtkB,EAA1CskB,SAAUnV,EAAgCnP,EAAhCmP,MAAOoV,EAAyBvkB,EAAzBukB,WAAYtkB,EAAaD,EAAbC,SACnD,OACE,kBAAC,IAAD,CAAcmC,OAAQnC,EAAU3B,SAAUA,GAAS2B,IACjD,0BAAM0kB,SAAUN,GACd,6BACE,6BACA,kBAAC,IAAD,CAAkBngB,GAAG,YAClB,SAACkoB,GAAD,OAAmB,kBAACxH,GAAA,EAAD,CAAO/Y,KAAK,wBAAwBuU,UAAU,QAAQze,KAAK,OAAO4kB,YAAa6F,SAIvG,6BACE,4BAAQzqB,KAAK,SAASojB,SAAUT,GAAYC,GAAY,kBAAC,IAAD,CAAkBrgB,GAAG,YAC7E,4BAAQvC,KAAK,SAASojB,SAAUT,GAAYC,EAAYpkB,QAASgP,GAAO,kBAAC,IAAD,CAAkBjL,GAAG,oBCMjG41B,G,kDACJ,WAAY95B,GAAQ,IAAD,uBACjB,cAAMA,IA+BRE,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IA/BvB,EAAK+G,MAAQja,IAAMka,YAFF,IAGTC,EAAYpb,EAAZob,QACFC,EAAWD,EAAQnL,IAAI,yBAA2BmL,EAAQnL,IAAI,yBAA2B,QACzFqL,EAAkCF,EAAQnL,IAAI,iBAAmBmL,EAAQnL,IAAI,iBAAmB,QALrF,OAOjB,EAAK3O,MAAQ,CACXia,sBAAuBF,EACvBG,8BAA+BF,GAThB,E,gEAaC,IAAD,OACjBlb,KAAKJ,MAAMua,kBACXna,KAAKJ,MAAM6S,oBACXrE,YAAW,WACN,EAAKlN,MAAMia,sBAAsBlT,OAAS,GAC3C,EAAKrI,MAAMyb,QAAQC,KAAK,cAEvB,EAAKpa,MAAMka,8BAA8BnT,OAAS,GACnD,EAAKrI,MAAMyb,QAAQC,KAAK,wBAEzB,KACHtb,KAAKJ,MAAMoP,wCAAwC,K,gDAKnDhP,KAAKJ,MAAM+P,4B,+BAOH,IAAD,OACDuK,EAA0Bla,KAAKJ,MAA/Bsa,sBACR,OACM,6BACE,kBAAC,IAAD,CAAclY,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WAEvE,kBAAC,GAAD,CAAsB4E,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAAU8D,OAAQvE,KAAKJ,MAAM2E,OAAQzE,eAAgBE,KAAKF,eAAgBD,SAAUG,KAAKJ,MAAMC,WAC7K,yBAAKK,UAAU,YAAYC,MAAQH,KAAKkB,MAAMia,sBAAsBlT,OAAS,EAAK,CAAC7H,QAAS,QAAU,IAClG,4BAAI,kBAAC,IAAD,CAAkB0D,GAAG,wBACzB,kBAAC,GAAD,KACE,kBAAC,KAAD,CAAW+iB,sBAAsB,OAAOC,kBAAkB,QACxD,kBAAC,KAAD,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAkBhjB,GAAG,sBAG3B,kBAAC,KAAD,KACI,kBAAC,GAAD,CAAyBygB,SAAU,WAAK,EAAK3kB,MAAMqa,wBAAwB,CAACC,2BAA0Bra,SAAUG,KAAKJ,MAAMC,WAC3H,yBAAKM,MAAkD,IAA3CH,KAAKJ,MAAM+5B,qBAAqB1xB,OAAgB,CAAC7H,QAAS,QAAU,IAChF,2BAAOF,UAAU,SACb,+BACI,4BACI,kCACA,wCACA,0CACA,uCACA,sCAGR,+BACKF,KAAKJ,MAAM+5B,qBAAqBtnB,KAAI,SAAA9I,GAAQ,OAAI,kBAAC,GAAD,CAC7CA,SAAUA,EACV/H,IAAK+H,EAASzF,GACds1B,QAAWlf,EACXtC,YAAe,EAAKhY,MAAMgY,YAC1BnO,cAAe,EAAK7J,MAAMiM,iBAM1C,kBAAC,KAAD,KACA,kBAAC,KAAD,KACI,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAkB/H,GAAG,iBAG3B,kBAAC,KAAD,uC,GArFUjD,IAAMR,WAmGlCkxB,GAAWC,aAAkB,2BAEnCkI,GAAsB9d,cAClB,SAAA1a,GAEI,MAAO,CACHgZ,sBAF0BqX,GAASrwB,EAAO,4BAFhC0a,CAOhB8d,IAEN,IAMe9d,iBANO,SAAC1a,GACrB,OAAO,+DACFA,EAAMkI,aAAgBlI,EAAMuH,oBAAuBvH,EAAM2a,iBAAoB3a,EAAMsM,iBAAoBtM,EAAMgW,oBAI5E4E,EAAzBF,CAAyCG,aAAY2d,K,sCChInDx7B,GAfA,CACbC,GAAI,CACAy7B,gBAAiB,sCACjBC,cAAe,6BACfzJ,wBAAyB,6BACzBC,OAAQ,YAEZ5wB,GAAI,CACAm6B,gBAAiB,iKACjBC,cAAe,0LACfzJ,wBAAyB,iNACzBC,OAAQ,qCCVHyJ,GAAe,iBAAO,CAAE,QAAWvxB,GAAMC,WAAWC,mBAAmBC,UCQrEqxB,GATF,CACPC,YAAa,qBACbC,gBAAiB,0BACjBC,kBAAmB,uBACnBC,eAAgB,qBAChBC,kBAAmB,0BACnBC,oBAAqB,6BCFrBnyB,GAAUxC,GAAQC,aAEX20B,GAAgB,SAAC,GAAsB,IAArB3gB,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MAC9BtR,EAAUwxB,KAChB,OAAOlxB,KAAMC,KAAKX,GAAU6xB,GAAKC,YAAa,CAACrgB,UAASC,SAAQ,CAACtR,a,aCNpDiyB,IAAV,SAAUA,GAA0BC,EAAmBrxB,EAASsxB,EAAiBC,GAAjF,kEACH,OADG,SACGC,aAAI,CACNC,aAAI,CAAEr5B,KAAM,yBAA0BgK,WAAYivB,IAClDI,aAAI,CAAEr5B,KAAM,iCAAkCsL,uBAAwB1D,IACtEyxB,aAAI,CAAEr5B,KAAM,oCAAqCqL,0BAA2B6tB,IAC5EG,aAAI,CAAEr5B,KAAM,8BAA+BwL,oBAAqB2tB,MALjE,OAOH,OAPG,SAOGG,aAAM,KAPT,OAQH,OARG,SAQGD,aAAI,CAAEr5B,KAAM,oCAAqCqL,0BAA2B,IAR/E,wC,iBCKU8M,IAAV,SAAUA,GAAV,qFAeC,OAfsBC,EAAvB,EAAuBA,QAASC,EAAhC,EAAgCA,MAC7BrM,EAAe,CACjButB,eAAkB58B,GAASqK,GAAMC,WAAWgF,gBAAgB3N,UAAU+5B,gBACtEC,cAAgB37B,GAASqK,GAAMC,WAAWgF,gBAAgB3N,UAAUg6B,cACpEzJ,wBAA0BlyB,GAASqK,GAAMC,WAAWgF,gBAAgB3N,UAAUuwB,wBAC9EC,OAASnyB,GAASqK,GAAMC,WAAWgF,gBAAgB3N,UAAUwwB,QAG3D0K,EAAe,CACjBhvB,OAAUxD,GAAMC,WAAWwoB,gBAAgBM,4BAGzC/iB,EAAehB,EAAa6iB,wBAA0B,IAAM2K,EAAahvB,OAASwB,EAAa8iB,OAZlG,kBAeOuK,aAAI,CAAEr5B,KAAM,yBAA0BgK,WAAY,IAfzD,OAgBsB,OAhBtB,SAgB4ByvB,aAAKV,GAAe,CAAC3gB,UAASC,UAhB1D,UAiB2C,UADpCqhB,EAhBP,QAiBkBjyB,KAAKC,QAAQC,QAjB/B,iBAkBK,OAlBL,UAkBWqxB,GAA0B,EAAGhtB,EAAautB,eAAgB,EAAG,WAlBxE,mCAmBkD,UAAtCG,EAAajyB,KAAKC,QAAQC,SAA6D,sBAAtC+xB,EAAajyB,KAAKC,QAAQE,QAnBvF,iBAoBK,OApBL,UAoBWoxB,GAA0B,EAAGhsB,EAAc,EAAG,SApBzD,gCAsBK,OAtBL,UAsBWgsB,GAA0B,EAAGhtB,EAAassB,cAAe,EAAG,SAtBvE,QAwBC,OAxBD,UAwBQe,aAAK7rB,aAAM,wBAxBnB,gCA0BC,OA1BD,oCA0BO6rB,aAAI7rB,aAAM,wBA1BjB,QA2BC,OA3BD,UA2BOwrB,GAA0B,EAAGhtB,EAAassB,cAAe,EAAG,SA3BnE,uDCPP,IA+BiB37B,GA/BA,CACbC,GAAI,CACFa,UAAW,aACX2X,OAAQ,wBACRukB,eAAgB,mBAChBC,kBAAmB,6BACnBC,mBAAoB,mPACpBC,UAAW,qJACXC,WAAY,oDACZC,SAAU,wCACVC,qBAAsB,0BACtB5b,cAAe,kBACf6b,6BAA8B,8BAC9BpL,OAAQ,YAEV5wB,GAAI,CACFT,UAAW,gEACX2X,OAAQ,4JACRukB,eAAgB,8FAChBC,kBAAmB,oLACnBC,mBAAoB,wwCACpBC,UAAW,8yBACXC,WAAY,iOACZC,SAAU,kMACVC,qBAAsB,4JACtB5b,cAAe,wHACf6b,6BAA8B,yLAC9BpL,OAAQ,qCCvBRnoB,GAAUxC,GAAQC,aAEX+1B,GAAuB,SAAC,GAAiF,IAAhFnyB,EAA+E,EAA/EA,SAAUwL,EAAqE,EAArEA,YAAaC,EAAwD,EAAxDA,aAAcC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,aAAcR,EAAe,EAAfA,UAC5FpM,EAAUwxB,KAChB,OAAOlxB,KAAMC,KAAKX,GAAU6xB,GAAKE,gBAAiB,CAAC1wB,WAAUwL,cAAaC,eAAcC,cAAaC,eAAcR,aAAY,CAACpM,a,aCAnHqzB,IAAV,SAAUA,GAAV,6FAeC,OAf2BpyB,EAA5B,EAA4BA,SAAUwL,EAAtC,EAAsCA,YAAaC,EAAnD,EAAmDA,aAAcC,EAAjE,EAAiEA,YAAaC,EAA9E,EAA8EA,aAAcR,EAA5F,EAA4FA,UACzFnH,EAAe,CACjB+tB,WAAcp9B,GAASqK,GAAMC,WAAWgF,gBAAgB3N,UAAUy7B,WAClEC,SAAUr9B,GAASqK,GAAMC,WAAWgF,gBAAgB3N,UAAU07B,SAC9DE,6BAA+Bv9B,GAASqK,GAAMC,WAAWgF,gBAAgB3N,UAAU47B,6BACnFpL,OAASnyB,GAASqK,GAAMC,WAAWgF,gBAAgB3N,UAAUwwB,QAG3D0K,EAAe,CACjBhvB,OAAUxD,GAAMC,WAAWguB,qBAAqBoF,iCAG9CrtB,EAAehB,EAAakuB,6BAA+B,IAAMV,EAAahvB,OAASwB,EAAa8iB,OAZvG,kBAeOuK,aAAI,CAAEr5B,KAAM,yBAA0BgK,WAAY,IAfzD,OAgBsB,OAhBtB,SAgB4ByvB,aAAKU,GAAsB,CAACnyB,WAAUwL,cAAaC,eAAcC,cAAaC,eAAcR,cAhBxH,UAiB2C,UADpCumB,EAhBP,QAiBkBjyB,KAAKC,QAAQC,QAjB/B,iBAkBK,OAlBL,UAkBY0xB,aAAK7rB,aAAM,4BAlBvB,QAmBK,OAnBL,UAmBWwrB,GAA0B,EAAGhtB,EAAa+tB,WAAY,EAAG,WAnBpE,mCAoBkD,UAAtCL,EAAajyB,KAAKC,QAAQC,SAA6D,sBAAtC+xB,EAAajyB,KAAKC,QAAQE,QApBvF,iBAqBK,OArBL,UAqBYyxB,aAAK7rB,aAAM,4BArBvB,QAsBK,OAtBL,UAsBWwrB,GAA0B,EAAGhsB,EAAc,EAAG,SAtBzD,gCAwBK,OAxBL,UAwBYqsB,aAAK7rB,aAAM,4BAxBvB,QAyBK,OAzBL,UAyBWwrB,GAA0B,EAAGhtB,EAAaguB,SAAU,EAAG,SAzBlE,gCA4BC,OA5BD,oCA4BOhB,GAA0B,EAAGhtB,EAAaguB,SAAU,EAAG,SA5B9D,uDCJP,IAAMrzB,GAAUxC,GAAQC,aAEXk2B,GAAmB,SAAC,GAAoB,IAAnB7jB,EAAkB,EAAlBA,aACxB1P,EAAUwxB,KAChB,OAAOlxB,KAAMC,KAAKX,GAAU6xB,GAAKG,kBAAmB,CAChDzkB,cAAeuC,EAAavC,cAC5Bkf,UAAW3c,EAAa2c,UACxBprB,SAAUyO,EAAazO,SACvBY,WAAY6N,EAAa7N,WACzBmL,WAAY0C,EAAa1C,WACzBC,WAAYyC,EAAazC,WACzBC,WAAYwC,EAAaxC,WACzBuf,aAAc/c,EAAa+c,aAC3BC,aAAchd,EAAagd,aAC3BC,aAAcjd,EAAaid,aAC3BvgB,UAAWsD,EAAatD,WACzB,CAACpM,aAGKwzB,GAAiC,SAAC,GAAoC,IAAnC3kB,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,cACrD9O,EAAUwxB,KAChB,OAAOlxB,KAAMiH,IAAI3H,GAAU,mBAAqBiP,EAAgB,IAAMC,EAAe,CAAC9O,QAASA,K,aCnBlFyzB,IAAV,SAAUA,GAAV,uFAMC,OAN4B/jB,EAA7B,EAA6BA,aAC5Bb,EAAgB5O,GAAMC,WAAW0O,iBAAiBzM,iBAChD2M,EAAgB7O,GAAMC,WAAW0O,iBAAiBE,cAClD7P,EAAegB,GAAMC,WAAW0O,iBAAiB/P,qBACjDK,EAAoBe,GAAMC,WAAW0O,iBAAiB1P,kBAJzD,kBAMOozB,aAAI,CAAEr5B,KAAM,yBAA0BgK,WAAY,IANzD,OAOsB,OAPtB,UAO4ByvB,aAAKa,GAAkB,CAAC7jB,iBAPpD,WAQ2C,SAR3C,OAQkBhP,KAAKC,QAAQC,QAR/B,iBAS6B,OAT7B,UASmC8xB,aAAKc,GAAgC,CAAC3kB,gBAAeC,kBATxF,WAUkD,UADvC4kB,EATX,QAUyBhzB,KAAKC,QAAQC,QAVtC,iBAWS,OAXT,UAWe0xB,aAAI,CAAEr5B,KAAM,qDAAuDwK,OAAQiwB,EAAgBhzB,KAAKC,QAAQqO,UAAUrP,SAXjI,QAYS,OAZT,UAYe2yB,aAAI,CAAEr5B,KAAM,+EAAgFuC,GAAI0U,SAASR,EAAa7N,cAZrI,QAaS,OAbT,UAaeywB,aAAI,CAAEr5B,KAAM,2CAA6C+V,UAAW0kB,EAAgBhzB,KAAKC,QAAQqO,YAbhH,QAeS,OADIE,EAAqB9R,GAAQ2B,uBAAuB20B,EAAgBhzB,KAAKC,QAAQqO,UAAW/P,EAAcC,GAdvH,UAeeozB,aAAI,CAAEr5B,KAAM,0BAA2BwR,QAASyE,IAf/D,YAgBYQ,EAAaK,iBAhBzB,iBAgB4C,OAhB5C,UAgBkDuiB,aAAI,CAAEr5B,KAAM,8CAA+CqX,EAAG,IAhBhH,QAiBS,OAjBT,UAiBegiB,aAAI,CAAEr5B,KAAM,yBAA0BgK,WAAY,IAjBjE,QAkBS,OAlBT,UAkBeovB,aAAI,CACNC,aAAI,CAAEr5B,KAAM,+BAAgC0P,oBAAqB,YACjE2pB,aAAI,CAAEr5B,KAAM,gCAAiC8P,uBAAwB,MApBlF,QAsBS,OAtBT,UAsBewpB,aAAM,KAtBrB,QAuBS,OAvBT,UAuBeD,aAAI,CAAEr5B,KAAM,gCAAiC8P,uBAAwB,IAvBpF,gCAyBS,OAzBT,UAyBeupB,aAAI,CAAEr5B,KAAM,yBAA0BgK,WAAY,IAzBjE,QA0BS,OA1BT,UA0BeovB,aAAI,CACNC,aAAI,CAAEr5B,KAAM,+BAAgC0P,oBAAqB,UACjE2pB,aAAI,CAAEr5B,KAAM,gCAAiC8P,uBAAwB,MA5BlF,QA8BS,OA9BT,UA8BewpB,aAAM,KA9BrB,QA+BS,OA/BT,UA+BeD,aAAI,CAAEr5B,KAAM,gCAAiC8P,uBAAwB,IA/BpF,gCAkCK,OAlCL,UAkCWupB,aAAI,CAAEr5B,KAAM,yBAA0BgK,WAAY,IAlC7D,QAmCK,OAnCL,UAmCWovB,aAAI,CACNC,aAAI,CAAEr5B,KAAM,+BAAgC0P,oBAAqB,UACjE2pB,aAAI,CAAEr5B,KAAM,gCAAiC8P,uBAAwB,MArC9E,QAuCK,OAvCL,UAuCWwpB,aAAM,KAvCjB,QAwCK,OAxCL,UAwCWD,aAAI,CAAEr5B,KAAM,gCAAiC8P,uBAAwB,IAxChF,gCA2CC,OA3CD,oCA2COupB,aAAI,CAAEr5B,KAAM,yBAA0BgK,WAAY,IA3CzD,QA4CC,OA5CD,UA4COovB,aAAI,CACNC,aAAI,CAAEr5B,KAAM,+BAAgC0P,oBAAqB,UACjE2pB,aAAI,CAAEr5B,KAAM,gCAAiC8P,uBAAwB,MA9C1E,QAgDC,OAhDD,UAgDOwpB,aAAM,KAhDb,QAiDC,OAjDD,UAiDOD,aAAI,CAAEr5B,KAAM,gCAAiC8P,uBAAwB,IAjD5E,uDCHP,IAAMnJ,GAAUxC,GAAQC,aAEXs2B,GAAoB,WAC7B,OAAOrzB,KAAMiH,IAAI3H,GAAU6xB,GAAKI,iB,aCHnBA,IAAV,SAAUA,KAAV,wEAEsB,OAFtB,kBAE4Ba,aAAKiB,IAFjC,UAG2C,UADpChB,EAFP,QAGkBjyB,KAAKC,QAAQC,QAH/B,gBAIK,OAJL,SAIW0xB,aAAI,CAAEr5B,KAAM,mBACd26B,2BAA4BjB,EAAajyB,KAAKC,QAAQizB,2BACtDC,wBAAyBlB,EAAajyB,KAAKC,QAAQkzB,wBACnDC,2BAA4BnB,EAAajyB,KAAKC,QAAQmzB,2BACtDC,mCAAoCpB,EAAajyB,KAAKC,QAAQozB,mCAC9DC,+BAAgCrB,EAAajyB,KAAKC,QAAQqzB,+BAC1DC,iCAAkCtB,EAAajyB,KAAKC,QAAQszB,mCAVrE,8BAaKxsB,MAAM,8BAbX,0DAgBCqlB,QAAQC,IAAR,MAhBD,uDCHP,IAeiBn3B,GAfA,CACbC,GAAI,CACAy7B,gBAAiB,qCACjBC,cAAe,4BACfzJ,wBAAyB,4BACzBC,OAAQ,YAEZ5wB,GAAI,CACAm6B,gBAAiB,yIACjBC,cAAe,4JACfzJ,wBAAyB,uKACzBC,OAAQ,qCCPVnoB,GAAUxC,GAAQC,aAEX62B,GAAoB,SAAC,GAAkB,IAAjBryB,EAAgB,EAAhBA,WACzB7B,EAAUwxB,KAChB,OAAOlxB,KAAMC,KAAKX,GAAU6xB,GAAKK,kBAAmB,CAACjwB,cAAa,CAAC7B,a,aCDtDm0B,IAAV,SAAUA,GAAV,qFAeC,OAfyBtyB,EAA1B,EAA0BA,WAAYyF,EAAtC,EAAsCA,OACnCrC,EAAe,CACjButB,eAAkB58B,GAASqK,GAAMC,WAAWgF,gBAAgB3N,UAAU+5B,gBACtEC,cAAgB37B,GAASqK,GAAMC,WAAWgF,gBAAgB3N,UAAUg6B,cACpEzJ,wBAA0BlyB,GAASqK,GAAMC,WAAWgF,gBAAgB3N,UAAUuwB,wBAC9EC,OAASnyB,GAASqK,GAAMC,WAAWgF,gBAAgB3N,UAAUwwB,QAG3D0K,EAAe,CACjBhvB,OAAUxD,GAAMC,WAAWwoB,gBAAgBuL,kCAGzChuB,EAAehB,EAAa6iB,wBAA0B,IAAM2K,EAAahvB,OAASwB,EAAa8iB,OAZlG,kBAeOuK,aAAI,CAAEr5B,KAAM,yBAA0BgK,WAAY,IAfzD,OAgBsB,OAhBtB,SAgB4ByvB,aAAKwB,GAAmB,CAACryB,aAAYyF,WAhBjE,UAiB2C,UADpCqrB,EAhBP,QAiBkBjyB,KAAKC,QAAQC,QAjB/B,iBAkBK,OAlBL,UAkBWqxB,GAA0B,EAAGhtB,EAAautB,eAAgB,EAAG,WAlBxE,mCAmBkD,UAAtCG,EAAajyB,KAAKC,QAAQC,SAA6D,sBAAtC+xB,EAAajyB,KAAKC,QAAQE,QAnBvF,iBAoBK,OApBL,UAoBWoxB,GAA0B,EAAGhsB,EAAc,EAAG,SApBzD,gCAsBK,OAtBL,UAsBWgsB,GAA0B,EAAGhtB,EAAassB,cAAe,EAAG,SAtBvE,gCAyBC,OAzBD,oCAyBOU,GAA0B,EAAGhtB,EAAassB,cAAe,EAAG,SAzBnE,uDCHP,IAAM3xB,GAAUxC,GAAQC,aAEX+2B,GAA0B,SAAC,GAA6B,IAA5BxiB,EAA2B,EAA3BA,sBAC/B5R,EAAUwxB,KAChB,OAAOlxB,KAAMiH,IAAI3H,GAAU6xB,GAAKM,oBAAsB,IAAMngB,EAAuB,CAAC5R,a,aCAvEq0B,IAAV,SAAUA,GAAV,+EAOC,OAP+BziB,EAAhC,EAAgCA,sBAC7B3M,EAAe,CACjButB,eAAkB58B,GAASqK,GAAMC,WAAWgF,gBAAgB3N,UAAUi5B,cACtEe,cAAgB37B,GAASqK,GAAMC,WAAWgF,gBAAgB3N,UAAUk5B,aAHrE,kBAOO6B,aAAI,CAAEr5B,KAAM,yBAA0BgK,WAAY,IAPzD,OAQsB,OARtB,SAQ4ByvB,aAAK0B,GAAyB,CAACxiB,0BAR3D,UAS2C,UADpC+gB,EARP,QASkBjyB,KAAKC,QAAQC,QAT/B,iBAUK,OAVL,UAUWqxB,GAA0B,EAAGhtB,EAAautB,eAAgB,EAAG,WAVxE,QAWK,OAXL,UAWWF,aAAI,CAAEr5B,KAAM,qCAAsC+V,UAAW2jB,EAAajyB,KAAKC,QAAQqO,YAXlG,QAYK,OAZL,UAYWsjB,aAAI,CAAEr5B,KAAM,yBAA0BgK,WAAY,IAZ7D,gCAcK,OAdL,UAcWgvB,GAA0B,EAAGhtB,EAAassB,cAAe,EAAG,SAdvE,QAeK,OAfL,UAeWe,aAAI,CAAEr5B,KAAM,yBAA0BgK,WAAY,IAf7D,gCAkBC,OAlBD,oCAkBOgvB,GAA0B,EAAGhtB,EAAassB,cAAe,EAAG,SAlBnE,QAmBC,OAnBD,UAmBOe,aAAI,CAAEr5B,KAAM,yBAA0BgK,WAAY,IAnBzD,uD,iBCHUqxB,IAAV,SAAUA,GAAV,2EAEC,OAFkC5kB,EAAnC,EAAmCA,aAAnC,kBAEO4iB,aAAI,CAAEr5B,KAAM,yBAA0BgK,WAAY,IAFzD,OAGsB,OAHtB,SAG4ByvB,aAAKa,GAAkB,CAAC7jB,iBAHpD,UAI2C,SAJ3C,OAIkBhP,KAAKC,QAAQC,QAJ/B,qBAKQ8O,EAAamd,yBALrB,iBAKgD,OALhD,UAKsDyF,aAAI,CAAEr5B,KAAM,8CAA+CqX,EAAG,IALpH,QAMK,OANL,UAMWgiB,aAAI,CAAEr5B,KAAM,yBAA0BgK,WAAY,IAN7D,QAOK,OAPL,UAOWovB,aAAI,CACNC,aAAI,CAAEr5B,KAAM,+BAAgC0P,oBAAqB,YACjE2pB,aAAI,CAAEr5B,KAAM,gCAAiC8P,uBAAwB,MAT9E,QAWK,OAXL,UAWWwpB,aAAM,KAXjB,QAYK,OAZL,UAYWD,aAAI,CAAEr5B,KAAM,gCAAiC8P,uBAAwB,IAZhF,gCAcK,OAdL,UAcWupB,aAAI,CAAEr5B,KAAM,yBAA0BgK,WAAY,IAd7D,QAeK,OAfL,UAeWovB,aAAI,CACNC,aAAI,CAAEr5B,KAAM,+BAAgC0P,oBAAqB,UACjE2pB,aAAI,CAAEr5B,KAAM,gCAAiC8P,uBAAwB,MAjB9E,QAmBK,OAnBL,UAmBWwpB,aAAM,KAnBjB,QAoBK,OApBL,UAoBWD,aAAI,CAAEr5B,KAAM,gCAAiC8P,uBAAwB,IApBhF,gCAuBC,OAvBD,oCAuBOupB,aAAI,CAAEr5B,KAAM,yBAA0BgK,WAAY,IAvBzD,QAwBC,OAxBD,UAwBOovB,aAAI,CACNC,aAAI,CAAEr5B,KAAM,+BAAgC0P,oBAAqB,UACjE2pB,aAAI,CAAEr5B,KAAM,gCAAiC8P,uBAAwB,MA1B1E,QA4BC,OA5BD,UA4BOwpB,aAAM,KA5Bb,QA6BC,OA7BD,UA6BOD,aAAI,CAAEr5B,KAAM,gCAAiC8P,uBAAwB,IA7B5E,uD,iBCIGwrB,I,aAIAC,I,aAIAC,I,aAIAC,I,aAIAC,I,aAIAC,I,aAIAC,I,aAIeC,IA5BzB,SAAUP,KAAV,kEACI,OADJ,SACUQ,aAAW,eAAgB3jB,IADrC,wCAIA,SAAUojB,KAAV,kEACI,OADJ,SACUO,aAAW,yBAA0B1B,IAD/C,wCAIA,SAAUoB,KAAV,kEACI,OADJ,SACUM,aAAW,wBAAyBtB,IAD9C,wCAIA,SAAUiB,KAAV,kEACI,OADJ,SACUK,aAAW,cAAeZ,IADpC,wCAIA,SAAUQ,KAAV,kEACI,OADJ,SACUI,aAAW,4BAA6BlD,IADlD,wCAIA,SAAU+C,KAAV,kEACI,OADJ,SACUG,aAAW,6BAA8BV,IADnD,wCAIA,SAAUQ,KAAV,kEACI,OADJ,SACUE,aAAW,+BAAgCT,IADrD,wCAIe,SAAUQ,KAAV,kEACX,OADW,SACLzC,aAAI,CACNkC,KACAC,KACAC,KACAE,KACAD,KACAE,KACAC,OARO,wC,cCjCXG,GAAU,CACV7yB,iBAAkB,GAClBrC,mBAAoB,GACpB+Y,mBAAoB,GACpBvV,gBAAiB,GACjBqW,kBAAmB,GACnBpW,QAAS,GACTuW,0BAA2B,EAC3BE,yBAA0B,EAC1BvY,kBAAmB,EACnBE,gBAAiB,GACjBZ,mBAAoB,IACpBkZ,sBAAuB,EACvBgb,uBAAwB,IACxBlL,0BAA0B,GAkGfjpB,GA/FK,WAA4B,IAA3BlI,EAA0B,uDAApBo8B,GAAWE,EAAS,uCAC3C,OAAQA,EAAOj8B,MACf,IhIbkC,yBgIc9B,OAAO,2BACAL,GADP,IAEIuJ,iBAAkB+yB,EAAO15B,KAGjC,IhIjBoC,2BgIkBhC,OAAO,2BACA5C,GADP,IAEIigB,mBAAoBqc,EAAO/xB,OAGnC,IhI6CkC,yBgI5C9B,OAAO,2BACAvK,GADP,IAEImxB,yBAA0BmL,EAAOjyB,aAGzC,IAAK,kCACD,OAAO,2BACArK,GADP,IAEI6I,kBAAmB,EACnB6B,gBAAiB,KAGzB,IhIb4C,mCgIcxC,OAAO,2BACA1K,GADP,IAEIqhB,sBAAuBib,EAAOjyB,aAGtC,IhI3CoC,2BgI4ChC,OAAO,2BACArK,GADP,IAEIkH,mBAAoBo1B,EAAOp1B,qBAGnC,IhI/CgC,uBgIgD5B,OAAO,2BACAlH,GADP,IAEI0K,gBAAiB4xB,EAAO5xB,kBAGhC,IhIpDuB,cgIqDnB,OAAO,2BACA1K,GADP,IAEI2K,QAAS2xB,EAAO3xB,UAGxB,IhIzDkC,yBgI0D9B,OAAO,2BACA3K,GADP,IAEIkhB,0BAA2Bob,EAAOzxB,SAG1C,IhI9DiC,wBgI+D7B,OAAO,2BACA7K,GADP,IAEIohB,yBAA0Bkb,EAAOzxB,SAGzC,IhInEmC,0BgIoE/B,OAAO,2BACA7K,GADP,IAEI6I,kBAAmByzB,EAAOzxB,SAGlC,IhIxDiC,wBgIyD7B,OAAO,2BACA7K,GADP,IAEI+I,gBAAiBuzB,EAAO15B,KAGhC,IhI5DqC,4BgI6DjC,OAAO,2BACA5C,GADP,IAEImI,mBAAoBm0B,EAAO1xB,uBAInC,IhItBmC,0BgIuB/B,OAAO,2BACA5K,GADP,IAEI+gB,kBAAmBub,EAAO15B,KAGlC,QACI,OAAO,eACA5C,KC7GXu8B,GAAW,CACX9+B,MAAO,IA0BIqoB,GAvBM,WAA6B,IAA5B9lB,EAA2B,uDAArBu8B,GAAYD,EAAS,uCAC7C,OAAQA,EAAOj8B,MAEf,IjISqB,YiIRjB,kCACOL,GADP,IAEIvC,MAAO6+B,EAAO7+B,QAGtB,IjIWgC,uBiIV5B,kCACOuC,GADP,IAEIvC,MAAO,KAIf,QACI,OAAO,eACAuC,KCrBXw8B,GAAa,CACb3qB,QAAS,GACTQ,gBAAiB,GACjBZ,4BAA6B,GAC7BxL,qBAAsB,GACtBC,8BAA+B,EAC/BykB,gCAAiC,EACjC7Y,2BAA4B,KAgEjBH,GA7DQ,WAA+B,IAA9B3R,EAA6B,uDAAvBw8B,GAAcF,EAAS,uCACjD,OAAQA,EAAOj8B,MAEf,IlIRwB,ekISpB,OAAO,2BACAL,GADP,IAEI6R,QAASyqB,EAAOzqB,UAIxB,IlIGgC,uBkIF5B,OAAO,2BACA7R,GADP,IAEI6R,QAAS,GACTQ,gBAAiB,GACjBZ,4BAA6B,KAGrC,IlIH8C,qCkII1C,OAAO,2BACAzR,GADP,IAEIyR,4BAA6B6qB,EAAO7qB,8BAG5C,IlIRgC,uBkIS5B,OAAO,2BACAzR,GADP,IAEIqS,gBAAiBiqB,EAAOjqB,kBAGhC,IlIbyC,gCkIcrC,OAAO,2BACArS,GADP,IAEIiG,qBAAsBq2B,EAAOl2B,QAGrC,IlIlBoD,2CkImBhD,OAAO,2BACApG,GADP,IAEI2qB,gCAAiC2R,EAAOnqB,qBAGhD,IlIvBiD,wCkIwB7C,OAAO,2BACAnS,GADP,IAEIkG,8BAA+Bo2B,EAAOh2B,oBAG9C,IlI5B6C,oCkI6BzC,OAAO,2BACAtG,GADP,IAEI8R,2BAA4BwqB,EAAOh3B,gBAG3C,QACI,OAAO,eACAtF,KClEXy8B,GAAc,CACd99B,SAAU,KACV6vB,wBAAyB,EACzBE,qBAAsB,GACtBD,kBAAmB,UACnB5e,qBAAsB,IACtBid,sBAAuB,EACvBlf,oBAAqB,EACrB0F,wBAAyB,EACzB6Y,sBAAuB,EACvBzgB,0BAA2B,EAC3BslB,yBAA0B,GAC1BF,qBAAsB,GACtBF,wBAAyB,KAsFdtkB,GAnFS,WAAgC,IAA/BtM,EAA8B,uDAAxBy8B,GAAeH,EAAS,uCACnD,OAAQA,EAAOj8B,MAEf,InIgBwB,emIfpB,kCACOL,GADP,IAEIrB,SAAU29B,EAAOzpB,OAGzB,InIWyC,gCmIVrC,kCACO7S,GADP,IAEIwuB,wBAAyB8N,EAAOnsB,yBAGxC,InIS6C,oCmIRzC,kCACOnQ,GADP,IAEI0L,0BAA2B4wB,EAAO5wB,4BAG1C,InII0C,iCmIHtC,kCACO1L,GADP,IAEIgxB,yBAA0BsL,EAAO3wB,yBAGzC,InIDuC,8BmIEnC,kCACO3L,GADP,IAEI8wB,qBAAsBwL,EAAOzwB,sBAGrC,InIZsC,4BmIkBtC,IAAK,+BACD,kCACO7L,GADP,IAEI0uB,qBAAsB4N,EAAOvsB,sBAGrC,InIvBmC,0BmIwB/B,kCACO/P,GADP,IAEIyuB,kBAAmB6N,EAAOrsB,mBAGlC,InI5B+B,sBmI6B3B,kCACOjQ,GADP,IAEI8sB,sBAAuBwP,EAAOz+B,SAAS6+B,kBACvC9uB,oBAAqB0uB,EAAOz+B,SAAS8+B,kBAG7C,InI3ByC,gCmI4BrC,kCACO38B,GADP,IAEIsT,wBAAyBgpB,EAAOhpB,0BAGxC,InIhCuC,8BmIiCnC,kCACOtT,GADP,IAEImsB,sBAAuBmQ,EAAOptB,oBAGtC,InI/DgC,uBmIgE5B,kCACOlP,GADP,IAEImsB,sBAAuB,IAG/B,QACI,OAAO,eACAnsB,KCjGX48B,GAAc,CACdC,wBAAyB,EACzBzM,2BAA4B,EAC5BgL,+BAAgC,EAChCC,iCAAkC,GAiBrBvL,GAdO,WAAkC,IAAjC9vB,EAAgC,uDAA1B48B,GAAeN,EAAW,uCACrD,OAAQA,EAAOj8B,MACZ,IAAK,mBACF,OAAO,2BAAKL,GAAZ,IACE68B,wBAAyBP,EAAOrB,wBAChC7K,2BAA4BkM,EAAOtB,2BACnCI,+BAAgCkB,EAAOlB,+BACvCC,iCAAkCiB,EAAOjB,mCAE9C,QACG,OAAOr7B,ICfb88B,GAAc,CACdrR,cAAe,GACfja,aAAc,IA+BHmJ,GA5BS,WAAgC,IAA/B3a,EAA8B,uDAAxB88B,GAAeR,EAAS,uCACnD,OAAQA,EAAOj8B,MAEf,IrIP+B,sBqIQ3B,kCACOL,GADP,IAEIyrB,cAAe6Q,EAAO5+B,WAG9B,IrIZ8B,qBqIa1B,kCACOsC,GADP,IAEIwR,aAAc8qB,EAAO9qB,eAG7B,IrIIgC,uBqIH5B,OAAO,2BACAxR,GADP,IAEI+8B,UAAW,KAGnB,QACI,OAAO,eACA/8B,KCzBXg9B,GAAe,CACf5mB,UAAW,GACXwgB,mBAAoB,GACpBD,2BAA4B,EAC5BptB,iBAAkB,GAClB0W,mBAAoB,GACpBha,qBAAsB,GACtBK,kBAAmB,EACnB4P,cAAe,IACf6K,kBAAmB,GACnBpW,QAAS,GACTyM,sBAAuB,GACvB8b,uCAAwC,EACxC2D,6BAA8B,GAC9B4B,qBAAsB,GACtBwE,mBAAoB,IAwGTjnB,GArGU,WAAiC,IAAhChW,EAA+B,uDAAzBg9B,GAAgBV,EAAS,uCACrD,OAAQA,EAAOj8B,MAEf,ItIwCkD,yCsIvC9C,kCACOL,GADP,IAEIuJ,iBAAkB+yB,EAAO15B,KAGjC,ItIFyC,gCsIGrC,OAAO,2BACA5C,GADP,IAEIiG,qBAAsBq2B,EAAOl2B,QAGrC,ItIuCwF,+EsItCpF,OAAO,2BACApG,GADP,IAEI62B,6BAA6B,GAAD,oBAAM72B,EAAM62B,8BAAZ,CAA0CyF,EAAO15B,OAGrF,ItI4BwC,+BsI3BpC,OAAO,2BACA5C,GADP,IAEIkW,cAAeomB,EAAOzmB,SAG9B,ItI4BuC,8BsI3BnC,OAAO,2BACA7V,GADP,IAEI62B,6BAA8B,KAGtC,ItIoBuD,8CsInBnD,OAAO,2BACA72B,GADP,IAEIkzB,uCAAwCoJ,EAAO5kB,IAGvD,ItIasD,6CsIZlD,OAAO,2BACA1X,GADP,IAEIigB,mBAAoBqc,EAAO/xB,OAGnC,ItIKuC,8BsIJnC,OAAO,2BACAvK,GADP,IAEI2K,QAAS2xB,EAAO3xB,UAGxB,ItI7CgC,uBsI8C5B,OAAO,2BACA3K,GADP,IAEIqS,gBAAiBiqB,EAAOjqB,kBAGhC,ItINwC,+BsIOpC,OAAO,2BACArS,GADP,IAEIoX,sBAAuBklB,EAAOp3B,UAGtC,ItIlBoD,2CsImBhD,OAAO,2BACAlF,GADP,IAEIoW,UAAWkmB,EAAOlmB,YAG1B,ItIrBmC,0BsIsB/B,OAAO,2BACApW,GADP,IAEI42B,mBAAoB0F,EAAOzqB,UAGnC,ItI7B8D,qDsI8B1D,OAAO,2BACA7R,GADP,IAEI22B,2BAA4B2F,EAAOzxB,SAG3C,ItIlCuD,8CsImCnD,OAAO,2BACA7K,GADP,IAEIsG,kBAAmBg2B,EAAOzxB,SAGlC,IAAK,qCACD,OAAO,2BACA7K,GADP,IAEIy4B,qBAAsB6D,EAAOlmB,YAIrC,QACI,OAAO,eACApW,KCpHXk9B,GAAiB,CACjB/tB,WAAY,GACZC,qBAAsB,SAStB7P,SAAU,GACV8D,OAAQ,EACRmE,QAAS,GACTkH,OAAQ,GAERlB,kBAAmB,GACnBd,iBAAkB,GAClBkgB,0CAA2C,GAsEhCrlB,GAnEY,WAAmC,IAAlCvH,EAAiC,uDAA3Bk9B,GAAkBZ,EAAS,uCACzD,OAAQA,EAAOj8B,MACf,IvIzBuB,cuI0BnB,kCACOL,GADP,IAEImP,WAAYmtB,EAAOntB,WACnBC,qBAAsBktB,EAAOltB,uBAGrC,IvIbyB,gBuIcrB,kCACOpP,GADP,IAEIT,SAAU+8B,EAAO/8B,WAGzB,IvIjByB,gBuIkBrB,kCACOS,GADP,IAEIwH,QAAS80B,EAAO90B,UAGxB,IvIxBuB,cuIyBnB,kCACOxH,GADP,IAEIqD,OAAQi5B,EAAOj5B,SAGvB,IvI5BuB,cuI6BnB,kCACOrD,GADP,IAEI0O,OAAQ4tB,EAAO5tB,SAGvB,IvIVmC,0BuIW/B,kCACO1O,GADP,IAEIwN,kBAAmB8uB,EAAOvtB,gBAGlC,IvIrCgC,uBuIsC5B,kCACO/O,GADP,IAEIT,SAAU,GACViI,QAAS,GACTkH,OAAQ,GACRrL,OAAQ,IAGhB,IvInBiC,wBuIoB7B,kCACOrD,GADP,IAEI0M,iBAAkB4vB,EAAO5vB,mBAGjC,IvIvBwD,+CuIwBpD,kCACO1M,GADP,IAEI4sB,0CAA2C0P,EAAOrtB,uCAG1D,QACI,OAAO,eACAjP,KC/BA4iB,gBAAU,CACvB3W,KAAM,0BACN4W,SAlDe,SAAA1W,GACb,IAAM2W,EAAS,GAMf,OALK3W,EAAO9D,SAAqD8D,EAAO9D,SAAStB,OAAS,MAAQ+b,EAAOza,SAAW,mCAA5Fya,EAAOza,SAAW,WACrC8D,EAAO0H,YAA4D1H,EAAO0H,YAAY9M,OAAS,MAAQ+b,EAAOjP,YAAc,mCAArGiP,EAAOjP,YAAc,WAC5C1H,EAAO2H,aAA8D3H,EAAO2H,aAAa/M,OAAS,MAAQ+b,EAAOhP,aAAe,mCAAxGgP,EAAOhP,aAAe,WAC9C3H,EAAO4H,YAA0D5H,EAAO4H,YAAYhN,OAAS,MAAQ+b,EAAO/O,YAAc,mCAApG+O,EAAO/O,YAAc,WAC3C5H,EAAO6H,aAA6D7H,EAAO6H,aAAajN,OAAS,MAAQ+b,EAAO9O,aAAe,mCAAxG8O,EAAO9O,aAAe,WAC3C8O,IAyCIF,EAtCa,SAAAlkB,GAAU,IAC5BqkB,EAAiFrkB,EAAjFqkB,aAAcC,EAAmEtkB,EAAnEskB,SAAUnV,EAAyDnP,EAAzDmP,MAAOoV,EAAkDvkB,EAAlDukB,WAAYtkB,EAAsCD,EAAtCC,SAAUwkB,EAA4BzkB,EAA5BykB,MAAOga,EAAqBz+B,EAArBy+B,iBAC9D9wB,EAAe,CACnBwH,YAA2B,OAAblV,EAAoB3B,GAASC,GAAG4W,YAAc7W,GAASuB,GAAGsV,YACxEC,aAA4B,OAAbnV,EAAoB3B,GAASC,GAAG6W,aAAe9W,GAASuB,GAAGuV,aAC1EC,YAA2B,OAAbpV,EAAoB3B,GAASC,GAAG8W,YAAc/W,GAASuB,GAAGwV,YACxEC,aAA4B,OAAbrV,EAAoB3B,GAASC,GAAG+W,aAAehX,GAASuB,GAAGyV,aAC1E3L,SAAuB,OAAb1J,EAAoB3B,GAASC,GAAGoL,SAAWrL,GAASuB,GAAG8J,SACjEoZ,YAA0B,OAAb9iB,EAAoB3B,GAASC,GAAGwkB,YAAczkB,GAASuB,GAAGkjB,aAEzE,OACE,kBAAC,IAAD,CAAc3gB,OAAQnC,EAAU3B,SAAUA,GAAS2B,IACjD,0BAAM0kB,SAAUN,GACZ,6BADJ,IACU,6BACR,6BACI,2BAAO9jB,MAAO,CAACoC,MAAO,QAASrC,UAAU,oBACrC,+BACE,4BAAI,4BAAI,kBAACskB,GAAA,EAAD,CAAQ/Y,KAAK,WAAWuU,UAAWsQ,GAAsBJ,MAAO,IAAM/M,MAAO5V,EAAahE,SAAU1J,SAAUA,MACtH,4BAAI,4BAAI,+BACR,4BAAI,4BAAI,kBAAC2kB,GAAA,EAAD,CAAQ/Y,KAAK,cAAcuU,UAAWsQ,GAAsBJ,MAAO,IAAM/M,MAAO5V,EAAawH,YAAalV,SAAUA,MAC5H,4BAAI,4BAAI,kBAAC2kB,GAAA,EAAD,CAAQ/Y,KAAK,eAAeuU,UAAWsQ,GAAsBJ,MAAO,IAAM/M,MAAO5V,EAAayH,aAAcnV,SAAUA,MAC9H,4BAAI,4BAAI,kBAAC2kB,GAAA,EAAD,CAAQ/Y,KAAK,cAAcuU,UAAWsQ,GAAsBJ,MAAO,IAAM/M,MAAO5V,EAAa0H,YAAapV,SAAUA,MAC5H,4BAAI,4BAAI,kBAAC2kB,GAAA,EAAD,CAAQ/Y,KAAK,eAAeuU,UAAWsQ,GAAsBJ,MAAO,IAAM/M,MAAO5V,EAAa2H,aAAcrV,SAAUA,SAKxI,6BAAK,6BACL,6BACE,kBAAC8b,GAAA,EAAD,CAAQpa,KAAK,SAASgC,QAAQ,YAAYohB,SAAUT,GAAYC,IAAeE,GAAO,kBAAC,IAAD,CAAkBvgB,GAAG,kBAD7G,eAEE,kBAAC6X,GAAA,EAAD,CAAQpY,QAAQ,YAAYL,MAAM,QAAQyhB,SAAUT,GAAYC,EAAYpkB,QAASgP,GAAO,kBAAC,IAAD,CAAkBjL,GAAG,iBAFnH,eAGE,kBAAC6X,GAAA,EAAD,CAAQpY,QAAQ,YAAYxD,QAASs+B,GAAkB,kBAAC,IAAD,CAAkBv6B,GAAG,mCCrChFw6B,G,kDAEJ,WAAY1+B,GAAQ,IAAD,8BACjB,cAAMA,IAaRohB,iBAAmB,SAAC1f,GAClB,IAAM2f,EAAW,EAAKrhB,MAAM8S,aAAahM,QAAO,SAAAqE,GAAK,OAAIA,EAAMjH,KAAOxC,EAAM4f,OAAOnW,SACnF,EAAK5J,SAAS,CACZsJ,iBAAkBnJ,EAAM4f,OAAOnW,MAC/BoW,mBAAoBF,IAEtB,EAAKrhB,MAAM6U,gCAAgCnT,EAAM4f,OAAOnW,OACrDkW,EAAS,GACV,EAAKrhB,MAAMgV,kCAAkCqM,EAAS,GAAGxV,MAEzD,EAAK7L,MAAMgV,kCAAkC,KAxB9B,EA4BnB8L,oBAAsB,SAAC5c,EAAI2H,GACzB,EAAKtK,SAAS,CACZsJ,iBAAkB3G,EAClBqd,mBAAoB1V,IAEtB,EAAK7L,MAAM6U,gCAAgC3Q,GACtC2H,EACH,EAAK7L,MAAMgV,kCAAkCnJ,GAE7C,EAAK7L,MAAMgV,kCAAkC,KArC9B,EAyCnB9U,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IA1CN,EA6CnBwqB,+BAAiC,WAC/B,EAAK3+B,MAAMyb,QAAQC,KAAK,0BA5CxB,EAAKR,MAAQja,IAAMka,YACnB,EAAK7Z,MAAQ,CACTuJ,iBAAkB,GAClB0W,mBAAoB,IALP,E,gEAUjBnhB,KAAKJ,MAAM6U,gCAAgC,IAC3CzU,KAAKJ,MAAM6S,sB,+BAuCH,IAAD,SACoEzS,KAAKJ,MAAxE2J,EADD,EACCA,SAAUwL,EADX,EACWA,YAAaC,EADxB,EACwBA,aAAcC,EADtC,EACsCA,YAAaC,EADnD,EACmDA,aAC1D,OACE,kBAAC,IAAD,CAAclT,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACvE,6BACE,kBAAC,GAAD,CAAsB4E,WAAYzE,KAAKJ,MAAM6E,WAAYhE,SAAUT,KAAKJ,MAAMa,SAC5E8D,OAAQvE,KAAKJ,MAAM2E,OACnBzE,eAAgBE,KAAKF,eACrBD,SAAUG,KAAKJ,MAAMC,WAEtB,yBAAKK,UAAU,aACd,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,oBACzB,6BACA,kBAAC,IAAD,CAAkBA,GAAG,uBACrB,6BACA,kBAAC,GAAD,CAAiBgc,QAAS9f,KAAKJ,MAAM8S,aAAcgO,oBAAqB1gB,KAAK0gB,oBAAqB7gB,SAAUG,KAAKJ,MAAMC,SAAU3B,SAAUA,KAK3I,yBAAKiC,MAA4C,KAArCH,KAAKJ,MAAM4+B,sBAA+B,CAACp+B,QAAS,QAAU,IACxE,kBAAC,GAAD,CAAqBmkB,SAAU,WAAK,EAAK3kB,MAAMkV,uBAAuB,CAAEvL,WAAUwL,cAAaC,eAAcC,cAAaC,eAAcR,UAAW,EAAK9U,MAAM4+B,yBAC9JH,iBAAoBr+B,KAAKu+B,+BAA+Bt+B,KAAKD,MAAOH,SAAUG,KAAKJ,MAAMC,mB,GA1E1EgB,IAAMR,WAyF7BkxB,GAAWC,aAAkB,2BAEnC8M,GAAiB1iB,cACf,SAAA1a,GAME,MAAO,CACLqI,SANegoB,GAASrwB,EAAO,YAMrB6T,YALQwc,GAASrwB,EAAO,eAKX8T,aAJJuc,GAASrwB,EAAO,gBAIE+T,YAHnBsc,GAASrwB,EAAO,eAGgBgU,aAF/Bqc,GAASrwB,EAAO,mBANxB0a,CAWf0iB,IAEa1iB,qBArBO,SAAC1a,GACrB,OAAO,+DACFA,EAAMuH,oBAAuBvH,EAAMsM,iBAAoBtM,EAAM2a,iBAAoB3a,EAAMkI,aAAgBlI,EAAMs1B,wBAmB5E1a,EAAzBF,CAAyCG,aAAYuiB,KC/GhEG,GAAkB,CAClBD,sBAAuB,GACvBE,wBAAyB,GACzBnI,kBAAmB,GACnB4B,sBAAuB,GACvBD,6CAA8C,EAC9C5hB,iBAAkB,GAClBkiB,qBAAsB,GACtBmG,6BAA8B,EAC9B/C,gCAAiC,GAuEtBpF,GApEc,WAAoC,IAAnCt1B,EAAkC,uDAA5Bu9B,GAAmBjB,EAAS,uCAC5D,OAAQA,EAAOj8B,MAEf,I1IsC+C,sC0IrC3C,OAAO,2BACAL,GADP,IAEIs9B,sBAAuBhB,EAAO9oB,YAGtC,IAAK,mBACD,OAAO,2BACAxT,GADP,IAEIy9B,6BAA8BnB,EAAOpB,2BACrCR,gCAAiC4B,EAAOnB,qCAGhD,I1I0BiD,wC0IzB7C,OAAO,2BACAn7B,GADP,IAEIw9B,wBAAyBlB,EAAO72B,cAGxC,I1IsBkC,yB0IrB9B,OAAO,2BACAzF,GADP,IAEIq1B,kBAAmBiH,EAAOxnB,2BAGlC,I1IiBoC,2B0IhBhC,OAAO,2BACA9U,GADP,IAEIi3B,sBAAuBqF,EAAO/mB,+BAGtC,I1IYsC,6B0IXlC,OAAO,2BACAvV,GADP,IAEIg3B,6CAA8CsF,EAAOhnB,uBAG7D,I1IOiC,wB0IN7B,OAAO,2BACAtV,GADP,IAEIoV,iBAAkBknB,EAAOlnB,mBAGjC,I1IEsC,6B0IDlC,OAAO,2BACApV,GADP,IAEIs3B,qBAAsBgF,EAAOpnB,8BAGrC,I1I1CgC,uB0I2C5B,kCACOlV,GADP,IAEIs3B,qBAAsB,GACtBliB,iBAAkB,GAClB6hB,sBAAuB,GACvB5B,kBAAmB,IAG3B,QACI,OAAO,eACAr1B,K,oBCMA09B,GA7EiB,SAAAh/B,GAAU,IAChCw2B,EAA4Bx2B,EAA5Bw2B,cAAev2B,EAAaD,EAAbC,SAEjB0N,EAAe,CACnBwJ,OAAsB,OAAblX,EAAoB3B,GAASC,GAAG4Y,OAAS7Y,GAASuB,GAAGsX,OAC9DhQ,UAAyB,OAAblH,EAAoB3B,GAASC,GAAG4I,UAAY7I,GAASuB,GAAGsH,UACpEgL,QAAsB,OAAblS,EAAoB3B,GAASC,GAAG4T,QAAU7T,GAASuB,GAAGsS,QAC/D4T,QAAsB,OAAb9lB,EAAoB3B,GAASC,GAAGwnB,QAAUznB,GAASuB,GAAGkmB,QAC/DF,SAAuB,OAAb5lB,EAAoB3B,GAASC,GAAGsnB,SAAWvnB,GAASuB,GAAGgmB,SACjEC,SAAuB,OAAb7lB,EAAoB3B,GAASC,GAAGunB,SAAWxnB,GAASuB,GAAGimB,SACjEwQ,iBAA+B,OAAbr2B,EAAoB3B,GAASC,GAAG+3B,iBAAmBh4B,GAASuB,GAAGy2B,kBAwBnF,IAAI2I,EAAyB,GACxBzI,IACHyI,EAAoCzI,EAdlB0I,QAClB,SAASC,EAAQC,GACfA,EAAIj4B,UAAYi4B,EAAIj4B,UAAUrG,UAAU,EAAG,IAC3C,IAAIs1B,EAA6B,IAAfgJ,EAAIjoB,OAAexJ,EAAaoY,QAAyB,IAAfqZ,EAAIjoB,OAAexJ,EAAakY,SAAWlY,EAAamY,SAChHuZ,EAAO,gCAAkCD,EAAIl7B,GAAK,KAAO,CAACkyB,cAAc,OAG5E,OAFAgJ,EAAG,2BAAOA,GAAP,IAAYhJ,WAAYA,EAAYiJ,KAAMA,IAC7CF,EAAOzjB,KAAK0jB,GACLD,IACN,KASL,IAAMxjB,EAAU,CACd,CAAE2jB,MAAO,cAAeC,WAAY5xB,EAAawE,QAASqtB,gBAAiB,2BAC3E,CAAEF,MAAO,YAAaC,WAAY5xB,EAAaxG,UAAWq4B,gBAAiB,2BAC3E,CAAEF,MAAO,OAAQC,WAAY5xB,EAAawJ,OAAQsoB,WA7BjC,SAAC/K,GAClB,IAAI0B,EAAoC,IAAtB1B,EAAOgL,IAAIvoB,OAAexJ,EAAaoY,QAAgC,IAAtB2O,EAAOgL,IAAIvoB,OAAexJ,EAAakY,SAAWlY,EAAamY,SAC5HuQ,EAAO,uBAAyB3B,EAAOgL,IAAIx7B,GACjD,OACE,kBAAC,IAAD,CAAMR,GAAI2yB,GAAOD,IAyBuDoJ,gBAAiB,4BAG7F,OACE,kBAAC,IAAD,CAAcp9B,OAAQnC,EAAU3B,SAAUA,GAAS2B,IACnD,yBAAKM,MAA0C,IAAnC0+B,EAAwB52B,OAAe,CAAC7H,QAAS,OAAQsnB,OAAQ,IAAKnlB,MAAO,QAAU,CAACmlB,OAAQ,IAAKnlB,MAAO,SACtH,kBAAC,IAAD,CAAkBuB,GAAG,sBAEvB,yBAAK3D,MAA0C,IAAnC0+B,EAAwB52B,OAAe,CAAC7H,QAAS,OAAQsnB,OAAQ,IAAKnlB,MAAO,QAAU,CAACmlB,OAAQ,IAAKnlB,MAAO,SACpH,kBAAC,KAAD,CACE0jB,KAAM4Y,EACNtjB,QAASA,EACTgkB,SAAU,GACVC,mBAAoB,CAAC,IACrBC,yBAAuB,EACvBC,2BAA2B,EAC3Br9B,GAAI,CACFs9B,UAAW,EACXC,OAAQ,EACRC,YAAa,gBACb,4BAA6B,CAC3B38B,MAAO,iBAGX48B,iBAAkB,SAACxL,GAEjB,OADuC,IAAtBA,EAAOgL,IAAIvoB,OAAe,kBAA0C,IAAtBud,EAAOgL,IAAIvoB,OAAe,mBAAqB,yBClEpHgpB,G,kDAEJ,WAAYngC,GAAQ,IAAD,8BACjB,cAAMA,IAQRE,eAAiB,SAACiU,GAChB,EAAKnU,MAAMkU,YAAYC,IARvB,EAAK+G,MAAQja,IAAMka,YAFF,E,gEAMjB/a,KAAKJ,MAAMyW,yB,+BAQX,OACE,kBAAC,IAAD,CAAcrU,OAAQhC,KAAKJ,MAAMC,SAAU3B,SAAUA,GAAS8B,KAAKJ,MAAMC,WACvE,6BACE,kBAAC,GAAD,CAAsB4E,WAAYzE,KAAKJ,MAAM6E,WAC3ChE,SAAUT,KAAKJ,MAAMa,SACrB8D,OAAQvE,KAAKJ,MAAM2E,OACnBzE,eAAgBE,KAAKF,eACrBD,SAAUG,KAAKJ,MAAMC,WAEvB,yBAAKK,UAAU,aACb,4BAAI,kBAAC,IAAD,CAAkB4D,GAAG,uBACzB,kBAAC,IAAD,CAAkBA,GAAG,cACrB,6BAAM,6BACN,kBAAC,GAAD,CAA0BsyB,cAAgBp2B,KAAKJ,MAAM0W,iBAAmBzW,SAAUG,KAAKJ,MAAMC,kB,GA7BzEgB,IAAMR,WA2CvBub,iBANO,SAAC1a,GACrB,OAAO,mDACFA,EAAMuH,oBAAuBvH,EAAMsM,iBAAoBtM,EAAMs1B,sBAAyBt1B,EAAM8lB,gBAI3DlL,EAAzBF,CAAyCG,aAAYgkB,KCvCrDnkB,iBAJS,SAAC1a,GAAD,MAAY,CAClCqD,OAAQrD,EAAMuH,mBAAmBlE,UAGpBqX,EATY,SAAAhc,GACzB,OAAqB,IAAjBA,EAAM2E,OAAqB,kBAAC,KAAD,CAAUjB,GAAG,SACrC,kBAAC,KAAU1D,MCOLgc,iBAJS,SAAC1a,GAAD,MAAY,CAClCqD,OAAQrD,EAAMuH,mBAAmBlE,UAGpBqX,EATa,SAAAhc,GAC1B,OAAqB,IAAjBA,EAAM2E,OAAqB,kBAAC,KAAD,CAAUjB,GAAG,SACrC,kBAAC,KAAU1D,MCOLgc,iBAJS,SAAC1a,GAAD,MAAY,CAClCqD,OAAQrD,EAAMuH,mBAAmBlE,UAGpBqX,EATc,SAAAhc,GAC3B,OAAqB,IAAjBA,EAAM2E,QAAiC,IAAjB3E,EAAM2E,OAAqB,kBAAC,KAAD,CAAUjB,GAAG,SAC3D,kBAAC,KAAU1D,M,UCmDdogC,GAAiBC,eAEjBC,GAAcC,2BAAgB,CAClC/2B,eACA4d,gBACAve,sBACAoK,kBACAgJ,mBACArO,mBACAgpB,wBACAtf,oBACA8Z,mBACA7jB,KAAMizB,OAGF73B,GAAQ83B,uBAAYH,GAAaI,+BAAoBC,2BAAgBP,GAAgBQ,QAC3FR,GAAeS,IAAIrD,I,IAEbsD,G,uKAEF,OACI,kBAAC,IAAD,KACE,6BACE,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,KAAD,CAAOC,OAAK,EAACpT,KAAK,OAAOvN,UAAWnF,KACpC,kBAAC+lB,GAAD,CAAoBD,OAAK,EAACpT,KAAK,YAAYvN,UAAWY,KACtD,kBAACggB,GAAD,CAAoBD,OAAK,EAACpT,KAAK,qBAAqBvN,UAAW6N,KAC/D,kBAAC+S,GAAD,CAAoBD,OAAK,EAACpT,KAAK,aAAavN,UAAW6E,KACvD,kBAAC+b,GAAD,CAAoBD,OAAK,EAACpT,KAAK,cAAcvN,UAAWmJ,KACxD,kBAACyX,GAAD,CAAoBD,OAAK,EAACpT,KAAK,sBAAsBvN,UAAWoO,KAChE,kBAACwS,GAAD,CAAoBD,OAAK,EAACpT,KAAK,mBAAmBvN,UAAW8M,KAE7D,kBAAC,GAAD,CAAqB6T,OAAK,EAACpT,KAAK,gBAAgBvN,UAAW+K,KAC3D,kBAAC,GAAD,CAAqB4V,OAAK,EAACpT,KAAK,YAAYvN,UAAWY,KACvD,kBAAC,GAAD,CAAqB+f,OAAK,EAACpT,KAAK,mBAAmBvN,UAAW8M,KAC9D,kBAAC,GAAD,CAAqB6T,OAAK,EAACpT,KAAK,qBAAqBvN,UAAWse,KAChE,kBAAC,GAAD,CAAqBqC,OAAK,EAACpT,KAAK,wBAAwBvN,UAAW+f,KACnE,kBAAC,GAAD,CAAqBY,OAAK,EAACpT,KAAK,uBAAuBvN,UAAWmP,KAClE,kBAAC,GAAD,CAAqBwR,OAAK,EAACpT,KAAK,0BAA0BvN,UAAWuY,KAErE,kBAAC,GAAD,CAAsBoI,OAAK,EAACpT,KAAK,aAAavN,UAAW4G,KACzD,kBAAC,GAAD,CAAsB+Z,OAAK,EAACpT,KAAK,qBAAqBvN,UAAW+N,KACjE,kBAAC,GAAD,CAAsB4S,OAAK,EAACpT,KAAK,gBAAgBvN,UAAW0M,KAC5D,kBAAC,GAAD,CAAsBiU,OAAK,EAACpT,KAAK,yBAAyBvN,UAAWsW,KACrE,kBAAC,GAAD,CAAsBqK,OAAK,EAACpT,KAAK,6BAA6BvN,UAAWgY,KACzE,kBAAC,GAAD,CAAsB2I,OAAK,EAACpT,KAAK,8BAA8BvN,UAAW+T,KAC1E,kBAAC,GAAD,CAAsB4M,OAAK,EAACpT,KAAK,wBAAwBvN,UAAW0V,KACpE,kBAAC,GAAD,CAAsBiL,OAAK,EAACpT,KAAK,yBAAyBvN,UAAWwX,KACrE,kBAAC,GAAD,CAAsBmJ,OAAK,EAACpT,KAAK,2BAA2BvN,UAAW0Z,W,GAlCjE74B,IAAMR,WA0CxBwgC,IAASC,OAAO,kBAAC,KAAD,CAAUv4B,MAAOA,IAAO,kBAAC,GAAD,OAAoBrC,SAAS66B,eAAe,QAErEx4B,sB","file":"static/js/main.e2269712.chunk.js","sourcesContent":["const messages = {\n    en: {\n      home: \"Home\",\n      test: \"Test\",\n      testYourKnow: \"Test your knoweledge\",\n      login: \"Login\",\n      register: \"Sign up\",\n      logout: \"Logout\",\n      testResults: \"Test results\",\n      users: \"Users\",\n      subjects: \"Subjects\",\n      admin: \"Admin\",\n      hi: \"Hi, \",\n      settings: \"Settings\",\n      contibute: \"Contribute\",\n      makeContribution: \"Make contribution\",\n      myContrributionStatus: \"My contribution status\",\n      globalSettings: \"Global settings\",\n      contribution: \"Contribution\",\n      addQuestion: \"Add question\",\n      editQuestion: \"Edit question\",\n      changePassword: \"Change password\",\n      searchForQusestion: \"Search for question\"\n\n    },\n    ru: {\n      home: \"Домой\",\n      test: \"Teст\",\n      testYourKnow: \"Проверьте свои знания\",\n      login: \"Логин\",\n      register: \"Зарегистрироваться\",\n      logout: \"Выход\",\n      testResults: \"Результаты теста\",\n      users: \"Пользователи\",\n      subjects: \"Предметы\",\n      admin: \"Админ\",\n      hi: \"Привет, \",\n      settings: \"Настройки\",\n      contibute: \"Мои вопросы\",\n      makeContribution: \"Добавить вопросы\",\n      myContrributionStatus: \"Cтатус моих вопросов\",\n      globalSettings: \"Глобальные настройки\",\n      contribution: \"Вклад пользователей\",\n      addQuestion: \"Добавить вопрос\",\n      editQuestion: \"Редактировать вопрос\",\n      changePassword: \"Cменить пароль\",\n      searchForQusestion: \"Поиск вопроса\"\n    }\n  };\n\n  export default messages;","import React, { Component } from 'react';\n\nclass ToggleLanguageButton extends Component {\n    toggleLanguage1 = () =>{\n        this.props.language === 'en' ? this.props.toggleLanguage('ru') : this.props.toggleLanguage('en');\n    }\n\n    render() {\n        return (\n            <div onClick={this.toggleLanguage1.bind(this)} className=\"toggleLanguageButton\">\n                <div>\n                    <span style={this.props.language === 'ru' ? {} : {display: 'none'}}>EN</span>\n                    <span style={this.props.language === 'en' ? {} : {display: 'none'}}>RU</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ToggleLanguageButton;","import React from 'react';\n\nfunction AvatarMy (props)  {\n    const firstLetter = props.userName;\n    let result;\n    if(!!firstLetter){\n        result = firstLetter.substring(0, 1);\n    } else {\n        result = \"?\";\n    }\n    return (\n        <div className=\"avatarWrapper\">\n            {result}   \n        </div>\n    );\n}\n\nexport default AvatarMy;\n\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport ListItemText from '@mui/material/ListItemText';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport QuizIcon from '@mui/icons-material/Quiz';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport Collapse from '@mui/material/Collapse';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Link } from 'react-router-dom';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport SummarizeIcon from '@mui/icons-material/Summarize';\nimport AddTaskIcon from '@mui/icons-material/AddTask';\nimport FactCheckIcon from '@mui/icons-material/FactCheck';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/TopNavigation';\nimport GroupIcon from '@mui/icons-material/Group';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ToggleLanguageButton from './formelements/ToggleLanguageButton';\nimport AvatarMy from './formelements/AvatarMy';\nimport SearchIcon from '@mui/icons-material/Search';\n\nfunction MaterialUiNavigation(props) {\n  const [state, setState] = React.useState({top: false, left: false,  bottom: false, right: false, });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  const [selectedIndex, setSelectedIndex] = React.useState(\"\");\n  const handleClick = index => {\n    if (selectedIndex === index) {\n      setSelectedIndex(\"\")\n    } else {\n      setSelectedIndex(index)\n    }\n  }\n\n  const list = (anchor) => (\n    <IntlProvider locale={props.language} messages={messages[props.language]}>\n      <Box\n        sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\n        role=\"presentation\"\n      > \n      <Box sx={{ justifyContent: 'flex-end' }}>         \n        <IconButton size=\"large\" aria-label=\"account of current user\" aria-controls=\"menu-appbar\"  aria-haspopup=\"true\"  onClick={toggleDrawer('left', false)} color=\"inherit\">\n          <CloseIcon />\n        </IconButton>\n        </Box>\n        <List>\n          <Link to=\"/app\" color=\"#444\" variant=\"p\" underline=\"none\" className=\"drawerNavigationLink\">\n            <ListItemButton onClick={toggleDrawer('left', false)}>\n                <ListItemText>\n                <FormattedMessage id=\"home\" />\n                </ListItemText>\n            </ListItemButton>\n          </Link>\n          <ListItemButton onClick={() => { handleClick(2) }}>\n              <ListItemText><FormattedMessage id=\"test\" /></ListItemText>\n              {2 === selectedIndex ? <ExpandLess /> : <ExpandMore />}\n          </ListItemButton>\n          <Collapse in={2 === selectedIndex} timeout=\"auto\" unmountOnExit>\n              <Link to=\"/app/test\" color=\"#444\" variant=\"p\" underline=\"none\" className=\"drawerNavigationLink\">\n                <ListItemButton onClick={toggleDrawer('left', false)}>\n                  <ListItemIcon>\n                    <QuizIcon />\n                  </ListItemIcon>\n                    <ListItemText sx={{ mx: -2 }}>\n                      <FormattedMessage id=\"test\" />\n                    </ListItemText>\n                </ListItemButton>\n              </Link>\n              {(props.roleId === 1 || props.roleId === 2) && (\n              <Link to=\"/app/resultsn\" color=\"#444\" variant=\"p\" underline=\"none\" className=\"drawerNavigationLink\">\n                <ListItemButton onClick={toggleDrawer('left', false)}>\n                  <ListItemIcon>\n                    <SummarizeIcon />\n                  </ListItemIcon>\n                  <ListItemText sx={{ mx: -2 }}>\n                  <FormattedMessage id=\"testResults\" />\n                  </ListItemText>\n                </ListItemButton>\n              </Link>\n              )}\n          </Collapse>\n\n          {(props.roleId === 1 || props.roleId === 2) && (\n          <>\n          <ListItemButton onClick={() => { handleClick(1) }}>\n              <ListItemText><FormattedMessage id=\"contibute\" /></ListItemText>\n              {1 === selectedIndex ? <ExpandLess /> : <ExpandMore />}\n          </ListItemButton>\n          <Collapse in={1 === selectedIndex} timeout=\"auto\" unmountOnExit>\n            <Link to=\"/app/addmyquestion\" color=\"#444\" variant=\"p\" underline=\"none\" className=\"drawerNavigationLink\">\n              <ListItemButton onClick={toggleDrawer('left', false)}>\n                <ListItemIcon>\n                  <AddTaskIcon />\n                </ListItemIcon>\n                <ListItemText sx={{ mx: -2 }}>\n                <FormattedMessage id=\"contibute\" /> \n                </ListItemText>\n              </ListItemButton>\n            </Link>\n            <Link to=\"/app/myquestionstatus\" color=\"#444\" variant=\"p\" underline=\"none\" className=\"drawerNavigationLink\">\n              <ListItemButton onClick={toggleDrawer('left', false)}>\n                <ListItemIcon>\n                  <FactCheckIcon />\n                </ListItemIcon>\n                <ListItemText sx={{ mx: -2 }}>\n                <FormattedMessage id=\"myContrributionStatus\" />\n                </ListItemText>\n              </ListItemButton>\n            </Link>\n          </Collapse>\n          </>\n          )}\n          {( props.roleId === 2) && (\n            <>\n            <Divider />\n            <ListItemButton onClick={() => { handleClick(3) }}>\n                <ListItemText><FormattedMessage id=\"admin\" /></ListItemText>\n                {3 === selectedIndex ? <ExpandLess /> : <ExpandMore />}\n            </ListItemButton>\n            <Collapse in={3 === selectedIndex} timeout=\"auto\" unmountOnExit>\n              <Link to=\"/app/users\" color=\"#444\" variant=\"p\" underline=\"none\" className=\"drawerNavigationLink\">\n                <ListItemButton onClick={toggleDrawer('left', false)}>\n                  <ListItemIcon>\n                    <GroupIcon />\n                  </ListItemIcon>\n                  <ListItemText sx={{ mx: -2 }}>\n                  <FormattedMessage id=\"users\" />   \n                  </ListItemText>\n                </ListItemButton>\n              </Link>\n              <Link to=\"/app/subjects\" color=\"#444\" variant=\"p\" underline=\"none\" className=\"drawerNavigationLink\">\n                <ListItemButton onClick={toggleDrawer('left', false)}>\n                  <ListItemIcon>\n                    <FactCheckIcon />\n                  </ListItemIcon>\n                  <ListItemText sx={{ mx: -2 }}>\n                  <FormattedMessage id=\"subjects\" />\n                  </ListItemText>\n                </ListItemButton>\n              </Link>\n              <Link to=\"/app/adminsettings\" color=\"#444\" variant=\"p\" underline=\"none\" className=\"drawerNavigationLink\">\n                <ListItemButton onClick={toggleDrawer('left', false)}>\n                  <ListItemIcon>\n                    <SettingsIcon />\n                  </ListItemIcon>\n                  <ListItemText sx={{ mx: -2 }}>\n                  <FormattedMessage id=\"globalSettings\" />\n                  </ListItemText>\n                </ListItemButton>\n              </Link>\n\n              <Link to=\"/app/admincontribution\" color=\"#444\" variant=\"p\" underline=\"none\" className=\"drawerNavigationLink\">\n                <ListItemButton onClick={toggleDrawer('left', false)}>\n                  <ListItemIcon>\n                    <AddTaskIcon />\n                  </ListItemIcon>\n                  <ListItemText sx={{ mx: -2 }}>\n                  <FormattedMessage id=\"contribution\" />\n                  </ListItemText>\n                </ListItemButton>\n              </Link>\n\n              <Link to=\"/app/adminaddquestion\" color=\"#444\" variant=\"p\" underline=\"none\" className=\"drawerNavigationLink\">\n                <ListItemButton onClick={toggleDrawer('left', false)}>\n                  <ListItemIcon>\n                    <AddIcon />\n                  </ListItemIcon>\n                  <ListItemText sx={{ mx: -2 }}>\n                  <FormattedMessage id=\"addQuestion\" />\n                  </ListItemText>\n                </ListItemButton>\n              </Link>\n\n              <Link to=\"/app/admineditquestion\" color=\"#444\" variant=\"p\" underline=\"none\" className=\"drawerNavigationLink\">\n                <ListItemButton onClick={toggleDrawer('left', false)}>\n                  <ListItemIcon>\n                    <EditIcon />\n                  </ListItemIcon>\n                  <ListItemText sx={{ mx: -2 }}>\n                  <FormattedMessage id=\"editQuestion\" />\n                  </ListItemText>\n                </ListItemButton>\n              </Link>\n              <Link to=\"/app/adminsearchquestion\" color=\"#444\" variant=\"p\" underline=\"none\" className=\"drawerNavigationLink\">\n                <ListItemButton onClick={toggleDrawer('left', false)}>\n                  <ListItemIcon>\n                    <SearchIcon />\n                  </ListItemIcon>\n                  <ListItemText sx={{ mx: -2 }}>\n                  <FormattedMessage id=\"searchForQusestion\" />\n                  </ListItemText>\n                </ListItemButton>\n              </Link>\n            </Collapse>\n            </>\n          )}\n        </List>\n      </Box>\n    </IntlProvider>\n  );\n\n  return (\n    <div>\n    <IntlProvider locale={props.language} messages={messages[props.language]}>\n      <AppBar position=\"static\">\n          <Toolbar disableGutters sx={{ mx: 0 }}>\n            <div style={{ width: '100%' }}>\n              <Box display=\"flex\" flexDirection=\"row\" p={0} m={0}>\n                <Box p={1} >\n                <IconButton size=\"medium\" aria-label=\"account of current user\" aria-controls=\"menu-appbar\"  aria-haspopup=\"true\" sx={{ mr: 1 }} onClick={toggleDrawer('left', true)} color=\"inherit\">\n                  <MenuIcon />\n                </IconButton>\n                </Box>\n                <Box sx={{ pl: 0, pt: 1.75, ml: -1 }} >\n                  <Link to=\"/app/\" color=\"#fff\" variant=\"h6\" underline=\"none\" className=\"custom-mui-home-link\" sx={{ ml: 0 }}>Knowledgedepot</Link>\n                </Box>\n                <div style={{ width: '100%' }}>\n                  <Box display=\"flex\" flexDirection=\"row-reverse\" p={0} m={0}>\n                    <Box p={1}>\n                      <Tooltip title=\"Open account settings\">\n                        <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                          <AvatarMy userName={props.userName}/>\n                        </IconButton>\n                      </Tooltip>\n                      <Menu sx={{ mt: '45px' }} id=\"menu-appbar\" anchorEl={anchorElUser} anchorOrigin={{ vertical: 'top',  horizontal: 'right',}} keepMounted transformOrigin={{vertical: 'top',horizontal: 'right',}}  open={Boolean(anchorElUser)}\n                        onClose={handleCloseUserMenu}\n                      >\n                         {(( props.roleId === 1) || ( props.roleId === 2) || ( props.roleId === 3))  && (\n                          <MenuItem key={\"logout\"} onClick={props.logoutUser}>\n                            <Typography textAlign=\"center\" onClick={handleCloseUserMenu}>\n                              <FormattedMessage id=\"logout\" />\n                            </Typography>\n                          </MenuItem>\n                          )}\n                          {( props.roleId === 0) && (\n                          <>\n                            <Link to=\"/app/login\" color=\"#444\" variant=\"p\" underline=\"none\" className=\"drawerNavigationLink\">\n                              <MenuItem key={\"login\"}>\n                                  <Typography textAlign=\"center\">\n                                    <FormattedMessage id=\"login\" />\n                                  </Typography>\n                              </MenuItem>\n                            </Link>\n                            <Link to=\"/app/signup\" color=\"#444\" variant=\"p\" underline=\"none\" className=\"drawerNavigationLink\">\n                              <MenuItem key={\"register\"}>\n                                  <Typography textAlign=\"center\">\n                                    <FormattedMessage id=\"register\" />\n                                  </Typography>\n                              </MenuItem>\n                            </Link>\n                          </>\n                          )}\n                          {(( props.roleId === 1) || ( props.roleId === 2) || ( props.roleId === 3))  && (\n                          <Link to=\"/app/accountsettings\" color=\"#444\" variant=\"p\" underline=\"none\" className=\"drawerNavigationLink\">\n                            <MenuItem key={\"Change password\"} onClick={handleCloseUserMenu}>\n                                <Typography textAlign=\"center\">\n                                  <FormattedMessage id=\"changePassword\" />\n                                </Typography>\n                            </MenuItem>\n                          </Link>\n                          )}\n                      </Menu>\n                    </Box>\n                    <Tooltip title=\"Change language\">\n                      <Box sx={{ p: 2, mt: 0.25 }}>\n                        <ToggleLanguageButton language={props.language} toggleLanguage={props.toggleLanguage}/>\n                      </Box>\n                    </Tooltip>\n                  </Box>\n                </div>\n              </Box>\n            </div>\n          </Toolbar>\n      </AppBar>\n    </IntlProvider>\n    <Drawer anchor={'left'}  open={state['left']} onClose={toggleDrawer('left', false)} sx={{ mb: 0.25 }}>\n        {list('left')}\n        <List style={{ marginTop: `auto` }}>\n          <Link to=\"/app\" color=\"#444\" variant=\"p\" underline=\"none\" className=\"drawerNavigationLink\" onClick={toggleDrawer('left', false)}>\n              <p className=\"drawerFooterLink\">©2020 Copyright: Petro Niemkov</p>\n          </Link>\n        </List>\n    </Drawer>\n\n    </div>\n  );\n}\n\nexport default MaterialUiNavigation;","const helpers = {\n    UrlSniffer: function(){\n        return (window.location.host.includes('localhost') || window.location.host.includes('127.0.0.1')) ? 'http://127.0.0.1:8000/' : 'http://knowledgedepot.ca/';\n    },\n\n    X_CSRF_TOKEN: function(){\n        if(document.getElementsByTagName(\"meta\")[2] !== undefined){\n            return document.getElementsByTagName(\"meta\")[2].content;\n        }\n    },\n\n    FilterBySubjectsAndSort: function(initialResults, activeSubjects, sortingOption){\n        let filteredBySubjects = initialResults.filter(function (result) { return (activeSubjects.includes(result.subjectName))});\n            switch(sortingOption) {\n            case \"1\":\n                filteredBySubjects.sort((a, b) => a.createdAt > b.createdAt ? 1:-1);\n                break;\n            case \"2\":\n                filteredBySubjects.sort((a, b) => a.createdAt < b.createdAt ? 1:-1);\n                break;\n            case \"3\":\n                filteredBySubjects.sort((a, b) => a.quality > b.quality ? 1:-1);\n                break;\n            case \"4\":\n                filteredBySubjects.sort((a, b) => a.quality < b.quality ? 1:-1);\n                break;\n            case \"5\":\n                filteredBySubjects.sort((a, b) => a.subjectName > b.subjectName ? 1:-1);\n                break;\n            case \"6\":\n                filteredBySubjects.sort((a, b) => a.subjectName < b.subjectName ? 1:-1);\n                break;\n            default:\n                filteredBySubjects.sort((a, b) => a.createdAt > b.createdAt ? -1:1);\n            }\n            \n            return filteredBySubjects;\n        },\n\n        PaginatedResults: function(filteredBySubjectsAndSort, resultsFilterPerPage, resultsFilterPaginationNumber){\n            return filteredBySubjectsAndSort.filter(function(result, index){ \n                return (index >= resultsFilterPerPage*resultsFilterPaginationNumber) && (index < resultsFilterPerPage*(resultsFilterPaginationNumber + 1))\n            });\n        },\n\n        SimplePaginatedResults: function(items, itemsPerPage, currentPagination){\n            return items.filter(function(result, index){ \n                return (index >= itemsPerPage*(currentPagination - 1)) && (index < itemsPerPage*(currentPagination))\n            });\n        },\n\n        makeRandom: function (){\n            var text = \"\";\n            var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n            for (var i = 0; i < 7; i++)\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n            return text;\n        }\n}\n\nexport default helpers;\n\n","import axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport { SET_CURRENT_SUBJECT_ID, SET_TESTING_SESSION_HASH, SET_CURRENT_SUBJECT_NAME, \n    SET_CURRENT_QUESTION, SET_ANSWERS, SET_NUMBER_OF_ANSWERED, SET_NUMBER_OF_CORRECT, SET_IF_REMAIN_QUESTIONS, SET_CORRECT_ANSWER_ID, SET_IF_TO_SHOW_TEST_HINTS_BORDER,\n    SET_IF_TO_SHOW_TEST_HINTS, SET_OVERLAY_VISIBILITY, SET_CURRENT_QUESTION_ID } from '../types';\nimport store from '../index.js';\n\nconst BaseUrl = helpers.UrlSniffer();\n\nexport const processTesting = (testingSessionHash, answerId) => {\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n     return (dispatch) => {\n        return axios.post(BaseUrl + 'react/processTesting/', {testingSessionHash, answerId}, {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                if (store.getState().testReducer.toShowTestingHints === 1){\n                    dispatch(setCurrentQuestion(response.data.payload.question));\n                    dispatch(setAnswers(response.data.payload.answersToShow));\n                    dispatch(setNumberOfAnswered(response.data.payload.answered));\n                    dispatch(setNumberOfCorrect(response.data.payload.correct));\n                    dispatch(setIfRemainQuestions(response.data.payload.ifRemainQuestions));\n                    dispatch(setCorrectAnswerId(response.data.payload.correctAnswerId));\n                    dispatch(setCurrentQuestionId(response.data.payload.questionId));\n                    //dispatch(setHintsBorderVisibility(0))\n                    ///store.getState().testReducer.testHintsBorderTimeout\n                } else {\n                    dispatch(setCurrentQuestion(response.data.payload.question));\n                    dispatch(setAnswers(response.data.payload.answersToShow));\n                    dispatch(setNumberOfAnswered(response.data.payload.answered));\n                    dispatch(setNumberOfCorrect(response.data.payload.correct));\n                    dispatch(setIfRemainQuestions(response.data.payload.ifRemainQuestions));\n                    dispatch(setCorrectAnswerId(response.data.payload.correctAnswerId));\n                    dispatch(setCurrentQuestionId(response.data.payload.questionId));\n                    ///dispatch(setHintsBorderVisibility(0))\n                }\n                dispatch(setHintsBorderVisibility(0))\n                dispatch(setOverlayVisibilityDispatch(false))\n            } else {\n                throw(response.data.payload.message);\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport function startNewTest(currentSubjectId, testingSessionId){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.post(BaseUrl + 'react/startTesting', {currentSubjectId, testingSessionId}, {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                dispatch(saveTestingSessionHash(response.data.payload.testingSessionHash));\n                this.processTesting(response.data.payload.testingSessionHash);\n            } else {\n                throw(response.data.payload.message);\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport function setRemainingQuestionsToZero(){\n    return (dispatch) => {\n        dispatch(setRemainingQuestionsToZeroDispatch())\n    };\n}\n\n\nexport function setRemainingQuestionsToZeroDispatch(){\n    return{\n        type: 'SET_REMAINING_QUESTIONS_TO_ZERO'\n    }\n}\n\nexport function setIfToShowTestingHints(value){\n    return (dispatch) => {\n        dispatch(setIfToShowTestingHintsDispatch(value))\n    };\n}\n\n\n\nexport const destroyTemporaryTestingQuestions = (testingSessionHash, ifToDestroyTemporaryQuestions) => {\n    return (dispatch) => {\n        return axios.post(BaseUrl + 'react/processTesting/', {testingSessionHash, ifToDestroyTemporaryQuestions})\n        .then(response => {\n            if(response.data.payload.success === \"true\"){} else { throw(response.data.payload.message); };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport const setCurrentSubjectId = (id) => {\n    return (dispatch) => {\n        dispatch(setCurrSubjectIdRedux(id))\n    };\n}\n\nexport const setOverlayVisibility = (bool) => {\n    return (dispatch) => {\n        dispatch(setOverlayVisibilityDispatch(bool))\n    };\n}\n\nexport function setOverlayVisibilityDispatch(bool){\n    return{\n        type: SET_OVERLAY_VISIBILITY,\n        visibility: bool\n    }\n}\n\n\nexport function setCurrSubjectIdRedux(id){\n    return{\n        type: SET_CURRENT_SUBJECT_ID,\n        id: id\n    }\n}\n\nexport const setCurrentSubjectName = (name) => {\n    return (dispatch) => {\n        dispatch(setCurrSubjectNameRedux(name))\n    };\n}\n\nexport const setTestingSessionHash = (data) => {\n    return (dispatch) => {\n        dispatch(saveTestingSessionHash(data))\n    };\n}\n\nexport function setCurrSubjectNameRedux(name){\n    return{\n        type: SET_CURRENT_SUBJECT_NAME,\n        name: name\n    }\n}\n\nexport function setCurrentQuestion(currentQuestion){\n    return {\n        type: SET_CURRENT_QUESTION,\n        currentQuestion: currentQuestion,\n    }\n}\n\nexport function saveTestingSessionHash(data){\n    return{\n        type: SET_TESTING_SESSION_HASH,\n        testingSessionHash: data\n    }\n}\n\nexport function setAnswers(answers){\n    return {\n        type: SET_ANSWERS,\n        answers: answers,\n    }\n}\n\nexport function setIfToShowTestingHintsDispatch(value){\n    return {\n        type: SET_IF_TO_SHOW_TEST_HINTS,\n        ifToShowTestingHints: value,\n    }\n}\n\nexport function setNumberOfAnswered(number){\n    return {\n        type: SET_NUMBER_OF_ANSWERED,\n        number: number,\n    }\n}\n\nexport function setHintsBorderVisibility(number){\n    return {\n        type: SET_IF_TO_SHOW_TEST_HINTS_BORDER,\n        visibility: number,\n    }\n}\n\nexport function setNumberOfCorrect(number){\n    return {\n        type: SET_NUMBER_OF_CORRECT,\n        number: number,\n    }\n}\n\nexport function setCorrectAnswerId(id){\n    return {\n        type: SET_CORRECT_ANSWER_ID,\n        id: id,\n    }\n}\n\nexport function setIfRemainQuestions(number){\n    return {\n        type: SET_IF_REMAIN_QUESTIONS,\n        number: number,\n    }\n}\n\n\nexport function setCurrentQuestionId(id){\n    return {\n        type: SET_CURRENT_QUESTION_ID,\n        id: id,\n    }\n}\n","export const LOGIN_SEND = 'LOGIN_SEND';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const HIDE_LOGIN_ERROR = 'HIDE_LOGIN_ERROR';\nexport const LOAD_SUBJECTS_ADMIN = 'LOAD_SUBJECTS_ADMIN';\nexport const LOAD_SUBJECTS_USER = 'LOAD_SUBJECTS_USER';\nexport const LOAD_USERS = 'LOAD_USERS';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const ADMIN_ERROR = 'ADMIN_ERROR';\nexport const LOAD_RESULTS = 'LOAD_RESULTS';\nexport const USER_ERROR = 'USER_ERROR';\nexport const SET_CURRENT_SUBJECT_ID = 'SET_CURRENT_SUBJECT_ID';\nexport const SET_TESTING_SESSION_HASH = 'SET_TESTING_SESSION_HASH';\nexport const SET_CURRENT_SUBJECT_NAME = 'SET_CURRENT_SUBJECT_NAME';\nexport const SET_CURRENT_QUESTION = 'SET_CURRENT_QUESTION';\nexport const SET_ANSWERS = 'SET_ANSWERS';\nexport const SET_NUMBER_OF_ANSWERED = 'SET_NUMBER_OF_ANSWERED';\nexport const SET_NUMBER_OF_CORRECT = 'SET_NUMBER_OF_CORRECT';\nexport const SET_IF_REMAIN_QUESTIONS = 'SET_IF_REMAIN_QUESTIONS';\nexport const SET_USERS = 'SET_USERS';\n//refactoring login logout//\nexport const SET_USER_NAME = 'SET_USER_NAME';\nexport const SET_ROLE_ID = 'SET_ROLE_ID';\nexport const SET_JWT_TOKEN = 'SET_JWT_TOKEN';\nexport const SET_USER_ID = 'SET_USER_ID';\nexport const FULL_LOGOUT = 'FULL_LOGOUT';\n// try to combine different reducers in one action\nexport const CLEAR_SENSITIVE_INFO = 'CLEAR_SENSITIVE_INFO';\n// filter results subproject:\nexport const SET_RESULTS_FILTER_ACTIVE_SUBJECTS = 'SET_RESULTS_FILTER_ACTIVE_SUBJECTS';\nexport const SET_RESULTS_FILTERED = 'SET_RESULTS_FILTERED';\nexport const SET_RESULTS_FILTER_ITEMS_PAGE = 'SET_RESULTS_FILTER_ITEMS_PAGE';\nexport const SET_RESULTS_FILTER_NUMBER_OF_PAGINATIONS = 'SET_RESULTS_FILTER_NUMBER_OF_PAGINATIONS';\nexport const SET_RESULTS_FILTER_CURRENT_PAGINATION = 'SET_RESULTS_FILTER_CURRENT_PAGINATION';\nexport const SET_RESULTS_FILTER_SORTING_OPTION = 'SET_RESULTS_FILTER_SORTING_OPTION';\nexport const SET_CORRECT_ANSWER_ID = 'SET_CORRECT_ANSWER_ID';\nexport const SET_IF_TO_SHOW_TEST_HINTS_BORDER = 'SET_IF_TO_SHOW_TEST_HINTS_BORDER';\nexport const SET_IF_TO_SHOW_TEST_HINTS = 'SET_IF_TO_SHOW_TEST_HINTS';\n//settings\nexport const SET_LANGUAGE = 'SET_LANGUAGE';\nexport const SET_FLASH_MESSAGES_VISIBILITY = 'SET_FLASH_MESSAGES_VISIBILITY';\nexport const SET_FLASH_MESSAGES_MESSAGE = 'SET_FLASH_MESSAGES_MESSAG';\nexport const SET_FLASH_MESSAGES_TYPE = 'SET_FLASH_MESSAGES_TYPE';\nexport const SET_GLOBAL_SETTINGS = 'SET_GLOBAL_SETTINGS';\nexport const SET_MUI_FLASH_MESSAGES_VISIBILITY = 'SET_MUI_FLASH_MESSAGES_VISIBILITY';\nexport const SET_MUI_FLASH_MESSAGES_MESSAGE = 'SET_MUI_FLASH_MESSAGES_MESSAGE';\nexport const SET_MUI_FLASH_MESSAGES_TYPE = 'SET_MUI_FLASH_MESSAGES_TYPE';\n//signup\nexport const SET_SIGNUP_CAPTCHA_TEXT = 'SET_SIGNUP_CAPTCHA_TEXT';\nexport const SET_FAKE_CAPTCHA_TEXT = 'SET_FAKE_CAPTCHA_TEXT';//when recaptcha is disabled, we set fake recaptcha text to aviod signup form validation error for recaptcha field\n////cookie consent\nexport const SET_COOKIE_CONSENT_VISIBILITY = 'SET_COOKIE_CONSENT_VISIBILITY';\nexport const SET_COOKIE_CONSENT_OBTAINED = 'SET_COOKIE_CONSENT_OBTAINED';\n//suspended account\nexport const SET_SUSPENSION_REASON = 'SET_SUSPENSION_REASON';\n//reset password functionality\nexport const SET_REDIRECT_FLAG_FOR_RESET_PASWORD_FUNCTION = 'SET_REDIRECT_FLAG_FOR_RESET_PASWORD_FUNCTION';\n/// my contribution functionality\nexport const SET_CURRENT_CONTRIBUTION_SUBJECT_ID = 'SET_CURRENT_CONTRIBUTION_SUBJECT_ID';\nexport const SET_CURRENT_CONTRIBUTION_SUBJECT_NAME = 'SET_CURRENT_CONTRIBUTION_SUBJECT_NAME';\nexport const SENT_MY_CONTRIBUTION = 'SENT_MY_CONTRIBUTION'; \nexport const SET_ADMIN_CONTRIBUTION = 'SET_ADMIN_CONTRIBUTION';\nexport const SET_CONTRIBUTION_CONTENT = 'SET_CONTRIBUTION_CONTENT';\nexport const SET_REDIRECT_FLAG_FORADMIN = 'SET_REDIRECT_FLAG_FORADMIN';//will redirect to contributions page from contribution item page\nexport const SET_USER_CONTRIBUTION = 'SET_USER_CONTRIBUTION';\nexport const SET_USER_CONTRIBUTION_ITEM = 'SET_USER_CONTRIBUTION_ITEM';\n///edit questions block\nexport const SET_CURRENT_SUBJECT_ID_TO_ADD_QUESTION = 'SET_CURRENT_SUBJECT_ID_TO_ADD_QUESTION'; // to be able to add question\nexport const SET_CURRENT_SUBJECT_NAME_TO_ADD_QUESTION = 'SET_CURRENT_SUBJECT_NAME_TO_ADD_QUESTION'; // to be able to add question\nexport const SET_CURRENT_QUESTIONS_BY_SUBJECT_TO_EDIT = 'SET_CURRENT_QUESTIONS_BY_SUBJECT_TO_EDIT'; \nexport const SET_NUMBER_OF_CURRENT_QUESTIONS_BY_SUBJECT_TO_EDIT = 'SET_NUMBER_OF_CURRENT_QUESTIONS_BY_SUBJECT_TO_EDIT'; \nexport const SET_CURRENT_PAGINATION_QUESTIONS_BY_SUBJECT = 'SET_CURRENT_PAGINATION_QUESTIONS_BY_SUBJECT'; \nexport const SET_PAGINATED_QUESTIONS = 'SET_PAGINATED_QUESTIONS';\nexport const SET_QUESTIONS_TO_EDIT_STATUS = 'SET_QUESTIONS_TO_EDIT_STATUS';// to be able to see all, active or unactive questions to edit\nexport const SET_ANSWERS_FOR_QUESTION_ID = 'SET_ANSWERS_FOR_QUESTION_ID';// \nexport const SET_ADMIN_EDIT_QUESTION_ITEM = 'SET_ADMIN_EDIT_QUESTION_ITEM';// this will be a set of question and answers\nexport const SET_CURRENT_SUBJECT_NAME_FOR_QUESTION_EDIT = 'SET_CURRENT_SUBJECT_NAME_FOR_QUESTION_EDIT'; \nexport const SET_REDIRECT_FLAG_TO_BACK_TO_QUESTIONS_LIST = 'SET_REDIRECT_FLAG_TO_BACK_TO_QUESTIONS_LIST'; // reproduce similar functionality from contribution blick\nexport const PUSH_EDITED_QUESTION_ID_TO_ARRAY_TO_BE_ABLE_TO_SEE_RECENTLY_EDITED_QUESTIONS = 'PUSH_EDITED_QUESTION_ID_TO_ARRAY_TO_BE_ABLE_TO_SEE_RECENTLY_EDITED_QUESTIONS'; \nexport const CLEAR_EDITED_QUESTIONS_LIST = 'CLEAR_EDITED_QUESTIONS_LIST';\nexport const DELETE_QUESTION = 'DELETE_QUESTION';\nexport const SET_OVERLAY_VISIBILITY = 'SET_OVERLAY_VISIBILITY';\nexport const SET_CURRENT_QUESTION_ID = 'SET_CURRENT_QUESTION_ID';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","const messages = {\n    en: {\n        accountCreateSuccess: \"Account has been created successfully\",\n        wrongRecaptcha: \"Wrong recaptch text\",\n        logoutSuccess: \"User has been logged out successfully\",\n        emailConfirmationSuccess: \"Email confirmation link has been resent successfully\",\n        forgotPasswordSuccess: \"Password reset link has been sent successfully\", \n        verifyaddress: \"Password reset link will be sent to the email address/username specified. Usually it takes up to 3 minutes for system to send email. Just click this link and fill password reset form\",\n        enterTextInBlue: \"Enter text in blue below\",\n        newpasswordsavedsucess: \"New password has been saved successfully\",\n        emailTaken: \"This email is already taken\",\n        nameTaken: \"This name is already taken\",\n        wrongEmailPassword: \"Wrong email or password\",\n    },\n    ru: {\n        accountCreateSuccess: \"Аккаунт успешно создан\",\n        wrongRecaptcha: \"Неверный текст recaptcha\",\n        logoutSuccess: \"Пользователь успешно вышел из системы\",\n        emailConfirmationSuccess: \"Электронное письмо с подтверждением успешно отправлено повторно\",\n        forgotPasswordSuccess: \"Ссылка для сброса пароля была успешно отправлена\",\n        verifyaddress: \"Ссылка для сброса пароля будет отправлена ​​на указанный адрес электронной почты/имя пользователя. Обычно система отправляет электронное письмо в течение 3 минут. Просто нажмите на эту ссылку и заполните форму сброса пароля\",\n        enterTextInBlue: \"Введите текст, выделенный синим цветом\",\n        newpasswordsavedsucess: \"Новый пароль успешно сохранен\",\n        emailTaken: \"Этот электронный адрес уже используется\",\n        nameTaken: \"Это имя уже используется\",\n        wrongEmailPassword: \"Неправильный адрес электронной почты или пароль\",\n    }\n  };\n\n  export default messages;","import { SET_MUI_FLASH_MESSAGES_VISIBILITY, SET_MUI_FLASH_MESSAGES_MESSAGE, SET_MUI_FLASH_MESSAGES_TYPE } from '../types';\n\nexport default function showMuiFlashMessage(dispatch, message, type){\n    dispatch(changeMuiFlashMessageVisibility(1));\n    dispatch(changeMuiFlashMessageMessage(message));\n    dispatch(changeMuiFlashMessageType(type));\n}\n\nfunction changeMuiFlashMessageVisibility(value){\n    return{\n        type: SET_MUI_FLASH_MESSAGES_VISIBILITY,\n        muiFlashMessageVisibility: value    \n    } \n}\n\nfunction changeMuiFlashMessageMessage(value){\n    return{\n        type: SET_MUI_FLASH_MESSAGES_MESSAGE,\n        muiFlashMessageMessage: value    \n    } \n}\n\nfunction changeMuiFlashMessageType(value){\n    return{\n        type: SET_MUI_FLASH_MESSAGES_TYPE,\n        muiFlashMessageType: value    \n    } \n}\n","import axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport { LOGIN_ERROR, SET_ROLE_ID, SET_USER_NAME, SET_JWT_TOKEN, SET_USER_ID, CLEAR_SENSITIVE_INFO,\n    SET_SIGNUP_CAPTCHA_TEXT, SET_COOKIE_CONSENT_OBTAINED, SET_SUSPENSION_REASON, SET_REDIRECT_FLAG_FOR_RESET_PASWORD_FUNCTION, \n    SET_MUI_FLASH_MESSAGES_VISIBILITY } from '../types';\nimport store from '../index.js';\nimport {reset} from 'redux-form';\nimport messages from '../translations/actions/loginsignup';\nimport showMuiFlashMessage from './snackBarControl';\n\nconst BaseUrl = helpers.UrlSniffer();\n\nexport const loginUserRedux = () => {\n    const email = store.getState().form.loginFormRedux.values.email;// in this case store is available\n    const password = store.getState().form.loginFormRedux.values.password;// in this case store is available\n    const translations = {\n        wrongEmailPassword:  store.getState().settingsReducer.language === 'en' ? messages.en.wrongEmailPassword : messages.ru.wrongEmailPassword,\n    }\n    return (dispatch) => {\n        return axios.post(BaseUrl + 'react/login', {email, password})\n        .then(response => {\n            ////console.log(response.data.data.jwt_token);//////////////////////////////////////////////////\n            if(response.data.data.success === \"true\"){\n                dispatch(setRoleId(response.data.data.role_id));\n                dispatch(setUserName(response.data.data.name));\n                dispatch(setUserSuspensionReason(response.data.data.suspension_reason));\n                dispatch(setJWToken(response.data.data.jwt_token));\n                dispatch(setUserId(response.data.data.id));\n                dispatch(setCookieConsenGiven(response.data.data.cookie_consent_given));\n            } else {\n                dispatch(clearSensitiveinfo())\n                showMuiFlashMessage(dispatch, translations.wrongEmailPassword , 'error');\n                setTimeout(function(){ \n                        dispatch(createHideLoginError()) \n                 }, 2000);\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport function signup(){\n    const name = store.getState().form.signupForm.values.name;// in this case store is available\n    const email = store.getState().form.signupForm.values.email;// in this case store is available\n    const password = store.getState().form.signupForm.values.password;// in this case store is available\n    const recaptchaFromStore = store.getState().loginSignUpReducer.signupCaptchaText;\n    const recaptchaFromForm = store.getState().form.signupForm.values.captcha;\n    const ifRecaptchaEnabled = store.getState().settingsReducer.needToShowRecaptcha;\n    const translations = {\n        accountCreateSuccess:  store.getState().settingsReducer.language === 'en' ? messages.en.accountCreateSuccess : messages.ru.accountCreateSuccess,\n        wrongRecaptcha:  store.getState().settingsReducer.language === 'en' ? messages.en.wrongRecaptcha : messages.ru.wrongRecaptcha,\n        emailTaken: store.getState().settingsReducer.language === 'en' ? messages.en.emailTaken : messages.ru.emailTaken,\n        nameTaken: store.getState().settingsReducer.language === 'en' ? messages.en.nameTaken : messages.ru.nameTaken,\n    }\n    let errorMessage;\n    return (dispatch) => {\n        if((ifRecaptchaEnabled === 1) && (recaptchaFromStore !== recaptchaFromForm)){\n            showMuiFlashMessage(dispatch, translations.wrongRecaptcha, 'error');\n            return false;\n        } \n        return axios.post(BaseUrl + 'react/signup', {name, email, password})\n        .then(response => {\n            if(response.data.data.success === \"true\"){\n                dispatch(setRoleId(response.data.data.role_id));\n                dispatch(setUserName(response.data.data.name));\n                dispatch(setJWToken(response.data.data.jwt_token));\n                dispatch(setUserId(response.data.data.id));\n                dispatch(setCookieConsenGiven(response.data.data.cookie_consent_given));\n                dispatch(reset('signupForm'));\n                showMuiFlashMessage(dispatch, translations.accountCreateSuccess, 'success');\n            } else {\n                if(response.data.data.message === \"This email is already taken\"){\n                    errorMessage = translations.emailTaken;\n                } else if(response.data.data.message === \"This name is already taken\"){\n                    errorMessage = translations.nameTaken;\n                }\n                dispatch(clearSensitiveinfo())\n                showMuiFlashMessage(dispatch, errorMessage, 'error');\n                setTimeout(function(){ \n                    dispatch(createHideLoginError()) \n             }, 2000);\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport function setRedirectFlagForPasswordResetFunction(value){\n    return (dispatch) => {\n        dispatch(setRedirectFlagForPasswordResetFunctioDispatch(value));\n    };\n}\n\nexport function sentForgotPasswordForm(){\n    const username = store.getState().form.forgotPasswordFormRedux.values.username;// in this case store is available\n    const email = store.getState().form.forgotPasswordFormRedux.values.email;// in this case store is available\n    const recaptchaFromStore = store.getState().loginSignUpReducer.signupCaptchaText;\n    const recaptchaFromForm = store.getState().form.forgotPasswordFormRedux.values.captcha;\n    const translations = {\n        forgotPasswordSuccess:  store.getState().settingsReducer.language === 'en' ? messages.en.forgotPasswordSuccess : messages.ru.forgotPasswordSuccess,\n        wrongRecaptcha:  store.getState().settingsReducer.language === 'en' ? messages.en.wrongRecaptcha : messages.ru.wrongRecaptcha,\n    }\n    return (dispatch) => {\n        if((recaptchaFromStore !== recaptchaFromForm)){\n            showMuiFlashMessage(dispatch, translations.wrongRecaptcha, 'error');\n            return false;\n        } \n        return axios.post(BaseUrl + 'react/forgotpassword', {username, email})\n        .then(response => {\n            if(response.data.data.success === \"true\"){\n                dispatch(reset('forgotPasswordFormRedux'));\n                showMuiFlashMessage(dispatch, translations.forgotPasswordSuccess, 'success');\n            } else {\n                dispatch(clearSensitiveinfo())\n                showMuiFlashMessage(dispatch, response.data.data.message , 'error');\n                setTimeout(function(){ \n                    dispatch(createHideLoginError()) \n             }, 2000);\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport function resetPassword(){\n    const password = store.getState().form.passwordresetform.values.password;// in this case store is available\n    const passwordRepeat = store.getState().form.passwordresetform.values.repeatpassword;// in this case store is available\n    const translations = {\n        newpasswordsavedsucess:  store.getState().settingsReducer.language === 'en' ? messages.en.newpasswordsavedsucess : messages.ru.newpasswordsavedsucess,\n        wrongRecaptcha:  store.getState().settingsReducer.language === 'en' ? messages.en.wrongRecaptcha : messages.ru.wrongRecaptcha,\n    }\n    return (dispatch) => {\n        return axios.post(BaseUrl + 'react/resetpassword', {password, passwordRepeat})\n        .then(response => {\n            if(response.data.data.success === \"true\"){\n                dispatch(reset('passwordresetform'));\n                showMuiFlashMessage(dispatch, translations.newpasswordsavedsucess, 'success');\n                dispatch(setRedirectFlagForPasswordResetFunctioDispatch(2));//this is done for redirecting from reset form page to login page upon succesfull password reset\n            } else {\n                dispatch(clearSensitiveinfo())\n                showMuiFlashMessage(dispatch, response.data.data.message , 'error');\n                setTimeout(function(){ \n                    dispatch(createHideLoginError()) \n             }, 2000);\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport function logoutUser(){\n    const translations = {\n        logoutSuccess:  store.getState().settingsReducer.language === 'en' ? messages.en.logoutSuccess : messages.ru.logoutSuccess,\n    }\n    return(dispatch) => {\n        dispatch(clearSensitiveinfo())\n        showMuiFlashMessage(dispatch, translations.logoutSuccess, 'success');\n    }\n}\n\nexport function setMuiFlashVisibility(value){\n    return(dispatch) => {\n        dispatch(changeMuiFlashMessageVisibility(value))\n    }\n}\n\nexport function resendEmailConfirmation(){\n    const userId = store.getState().loginSignUpReducer.userId;\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    const translations = {\n        emailConfirmationSuccess:  store.getState().settingsReducer.language === 'en' ? messages.en.emailConfirmationSuccess : messages.ru.emailConfirmationSuccess,\n    }\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/resendemailconfirmation/' + userId, {\n            headers: headers\n        }).then((responce)=>{\n            if(responce.data.payload.success === \"true\"){\n                showMuiFlashMessage(dispatch, translations.emailConfirmationSuccess, 'success');\n            } else {\n                alert(\"Network error, please try again later resendEmailConfirmation\");\n            };\n        })\n    }\n}\n\nexport function setRecaptchaText(text){\n    return(dispatch) => {\n        dispatch(setRecaptchaTextDispatch(text))\n    }\n}\n\nfunction setRecaptchaTextDispatch(text){\n    return{\n        type: SET_SIGNUP_CAPTCHA_TEXT,\n        recaptchaText: text    \n    }\n}\n\nfunction setRoleId(roleId){\n    return{\n        type: SET_ROLE_ID,\n        roleId: roleId    \n    }\n}\n\nfunction setUserSuspensionReason(reason){\n    return{\n        type: SET_SUSPENSION_REASON,\n        suspensionReason: reason    \n    }\n}\n\nfunction setRedirectFlagForPasswordResetFunctioDispatch(value){\n    return{\n        type: SET_REDIRECT_FLAG_FOR_RESET_PASWORD_FUNCTION,\n        redirectFlagForPasswordResetFunction: value    \n    }\n}\n\nfunction setCookieConsenGiven(value){\n    return{\n        type: SET_COOKIE_CONSENT_OBTAINED,\n        cookieConsenGiven: value    \n    }\n}\n\nfunction setUserName(userName){\n    return{\n        type: SET_USER_NAME,\n        userName: userName    \n    }\n}\n\nfunction setUserId(userId){\n    return{\n        type: SET_USER_ID,\n        userId: userId    \n    }\n}\n\nfunction setJWToken(JWToken){\n    return{\n        type: SET_JWT_TOKEN,\n        JWToken: JWToken    \n    }\n}\n\nfunction createHideLoginError(){\n    return{\n        type: LOGIN_ERROR,\n        loginError: '',\n        loginErrorVisibility: 'hidden'\n    }\n}\n\nfunction clearSensitiveinfo(){\n    return{\n        type: CLEAR_SENSITIVE_INFO,\n    }\n}\n\nfunction changeMuiFlashMessageVisibility(value){\n    return{\n        type: SET_MUI_FLASH_MESSAGES_VISIBILITY,\n        muiFlashMessageVisibility: value    \n    } \n}\n","import axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport { SET_USERS, CLEAR_SENSITIVE_INFO, SET_FLASH_MESSAGES_VISIBILITY, SET_FLASH_MESSAGES_MESSAGE, SET_FLASH_MESSAGES_TYPE } from '../types';\nimport store from '../index.js';\n\nconst BaseUrl = helpers.UrlSniffer();\n\nexport function loadUsers(){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/users', {\n            headers: headers\n        })\n        .then((response)=>{\n            if(response.data.payload.success === \"true\"){\n                dispatch(setUsers(response.data.payload.users))\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n    }\n}\n\nexport const deleteUser = ({id}) => {\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.delete(BaseUrl + 'react/deleteusers/'+ id,  {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                return axios.get(BaseUrl + 'react/users', {\n                    headers: headers\n                })\n                .then((response)=>{\n                    if(response.data.payload.success === \"true\"){\n                        dispatch(setUsers(response.data.payload.users))\n                        showFlashMessage(dispatch, 'User has been deleted successfully', 'success');\n                    } else {\n                        dispatch(clearSensitiveinfo())\n                    };\n                })\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            dispatch(clearSensitiveinfo());\n        });\n    };\n}\n\nexport const toggleuserconfirm = ({id}) => {\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/toggleuserconfirm/'+ id,  {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                return axios.get(BaseUrl + 'react/users', {\n                    headers: headers\n                })\n                .then((response)=>{\n                    if(response.data.payload.success === \"true\"){\n                        dispatch(setUsers(response.data.payload.users))\n                        showFlashMessage(dispatch, 'User has been confirmed successfully', 'success');\n                    } else {\n                        dispatch(clearSensitiveinfo())\n                    };\n                })\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            dispatch(clearSensitiveinfo());\n        });\n    };\n}\n\nexport const toggleusersuspend = ({id, reason}) => {\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/toggleusersuspended/' +  id + '/' + reason,  {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                return axios.get(BaseUrl + 'react/users', {\n                    headers: headers\n                })\n                .then((response)=>{\n                    if(response.data.payload.success === \"true\"){\n                        dispatch(setUsers(response.data.payload.users))\n                        showFlashMessage(dispatch, 'Users status has been changed successfully', 'success');\n                    } else {\n                        dispatch(clearSensitiveinfo())\n                    };\n                })\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            dispatch(clearSensitiveinfo());\n        });\n    };\n}\n\nfunction setUsers(users){\n    return{\n        type: SET_USERS,\n        users: users    \n    }\n}\n\nfunction clearSensitiveinfo(){\n    return{\n        type: CLEAR_SENSITIVE_INFO,\n    }\n}\n\nfunction showFlashMessage(dispatch, message, type){\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n    dispatch(changeFlashMessageVisibility(1));\n    dispatch(changeFlashMessageMessage(message));\n    dispatch(changeFlashMessageType(type));\n    setTimeout(function(){ dispatch(changeFlashMessageVisibility(0)); }, timeout);\n}\n\nfunction changeFlashMessageVisibility(value){\n    return{\n        type: SET_FLASH_MESSAGES_VISIBILITY,\n        flashMessageVisibility: value    \n    } \n}\n\nfunction changeFlashMessageMessage(message){\n    return{\n        type: SET_FLASH_MESSAGES_MESSAGE,\n        flashMessageMessage: message    \n    }\n}\n\nfunction changeFlashMessageType(type){\n    return{\n        type: SET_FLASH_MESSAGES_TYPE,\n        flashMessageType: type    \n    }\n}","const messages = {\n    en: {\n        subjEditSuccess: \"Subject has been edited successfully\",\n        subjdeleteSuccess: \"Subject has been deleted successfully\",\n        subjAddSuccess: \"Subject has been added successfully\",\n    },\n    ru: {\n        subjEditSuccess: \"Предмет успешно отредактирован\",\n        subjdeleteSuccess: \"Предмет успешно удален\",\n        subjAddSuccess: \"Предмет успешно добавлен\",\n    }\n  };\n\n  export default messages;","import axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport { LOAD_SUBJECTS_ADMIN, LOAD_SUBJECTS_USER, CLEAR_SENSITIVE_INFO, SET_RESULTS_FILTER_ACTIVE_SUBJECTS, \n    SET_FLASH_MESSAGES_VISIBILITY, SET_FLASH_MESSAGES_MESSAGE, SET_FLASH_MESSAGES_TYPE } from '../types';\nimport store from '../index.js';\nimport {reset} from 'redux-form';\nimport messages from '../translations/actions/subjects';\n\nconst BaseUrl = helpers.UrlSniffer();\n\nexport function loadSubjects(){// this is for user, no JWT token needed\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/subjects').then((responce)=>{\n            dispatch(changeSubjectsAdmin(responce.data.payload.subjects))\n        })\n    }\n}\n\nexport const saveSubject = ({id, name}) => {\n    const translations = {\n        subjEditSuccess:  store.getState().settingsReducer.language === 'en' ? messages.en.subjEditSuccess : messages.ru.subjEditSuccess,\n    }\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.post(BaseUrl + 'react/editsubjects', {id, name}, {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                return axios.get(BaseUrl + 'react/subjectsadmin', {\n                    headers: headers\n                }).then((responce)=>{\n                    dispatch(changeSubjectsAdmin(responce.data.payload.subjects))\n                    showFlashMessage(dispatch, translations.subjEditSuccess, 'success');\n                })\n            } else {\n                dispatch(clearSensitiveinfo([]))\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport const deleteSubject = ({id}) => {\n    const translations = {\n        subjdeleteSuccess:  store.getState().settingsReducer.language === 'en' ? messages.en.subjdeleteSuccess : messages.ru.subjdeleteSuccess,\n    }\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.delete(BaseUrl + 'react/deletesubjects/'+ id,  {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                return axios.get(BaseUrl + 'react/subjectsadmin', {\n                    headers: headers\n                }).then((responce)=>{\n                    dispatch(changeSubjectsAdmin(responce.data.payload.subjects))\n                    showFlashMessage(dispatch, translations.subjdeleteSuccess, 'success');\n                })\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            throw(error.message);\n        });\n    };\n}\n\nexport function addSubjectOne(){\n    const translations = {\n        subjAddSuccess:  store.getState().settingsReducer.language === 'en' ? messages.en.subjAddSuccess : messages.ru.subjAddSuccess,\n    }\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const subject = store.getState().form.addSubjectForm.values.subject;// in this case store is available\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.post(BaseUrl + 'react/addsubjects', {subject}, {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                this.loadSubjectsAdmin();\n                dispatch(reset('addSubjectForm'));\n                showFlashMessage(dispatch, translations.subjAddSuccess, 'success');\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport const toggleSubjectActivity = ({id}) => {\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/togglesubjectactivity/'+ id,  {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                return axios.get(BaseUrl + 'react/subjectsadmin', {\n                    headers: headers\n                })\n        .then((responce)=>{\n                    if(response.data.payload.success === \"true\"){\n                        dispatch(changeSubjectsAdmin(responce.data.payload.subjects));\n                        dispatch(changeFlashMessageVisibility(1));\n                        dispatch(changeFlashMessageMessage('Subject activity has been changed successfully'));\n                        dispatch(changeFlashMessageType('success'));\n                        setTimeout(function(){ dispatch(changeFlashMessageVisibility(0)); }, timeout);\n                        return axios.get(BaseUrl + 'react/subjects')\n        .then(responce => {\n                            if(responce.data.payload.success === \"true\"){\n                                let selectedCheckboxes = new Set();// we need this to be able to filter results in advance, this is one of the filters to show results\n                                responce.data.payload.subjects.map((subject) =>selectedCheckboxes.add(subject.name))// we need this to be able to filter.......\n                                dispatch(ResultsFilterActiveSubjects([...selectedCheckboxes]))// we need this to be able to filter results.......\n                                dispatch(changeSubjectsUser(responce.data.payload.subjects))\n                            } \n                        })\n                        .catch(error => {\n                            throw(error);\n                        });\n                    } else {\n                        dispatch(clearSensitiveinfo())\n                    };\n                })\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            throw(error.message);\n        });\n    };\n}\n\nexport function loadSubjectsAdmin(){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/subjectsadmin', {\n            headers: headers\n        })\n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n                dispatch(changeSubjectsAdmin(responce.data.payload.subjects))\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nexport function loadSubjectsUsers(){\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/subjects')\n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n                let selectedCheckboxes = new Set();// we need this to be able to filter results in advance, this is one of the filters to show results\n                responce.data.payload.subjects.map((subject) =>selectedCheckboxes.add(subject.name))// we need this to be able to filter.......\n                dispatch(ResultsFilterActiveSubjects([...selectedCheckboxes]))// we need this to be able to filter results.......\n                dispatch(changeSubjectsUser(responce.data.payload.subjects))\n            } \n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nfunction showFlashMessage(dispatch, message, type){\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n    dispatch(changeFlashMessageVisibility(1));\n    dispatch(changeFlashMessageMessage(message));\n    dispatch(changeFlashMessageType(type));\n    setTimeout(function(){ dispatch(changeFlashMessageVisibility(0)); }, timeout);\n}\n\nfunction changeSubjectsAdmin(subjects){\n    return{\n        type: LOAD_SUBJECTS_ADMIN,\n        subjects: subjects    \n    }\n}\n\nfunction changeSubjectsUser(subjects){\n    return{\n        type: LOAD_SUBJECTS_USER,\n        subjectsUser: subjects    \n    }\n}\n\nfunction clearSensitiveinfo(){\n    return{\n        type: CLEAR_SENSITIVE_INFO,\n    }\n}\n\nfunction changeFlashMessageVisibility(value){\n    return{\n        type: SET_FLASH_MESSAGES_VISIBILITY,\n        flashMessageVisibility: value    \n    } \n}\n\nfunction changeFlashMessageMessage(message){\n    return{\n        type: SET_FLASH_MESSAGES_MESSAGE,\n        flashMessageMessage: message    \n    }\n}\n\nfunction changeFlashMessageType(type){\n    return{\n        type: SET_FLASH_MESSAGES_TYPE,\n        flashMessageType: type    \n    }\n}\n\nfunction ResultsFilterActiveSubjects(subjects){\n    return{\n        type: SET_RESULTS_FILTER_ACTIVE_SUBJECTS,\n        resultsFilterActiveSubjects: subjects    \n    }\n}","import axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport { LOAD_RESULTS, CLEAR_SENSITIVE_INFO, SET_RESULTS_FILTERED, SET_RESULTS_FILTER_ACTIVE_SUBJECTS, \n    SET_RESULTS_FILTER_ITEMS_PAGE, SET_RESULTS_FILTER_NUMBER_OF_PAGINATIONS, SET_RESULTS_FILTER_CURRENT_PAGINATION, SET_RESULTS_FILTER_SORTING_OPTION, SET_OVERLAY_VISIBILITY } from '../types';\nimport store from '../index.js';\n\nconst BaseUrl = helpers.UrlSniffer();\n\nexport function loadResults(){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const itemsPerPage = store.getState().resultsReducer.resultsFilterPerPage;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/results', {\n            headers: headers\n        })\n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n                let resultsFilterBySubjectsAndSort = helpers.FilterBySubjectsAndSort(responce.data.payload.results, store.getState().resultsReducer.resultsFilterActiveSubjects, store.getState().resultsReducer.resultsFilterSortingOption);\n                dispatch(setNumberOfPaginationAction(Math.ceil(resultsFilterBySubjectsAndSort.length/itemsPerPage)));\n                dispatch(setResultsFiltered(helpers.PaginatedResults(resultsFilterBySubjectsAndSort, itemsPerPage, store.getState().resultsReducer.resultsFilterPaginationNumber)))\n                dispatch(changeResults(responce.data.payload.results))\n                dispatch(setOverlayVisibilityDispatch(false))\n            } else {\n                dispatch(setOverlayVisibilityDispatch(false))\n                dispatch(clearSensitiveinfo([]))\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nexport function setResultsFilterActiveSubjects(subjects){\n    return(dispatch) => {\n        dispatch(ResultsFilterActiveSubjects(subjects))\n    }\n}\n\nexport function setNumberOfPaginationAction(number){\n    return(dispatch) => {\n        dispatch(setNumberOfPagination(number))\n    }\n}\n\nexport const setOverlayVisibility = (bool) => {\n    return (dispatch) => {\n        dispatch(setOverlayVisibilityDispatch(bool))\n    };\n}\n\nexport function setOverlayVisibilityDispatch(bool){\n    return{\n        type: SET_OVERLAY_VISIBILITY,\n        visibility: bool\n    }\n}\n\nexport function setResultsFiltered(results){\n    return(dispatch) => {\n        dispatch(ResultsFiltered(results))\n    }\n}\n\nexport function setItemsPerPage(items){\n    return(dispatch) => {\n        dispatch(setItemPerPage(items))\n    }\n}\n\nexport function setCurrentPaginationAction(number){\n    return(dispatch) => {\n        dispatch(setCurrentPagination(number))\n    }\n}\n\nexport function setSortingOptionAction(number){\n    return(dispatch) => {\n        dispatch(setSortingOption(number))\n    }\n}\n\nfunction setSortingOption(number){\n    return {\n        type: SET_RESULTS_FILTER_SORTING_OPTION,\n        sortingOption: number \n    }\n}\n\nfunction setCurrentPagination(number){\n    return {\n        type: SET_RESULTS_FILTER_CURRENT_PAGINATION,\n        currentPagination: number \n    }\n}\n\nfunction setNumberOfPagination(number){\n    return {\n        type: SET_RESULTS_FILTER_NUMBER_OF_PAGINATIONS,\n        numberOfPagination: number \n    }\n}\n\nfunction setItemPerPage(items){\n    return {\n        type: SET_RESULTS_FILTER_ITEMS_PAGE,\n        items: items \n    }\n}\n\nfunction ResultsFiltered(ResultsFiltered){\n    return{\n        type: SET_RESULTS_FILTERED,\n        resultsFiltered: ResultsFiltered    \n    }\n}\n\nfunction ResultsFilterActiveSubjects(subjects){\n    return{\n        type: SET_RESULTS_FILTER_ACTIVE_SUBJECTS,\n        resultsFilterActiveSubjects: subjects    \n    }\n}\n\nfunction changeResults(results){\n    return{\n        type: LOAD_RESULTS,\n        results: results    \n    }\n}\n\n\nfunction clearSensitiveinfo(){\n    return{\n        type: CLEAR_SENSITIVE_INFO,\n    }\n}","import axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport { CLEAR_SENSITIVE_INFO, SET_FLASH_MESSAGES_VISIBILITY, SET_FLASH_MESSAGES_MESSAGE, SET_FLASH_MESSAGES_TYPE, SET_LANGUAGE, SET_GLOBAL_SETTINGS, \n    SET_COOKIE_CONSENT_VISIBILITY, SET_COOKIE_CONSENT_OBTAINED } from '../types';\nimport store from '../index.js';\n\nconst BaseUrl = helpers.UrlSniffer();\n\nexport function setLanguage(lang){\n    return(dispatch) => {\n        dispatch(setLanguageDispatch(lang))\n    }\n}\n\nexport function changePassword(){\n    const password = store.getState().form.changePasswordFormRedux.values.password;// in this case store is available\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.post(BaseUrl + 'react/changepassword', { password }, {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                dispatch(clearSensitiveinfo())\n                dispatch(changeFlashMessageVisibility(1));\n                dispatch(changeFlashMessageMessage('Password has been changed successfully, please login with new credentials'));\n                dispatch(changeFlashMessageType('success'));\n                setTimeout(function(){ dispatch(changeFlashMessageVisibility(0)); }, timeout);\n            } else {\n                alert(\"Network error, please try again later\");\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport function toggleEmailConfirmation(){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/toggleemailconfirmation', {\n            headers: headers\n        }).then((responce)=>{\n            if(responce.data.payload.success === \"true\"){\n                dispatch(changeSettingsAdmin(responce.data.payload.settings));\n                dispatch(changeFlashMessageVisibility(1));\n                dispatch(changeFlashMessageMessage('Email confirmation has been changed successfully'));\n                dispatch(changeFlashMessageType('success'));\n                setTimeout(function(){ dispatch(changeFlashMessageVisibility(0)); }, timeout);\n            } else {\n                alert(\"Network error, please try again later\");\n            };\n        })\n    }\n}\n\nexport function toggleRecaptcha(){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/toggletogglerecaptcha', {\n            headers: headers\n        }).then((responce)=>{\n            if(responce.data.payload.success === \"true\"){\n                dispatch(changeSettingsAdmin(responce.data.payload.settings));\n                dispatch(changeFlashMessageVisibility(1));\n                dispatch(changeFlashMessageMessage('Recaptcha has been changed successfully'));\n                dispatch(changeFlashMessageType('success'));\n                setTimeout(function(){ dispatch(changeFlashMessageVisibility(0)); }, timeout);\n            } else {\n                alert(\"Network error, please try again later\");\n            };\n        })\n    }\n}\n\nexport function loadGlobalSettings(lang){\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/getglobalsettings').then((responce)=>{\n            if(responce.data.payload.success === \"true\"){\n                dispatch(changeSettingsAdmin(responce.data.payload.settings))\n            } else {\n                alert(\"Network error, please try again later\");\n            };\n        })\n    }\n}\n\nexport function setCookieConsentVisibility(visibility){\n    const userId = store.getState().loginSignUpReducer.userId;\n    const roleId = store.getState().loginSignUpReducer.roleId;\n    if(visibility === 0 && userId && roleId !== 4){ /// roleId == 4 is the suspended user \n        const JWT = store.getState().loginSignUpReducer.JWToken;\n        const headers = { 'JWToken': JWT };\n        return (dispatch) => {\n            return axios.get(BaseUrl + 'react/cookieconsent/'+ userId, {\n                headers: headers\n            }).then((responce)=>{\n                if(responce.data.payload.success === \"true\"){\n                    dispatch(setCookieConsenGiven(1));\n                    dispatch(setCookieConsentVisibilityDispatch(0))\n                } else {\n                    alert(\"Network error, please try again later\");\n                };\n            })\n        }\n    } else if(visibility === 0){\n        return (dispatch) => {\n            dispatch(setCookieConsentVisibilityDispatch(0))\n        }\n    }\n\n    return (dispatch) => {\n        dispatch(setCookieConsentVisibilityDispatch(1))\n    }\n}\n\nfunction setLanguageDispatch(lang){\n    return{\n        type: SET_LANGUAGE,\n        lang: lang    \n    }\n}\n\nfunction setCookieConsentVisibilityDispatch(visibility){\n    return{\n        type: SET_COOKIE_CONSENT_VISIBILITY,\n        cookieConsentVisibility: visibility    \n    }\n}\n\nfunction clearSensitiveinfo(){\n    return{\n        type: CLEAR_SENSITIVE_INFO,\n    }\n}\n\nfunction changeFlashMessageVisibility(value){\n    return{\n        type: SET_FLASH_MESSAGES_VISIBILITY,\n        flashMessageVisibility: value    \n    } \n}\n\nfunction changeFlashMessageMessage(message){\n    return{\n        type: SET_FLASH_MESSAGES_MESSAGE,\n        flashMessageMessage: message    \n    }\n}\n\nfunction changeFlashMessageType(type){\n    return{\n        type: SET_FLASH_MESSAGES_TYPE,\n        flashMessageType: type    \n    }\n}\n\nfunction changeSettingsAdmin(settings){\n    return{\n        type: SET_GLOBAL_SETTINGS,\n        settings: settings    \n    }\n}\n\nfunction setCookieConsenGiven(value){\n    return{\n        type: SET_COOKIE_CONSENT_OBTAINED,\n        cookieConsenGiven: value    \n    }\n}","import axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport { SET_CURRENT_CONTRIBUTION_SUBJECT_ID, SET_CURRENT_CONTRIBUTION_SUBJECT_NAME, \n    SET_ADMIN_CONTRIBUTION, CLEAR_SENSITIVE_INFO, SET_CONTRIBUTION_CONTENT, SET_REDIRECT_FLAG_FORADMIN, SET_USER_CONTRIBUTION, SET_USER_CONTRIBUTION_ITEM }  from '../types';\nimport {reset} from 'redux-form';\nimport store from '../index.js';\nimport showMuiFlashMessage from './snackBarControl';\n\n\nconst BaseUrl = helpers.UrlSniffer();\n\nexport const setCurrentContributionSubjectId = (id) => {\n    return (dispatch) => {\n        dispatch(setCurrSubjectContributionIdRedux(id))\n    };\n}\n\nexport const setCurrentContributionSubjectname = (name) => {\n    return (dispatch) => {\n        dispatch(setCurrSubjectContributionNameRedux(name))\n    };\n}\n\nexport function sentMyContributionSaga({question, firstAnswer, secondAnswer, thirdAnswer, fourthAnswer, subjectId}){\n    return (dispatch) => {\n        dispatch(sentMyContributionSagADispatch({question, firstAnswer, secondAnswer, thirdAnswer, fourthAnswer, subjectId}))\n    };\n}\n\nfunction sentMyContributionSagADispatch({question, firstAnswer, secondAnswer, thirdAnswer, fourthAnswer, subjectId}){\n    return{\n        type: 'POST_CONTRIBUTION_SAGA', question, firstAnswer, secondAnswer, thirdAnswer, fourthAnswer, subjectId\n    }\n}\n\nexport function saveContributionAdmin() {\n    const question = store.getState().form.editContibutionFormAdminRedux.values.question;\n    const firstAnswer = store.getState().form.editContibutionFormAdminRedux.values.uncorrect0;\n    const secondAnswer = store.getState().form.editContibutionFormAdminRedux.values.uncorrect1;\n    const thirdAnswer = store.getState().form.editContibutionFormAdminRedux.values.uncorrect2;\n    const fourthAnswer = store.getState().form.editContibutionFormAdminRedux.values.answerCorrect;\n    const contibutionid = store.getState().form.editContibutionFormAdminRedux.values.contibutionid;\n    const subjectId = store.getState().form.editContibutionFormAdminRedux.values.subjectId;\n    const userId = store.getState().form.editContibutionFormAdminRedux.values.userId;\n\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.post(BaseUrl + 'react/approvecontributionitemadmin', { question, firstAnswer, secondAnswer, thirdAnswer, fourthAnswer, contibutionid, subjectId, userId }, {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                dispatch(reset('editContibutionFormAdminRedux'));\n                showMuiFlashMessage(dispatch, 'Approved and saved, thanks', 'success');\n                dispatch(setContributionItemAdminResults({}));\n                dispatch(setRedirectFlagForAdminDispatch(2));\n            } else {\n                showMuiFlashMessage(dispatch, 'Network error', 'error');\n            };\n        })\n        .catch(error => {\n            showMuiFlashMessage(dispatch, 'Network error', 'error');\n        });\n    };\n}\n\nexport function declineContributionAdmin() {\n    const contibutionid = store.getState().form.editContibutionFormAdminRedux.values.contibutionid;\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.post(BaseUrl + 'react/declinecontributionitemadmin', { contibutionid }, {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                dispatch(reset('editContibutionFormAdminRedux'));\n                showMuiFlashMessage(dispatch, 'Declined, thanks', 'success');\n                dispatch(setContributionItemAdminResults({}));\n                dispatch(setRedirectFlagForAdminDispatch(2));// this is done for auto redirection\n            } else {\n                showMuiFlashMessage(dispatch, 'Network error', 'error');\n            };\n        })\n        .catch(error => {\n            showMuiFlashMessage(dispatch, 'Network error', 'error');\n        });\n    };\n}\n\nexport function clearAdminContributionItem(){\n    return (dispatch) => {\n        dispatch(setContributionItemAdminResults({}))\n    };\n}\n\nexport function loadContributionAdmin(){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/getcontributionadmin', {\n            headers: headers\n        })\n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n                dispatch(setContributionAdminResults(responce.data.payload.contibution))\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nexport function loadContributionItemAdmin(id){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/getcontributionitemadmin/' + id, {\n            headers: headers\n        })\n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n                dispatch(setContributionItemAdminResults(responce.data.payload.content))\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nexport function loadContributionItemUser(id){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n\n    return (dispatch) => {\n \n        return axios.get(BaseUrl + 'react/getcontributionitemuser/' + id, {\n            headers: headers\n        })\n       \n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n                dispatch(setContributionItemUserResults(responce.data.payload.content))\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nexport function loadContributionUser(){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/getcontributionuser', {\n            headers: headers\n        })\n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n                dispatch(setContributionUserResults(responce.data.payload.contibution))\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nexport function setRedirectFlagForAdmin(value){\n    return (dispatch) => {\n        dispatch(setRedirectFlagForAdminDispatch(value))\n    }\n} \n\nfunction setContributionUserResults(value){\n    return{\n        type: SET_USER_CONTRIBUTION,\n        userContribution: value    \n    } \n}\n\nfunction setRedirectFlagForAdminDispatch(value){\n    return{\n        type: SET_REDIRECT_FLAG_FORADMIN,\n        redirectFlagForAdmin: value    \n    }  \n}\n\nfunction setCurrSubjectContributionIdRedux(id){\n    return{\n        type: SET_CURRENT_CONTRIBUTION_SUBJECT_ID,\n        subjectId: id    \n    }\n}\n\nfunction setCurrSubjectContributionNameRedux(name){\n    return{\n        type: SET_CURRENT_CONTRIBUTION_SUBJECT_NAME,\n        subjectName: name    \n    }\n}\n\nfunction setContributionAdminResults(contribution){\n    return{\n        type: SET_ADMIN_CONTRIBUTION,\n        contributionAdminResults: contribution    \n    }\n}\n\nfunction clearSensitiveinfo(){\n    return{\n        type: CLEAR_SENSITIVE_INFO,\n    }\n}\n\nfunction setContributionItemAdminResults(content){\n    return{\n        type: SET_CONTRIBUTION_CONTENT,\n        contributionAdminItemResults: content    \n    }\n}\n\nfunction setContributionItemUserResults(content){\n    return{\n        type: SET_USER_CONTRIBUTION_ITEM,\n        contributionUserItemResults: content    \n    }\n}","const messages = {\n    en: {\n      users: \"Users\",\n      addQuestion: \"Add question\",\n      editQuestion: \"Edit question\",\n      firstt: \"First, please select subject:\",\n      select: \"Select subject\",\n      currentSubject: \"Current subject\",\n      questHasBeenAddedSucc: \"Question/answers has been added successfully, thanks\",\n      filterResults: \"Filter results\",\n      itemsPerPage: \"Items qty per page\",\n      status: \"Status\",\n      subject: \"Subject\",\n      cleareditedList: \"Clear edited questions list\",\n\n    },\n    ru: {\n      users: \"Пользователи\",\n      addQuestion: \"Добавить вопрос\",\n      editQuestion: \"Редактировать вопрос\",\n      firstt: \"Сначала выберите тему:\",\n      select: \"Bыберите тему\",\n      currentSubject: \"Текущая тема\",\n      questHasBeenAddedSucc: \"Вопрос/ответы успешно добавлены, спасибо\",\n      filterResults: \"Фильтровать результаты\",\n      itemsPerPage: \"Pез. на страницу\",\n      status: \"Cтaтyc\",\n      cleareditedList: \"Clear edited questions list\",\n    }\n  };\n\n  export default messages;","import axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport { LOAD_SUBJECTS_ADMIN, CLEAR_SENSITIVE_INFO,  \n    SET_FLASH_MESSAGES_VISIBILITY, SET_CURRENT_SUBJECT_ID_TO_ADD_QUESTION, SET_RESULTS_FILTERED, SET_RESULTS_FILTER_ITEMS_PAGE,\n    SET_CURRENT_QUESTIONS_BY_SUBJECT_TO_EDIT, \n    SET_NUMBER_OF_CURRENT_QUESTIONS_BY_SUBJECT_TO_EDIT, \n    SET_CURRENT_PAGINATION_QUESTIONS_BY_SUBJECT, \n    SET_PAGINATED_QUESTIONS, \n    SET_QUESTIONS_TO_EDIT_STATUS,\n    SET_ANSWERS_FOR_QUESTION_ID,\n    SET_ADMIN_EDIT_QUESTION_ITEM,\n    SET_CURRENT_SUBJECT_NAME_FOR_QUESTION_EDIT, SET_REDIRECT_FLAG_TO_BACK_TO_QUESTIONS_LIST, PUSH_EDITED_QUESTION_ID_TO_ARRAY_TO_BE_ABLE_TO_SEE_RECENTLY_EDITED_QUESTIONS,\n    CLEAR_EDITED_QUESTIONS_LIST } from '../types';\nimport store from '../index.js';\nimport {reset} from 'redux-form';\nimport messages from '../translations/Questions';\nimport showMuiFlashMessage from './snackBarControl';\n\n\nconst BaseUrl = helpers.UrlSniffer();\n\n\nexport function loadSubjectsAdmin(){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/subjectsadmin', {\n            headers: headers\n        })\n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n                dispatch(changeSubjectsAdmin(responce.data.payload.subjects))\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nexport function loadQuestions(){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const itemsPerPage = store.getState().questionsReducer.resultsFilterPerPage;\n    const currentPagination = store.getState().questionsReducer.currentPagination;\n    let currentSubjId = store.getState().questionsReducer.currentSubjectId;\n    const currentStatus = store.getState().questionsReducer.currentStatus;// all, active, unactive\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/questions/' + currentSubjId + '/' + currentStatus, {\n            headers: headers\n        })\n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n               dispatch(setNumberOfQuestionsToEdit(responce.data.payload.questions.length));\n               dispatch(setQuestionsToEdit(responce.data.payload.questions));\n               let paginatedQuestions = helpers.SimplePaginatedResults(responce.data.payload.questions, itemsPerPage, currentPagination);\n               dispatch(setResultsPaginated(paginatedQuestions));\n            } else {\n                dispatch(clearSensitiveinfo([]))\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nexport function toggleQuestionActivity(id){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const itemsPerPage = store.getState().questionsReducer.resultsFilterPerPage;\n    const currentPagination = store.getState().questionsReducer.currentPagination;\n    let currentSubjId = store.getState().questionsReducer.currentSubjectId;\n    const currentStatus = store.getState().questionsReducer.currentStatus;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/togglequestionactivity/' + id, {\n            headers: headers\n        })\n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n                return axios.get(BaseUrl + 'react/questions/' + currentSubjId + '/' + currentStatus, {\n                    headers: headers\n                })\n                .then(responce => {\n                    if(responce.data.payload.success === \"true\"){\n                       dispatch(setNumberOfQuestionsToEdit(responce.data.payload.questions.length));\n                       dispatch(setQuestionsToEdit(responce.data.payload.questions));\n                       let paginatedQuestions = helpers.SimplePaginatedResults(responce.data.payload.questions, itemsPerPage, currentPagination);\n                       dispatch(setResultsPaginated(paginatedQuestions));\n                    } else {\n                        dispatch(clearSensitiveinfo([]))\n                    };\n                })\n                .catch(error => {\n                    dispatch(clearSensitiveinfo([]))\n                });\n             } else {\n                 dispatch(clearSensitiveinfo([]))\n             };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nexport function resetQuestionsSet(){\n    return (dispatch) => {\n        dispatch(setNumberOfQuestionsToEdit(0));\n    }\n}\n\nexport function loadAnswers(id){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/answers/' + id, {\n            headers: headers\n        })\n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n                dispatch(setAnswers(responce.data.payload.answers));\n            } else {\n                dispatch(clearSensitiveinfo([]))\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nexport function loadQuestionsAndAnswersToEditAdmin(id){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n\n    return (dispatch) => {\n        return axios.get(BaseUrl + 'react/getquestionandanswerstoedit/' + id, {\n            headers: headers\n        })\n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n                dispatch(setQuestionsAndAnswersToEdit(responce.data.payload.content))\n            } else {\n                dispatch(clearSensitiveinfo())\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nexport function editQuestionsSaga({editedValues}){\n    return (dispatch) => {\n        dispatch(editQuestionsSagaDispatch({editedValues}));\n    }\n}\n\nexport function editQuestionsSagaDispatch({editedValues}){\n    return{\n        type: 'POST_EDITED_QUESTIONS',\n        editedValues: editedValues\n    }\n}\n\n\nexport function editSearchQuestionsSaga({editedValues}){\n    return (dispatch) => {\n        dispatch(editSearchQuestionsSagaDispatch({editedValues}));\n    }\n}\n\nexport function editSearchQuestionsSagaDispatch({editedValues}){\n    return{\n        type: 'POST_EDITED_SEARCH_QUESTIONS',\n        editedValues: editedValues\n    }\n}\n\n\n\nexport function deleteQuestion(ifNeedToRedirect){\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    const questionId = store.getState().questionsReducer.adminEditQuestionItem.questionId;\n    const itemsPerPage = store.getState().questionsReducer.resultsFilterPerPage;\n    const currentPagination = store.getState().questionsReducer.currentPagination;\n    let currentSubjId = store.getState().questionsReducer.currentSubjectId;\n    const currentStatus = store.getState().questionsReducer.currentStatus;\n\n    return (dispatch) => {\n        return axios.delete(BaseUrl + 'react/deletequestion/' + questionId, {\n            headers: headers\n        })\n        .then(responce => {\n            if(responce.data.payload.success === \"true\"){\n                return axios.get(BaseUrl + 'react/questions/' + currentSubjId + '/' + currentStatus, {\n                    headers: headers\n                })\n                .then(responce => {\n                    if(responce.data.payload.success === \"true\"){\n                        dispatch(setNumberOfQuestionsToEdit(responce.data.payload.questions.length));\n                        dispatch(pushQuestionIdToIdsArray(parseInt(questionId)));/// to be able to distinguish visually already edited questions (ex. table row bg color?)\n                        dispatch(setQuestionsToEdit(responce.data.payload.questions));\n                        let paginatedQuestions = helpers.SimplePaginatedResults(responce.data.payload.questions, itemsPerPage, currentPagination);\n                        dispatch(setResultsPaginated(paginatedQuestions));\n                        if(ifNeedToRedirect){\n                            dispatch(setRedirectFlagToBackToQuestionsList(2));\n                        }\n                        showMuiFlashMessage(dispatch, \"Question has been deleted successfully\", 'success');\n                    } else {\n                        showMuiFlashMessage(dispatch, \"Question deletedion failure\", 'error');\n                        dispatch(clearSensitiveinfo([]))\n                    };\n                })\n                .catch(error => {\n                    showMuiFlashMessage(dispatch, \"Question deletedion failure\", 'error');\n                    dispatch(clearSensitiveinfo([]))\n                });\n            } else {\n                showMuiFlashMessage(dispatch, \"Question deletedion failure\", 'error');\n                dispatch(clearSensitiveinfo([]))\n            };\n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}\n\nexport function setCurrentPagination(i){\n    return (dispatch) => {\n        dispatch(setCurrentPaginationDispatch(i));\n    }\n}\n\nexport function pushQuestionIdToIdsArray(id){\n    return (dispatch) => {\n        dispatch(pushQuestionIdToIdsArrayDispatch(id));\n    }\n}\n\nexport function setRedirectFlagToBackToQuestionsList(n){\n    return (dispatch) => {\n        dispatch(setRedirectFlagToBackToQuestionsListDispatch(n));\n    }\n}\n\nexport function setSubjName(name){\n    return (dispatch) => {\n        dispatch(setCurrentSubjectNameDispatch(name));\n    }\n}\n\nexport function clearEditedQuestionsList(){\n    return (dispatch) => {\n        dispatch(clearEditedQuestionsListDispatch());\n    }\n}\n\nexport function clearEditedQuestionsListDispatch(id){\n    return{\n        type: CLEAR_EDITED_QUESTIONS_LIST,\n        id: id    \n    }\n}\n\nexport function pushQuestionIdToIdsArrayDispatch(id){\n    return{\n        type: PUSH_EDITED_QUESTION_ID_TO_ARRAY_TO_BE_ABLE_TO_SEE_RECENTLY_EDITED_QUESTIONS,\n        id: id    \n    }\n}\n\nexport function setRedirectFlagToBackToQuestionsListDispatch(n){\n    return{\n        type: SET_REDIRECT_FLAG_TO_BACK_TO_QUESTIONS_LIST,\n        n: n    \n    }\n}\n\nexport function setCurrentSubjectNameDispatch(name){\n    return{\n        type: SET_CURRENT_SUBJECT_NAME_FOR_QUESTION_EDIT,\n        name: name    \n    }\n}\n\nfunction setQuestionsAndAnswersToEdit(content){\n    return{\n        type: SET_ADMIN_EDIT_QUESTION_ITEM,\n        content: content    \n    }\n}\n\nexport function setAnswers(answers){\n    return (dispatch) => {\n        dispatch(setAnswersToDispatch(answers));\n    }\n}\n\nexport const setAnswersToDispatch = (answers) => {\n    return{\n        type: SET_ANSWERS_FOR_QUESTION_ID,\n        answers: answers\n    }\n}\n\nexport function clearQuestions(){\n    return (dispatch) => {\n        dispatch(setQuestionsToEdit([]));\n        dispatch(setResultsPaginated([]));\n    }\n}\n\nexport function setResultsPaginated(results){\n    return (dispatch) => {\n        dispatch(setResultsPaginatedDispatch(results));\n    }\n}\n\nexport function setStatus(status){\n    return (dispatch) => {\n        dispatch(setStatusDispatch(status));\n    }\n}\n\nexport const setStatusDispatch = (status) => {\n    return{\n        type: SET_QUESTIONS_TO_EDIT_STATUS,\n        status: status\n    }\n}\n\nexport const setResultsPaginatedDispatch = (results) => {\n    return{\n        type: SET_PAGINATED_QUESTIONS,\n        results: results\n    }\n}\n\nexport const setCurrentPaginationDispatch = (number) => {\n    return{\n        type: SET_CURRENT_PAGINATION_QUESTIONS_BY_SUBJECT,\n        number: number\n    }\n}\n\nexport const setNumberOfQuestionsToEdit = (number) => {\n    return{\n        type: SET_NUMBER_OF_CURRENT_QUESTIONS_BY_SUBJECT_TO_EDIT,\n        number: number\n    }\n}\n\nexport const setQuestionsToEdit = (questions) => {\n    return{\n        type: SET_CURRENT_QUESTIONS_BY_SUBJECT_TO_EDIT,\n        questions: questions\n    }\n}\n\nexport const setCurrentSubjectIdToAddQuestion = (id) => {\n    return (dispatch) => {\n        dispatch(setCurrSubjectIdReduxToAddQuestion(id))\n    };\n}\n\nexport const setCurrSubjectIdReduxToAddQuestion = (id) => {\n    return{\n        type: SET_CURRENT_SUBJECT_ID_TO_ADD_QUESTION,\n        id: id\n    }\n}\n\nexport const addNewQuestionAdmin = () => {\n    const question = store.getState().form.editContibutionFormAdminRedux.values.question;\n    const firstAnswer = store.getState().form.editContibutionFormAdminRedux.values.uncorrect0;\n    const secondAnswer = store.getState().form.editContibutionFormAdminRedux.values.uncorrect1;\n    const thirdAnswer = store.getState().form.editContibutionFormAdminRedux.values.uncorrect2;\n    const fourthAnswer = store.getState().form.editContibutionFormAdminRedux.values.answerCorrect;\n    const subjectId = store.getState().questionsReducer.currentSubjectId;\n\n    const JWT = store.getState().loginSignUpReducer.JWToken;\n    const headers = { 'JWToken': JWT };\n    const timeout = store.getState().settingsReducer.flashMessagesTimeout;\n    const currentLang = store.getState().settingsReducer.language;\n    return (dispatch) => {\n        return axios.post(BaseUrl + 'react/addquestion', { question, firstAnswer, secondAnswer, thirdAnswer, fourthAnswer, subjectId }, {\n            headers: headers\n        })\n        .then(response => {\n            if(response.data.payload.success === \"true\"){\n                dispatch(reset('editContibutionFormAdminRedux'));\n                showMuiFlashMessage(dispatch, messages[currentLang].questHasBeenAddedSucc, 'success');\n                setTimeout(function(){ dispatch(changeFlashMessageVisibility(0)); }, timeout);\n            } else {\n                showMuiFlashMessage(dispatch, \"Network error\", 'error');\n            };\n        })\n        .catch(error => {\n            showMuiFlashMessage(dispatch, \"Network error\", 'error');\n        });\n    };\n}\n\nexport function setResultsFiltered(results){\n    return(dispatch) => {\n        dispatch(ResultsFiltered(results))\n    }\n}\n\nfunction ResultsFiltered(ResultsFiltered){\n    return{\n        type: SET_RESULTS_FILTERED,\n        resultsFiltered: ResultsFiltered    \n    }\n}\n\nexport function setItemsPerPage(items){\n    return(dispatch) => {\n        dispatch(setItemPerPage(items))\n    }\n}\n\nfunction setItemPerPage(items){\n    return {\n        type: SET_RESULTS_FILTER_ITEMS_PAGE,\n        items: items \n    }\n}\n\nfunction changeSubjectsAdmin(subjects){\n    return{\n        type: LOAD_SUBJECTS_ADMIN,\n        subjects: subjects    \n    }\n}\n\nfunction clearSensitiveinfo(){\n    return{\n        type: CLEAR_SENSITIVE_INFO,\n    }\n}\n\nfunction changeFlashMessageVisibility(value){\n    return{\n        type: SET_FLASH_MESSAGES_VISIBILITY,\n        flashMessageVisibility: value    \n    } \n}\n","export function postComment({comment, route}){\n    return (dispatch) => {\n        dispatch(postCommentDispatch({comment, route}))\n    };\n}\n\nexport function postReport({questionId}){\n    return (dispatch) => {\n        dispatch(postReportDispatch({questionId}))\n    };\n}\n\nfunction postCommentDispatch({comment, route}){\n    return{\n        type: 'POST_COMMENT',\n        comment: comment,\n        route: route,\n    }\n}\n\nfunction postReportDispatch({questionId, userId}){\n    return{\n        type: 'POST_REPORT',\n        questionId: questionId,\n        userId: userId\n    }\n}\n\nexport function getRatelimiterSettings(){\n    return (dispatch) => {\n        dispatch(getRatelimiterSettingsDispatch())\n    };\n}\n\nfunction getRatelimiterSettingsDispatch(){\n    return{\n        type: 'GET_RATE_LIMITER_SETTINGS'\n    }\n}\n","export function searchQuestionByKeyWord({questionsearchkeyword}){\n    return (dispatch) => {\n        dispatch(searchQuestionByKeyWordDispatch({questionsearchkeyword}))\n    };\n}\n\nfunction searchQuestionByKeyWordDispatch({questionsearchkeyword}){\n    return{\n        type: 'SEARCH_QUESTION_BY_KEYWORD',\n        questionsearchkeyword: questionsearchkeyword,\n    }\n}\n\n\nexport function setRedirectFlag(){\n    return (dispatch) => {\n        dispatch(setRedirectFlagDispatch())\n    };\n}\n\nfunction setRedirectFlagDispatch(){\n    return{\n        type: 'SET_REDIRECT_FLAG_TO_BACK_TO_QUESTIONS_LIST',\n        n: '',\n    }\n}","const messages = {\n    en: {\n      aboutProject: \"About this project\",\n      atTheMomentWeHave: \"At the moment, tests in these subjects are available on our website:\",\n      aboutSystem: \"Our system is designed to help both beginners and experienced web developers assess their level of knowledge and prepare for an interview for the position of a web developer. Testing is free, questions are updated on daily basis and edited. The history of their tests is available to registered users, they can also add their own questions and comments\",\n      thanksforregistration: \"Thank you for registering!\",\n      verifyaddress: \"Verification instruction has been sent to the email address specified during registration. Usually it takes up to 3 minutes for system to send email. Just click button in email body for verification\",\n      haventReceivedLink: \"Haven't received a verification email? Click the button below and the system will resend the verification instructions\",\n      subject: \"Subject\",\n      numberofqiestions: \"Questions qty.\",\n      resendLink: \"Resend link\",\n      hi: \"Hi, \",\n      accountHasBeenSuspended: \"Your account has been suspended. The reason for suspension is: \",\n      pleasedContactAdminToRestoreAccountStatus: \"Please contact site administrator at petro@knowledgedepot.ca to restore account working status\",\n    },\n    ru: {\n      aboutProject: \"О проекте\",\n      atTheMomentWeHave: \"На данный момент на нашем сайте доступны тесты по следующим предметам:\",\n      aboutSystem: 'Hаша система призвана помочь как начинающим, так и опытным веб разработчикам оценить уровень своих знаний и подготовиться к интервью на позицию веб pазработчикa. Тестирование бесплатно, вопросы постоянно пополняются и редактируются. Зарегистрированным пользователям доступна история их тестов, также они могут добавить свои вопросы и комментарии',\n      thanksforregistration: \"Спасибо за регистрацию!\",\n      verifyaddress: \"Ссылка для подтверждения адресa электронной почты была отправлена ​​на email, указанный при регистрации. Обычно система отправляет электронное письмо в течение 3 минут. Просто нажмите кнопку для верификации\",\n      haventReceivedLink: \"Не получили ссылку для верификации электронного адреса? Нажмите кнопку внизу и система перешлет вам ссылку еще раз.\",\n      subject: \"Предмет\",\n      numberofqiestions: \"К-во вопросов\",\n      resendLink: \"Переcлaть ссылку\",\n      hi: \"Привет, \",\n      accountHasBeenSuspended: \"Ваша учетная запись была приостановлена. Причина приостановки: \",\n      pleasedContactAdminToRestoreAccountStatus: \"Пожалуйста, свяжитесь с администратором сайта по адресу petro@knowledgedepot.ca, чтобы восстановить рабочий статус аккаунта.\",\n    }\n  };\n\n  export default messages;","import React from 'react';\nimport '../App.css';\nimport MaterialUiNavigation from './MaterialUiNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Home';\nimport {withCookies} from 'react-cookie';\nimport Button from '@mui/material/Button';\n\n\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    const { cookies } = props;\n    const mycookie = cookies.get('needToRedirectToLogin') ? cookies.get('needToRedirectToLogin') : \"empty\";\n    const mycookieRedirectToResetPassword = cookies.get('passwordReset') ? cookies.get('passwordReset') : \"empty\";\n\n    this.state = {\n      needToRedirectToLogin: mycookie,\n      needToRedirectToresetPassword: mycookieRedirectToResetPassword,\n    };\n  }\n\n  componentDidMount(){\n    this.props.loadSubjectsUsers();\n    setTimeout(() => { \n      if(this.state.needToRedirectToLogin.length > 5){/// this means that user came from email confirmation link\n        this.props.history.push('/app/login');\n      };\n      if(this.state.needToRedirectToresetPassword.length > 5){/// this means that user came from reset password link\n        this.props.history.push('/app/resetpassword');\n      };\n    }, 500);\n    this.props.setRedirectFlagForPasswordResetFunction(1);// this is preparation for reset password workflow. If there is certain ciookie, page will be redirected to reset password form\n    //and in case of successfull new password establised, we swithch this flag to \"2\" and from reset form user will be redirected to login form\n  }\n\n  resendEmailConfirmation(){\n    this.props.resendEmailConfirmation();\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    const columns = [{\n      dataField: 'name',\n      text: this.props.language === 'en' ? messages.en.subject : messages.ru.subject,\n      sort: true,\n    }, {\n      dataField: 'questions_number',\n      text: this.props.language === 'en' ? messages.en.numberofqiestions : messages.ru.numberofqiestions,\n      sort: true\n    }\n   ];\n    const translations = {\n      buttonText: this.props.language === 'en' ? messages.en.resendLink : messages.ru.resendLink,\n    }\n  return (\n        <div>\n          <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n            {/*<TopNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>*/}\n            <MaterialUiNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n            <div className=\"container\" style={(this.state.needToRedirectToLogin.length > 5) ? {display: 'none'} : {}}>\n              <div style={(this.props.roleId === 1 || this.props.roleId === 2 || this.props.roleId === 0) ? {} : {display: 'none'}}>\n                <h2><FormattedMessage id=\"aboutProject\" /></h2>\n                <p>              <FormattedMessage id=\"aboutSystem\" />              </p>\n                <p>                  <FormattedMessage id=\"atTheMomentWeHave\" />                </p>\n                <BootstrapTable keyField='id' data={ this.props.subjectsUser } columns={ columns } />\n              </div>\n              <div style={(this.props.roleId === 3) ? {} : {display: 'none'}}>\n              <br/><br/><br/><br/><br/>\n                <h1>                  <FormattedMessage id=\"thanksforregistration\" />                </h1>\n                <br/><br/>\n                <p>                  <FormattedMessage id=\"verifyaddress\" />                </p>\n                <p>                  <FormattedMessage id=\"haventReceivedLink\" />                </p>\n                <br/><br/>\n                <Button variant=\"contained\"  onClick={this.resendEmailConfirmation.bind(this)}>{translations.buttonText}</Button>\n              </div>\n              <div style={(this.props.roleId === 4) ? {} : {display: 'none'}}>\n              <br/><br/><br/><br/><br/>\n                <h2>                  <FormattedMessage id=\"hi\" />{this.props.userName}                </h2>\n                <br/><br/>\n                <p>                  <FormattedMessage id=\"accountHasBeenSuspended\" /><b>{this.props.suspensionReason}</b>                </p>\n                <p>                  <FormattedMessage id=\"pleasedContactAdminToRestoreAccountStatus\" />                </p>\n              </div>\n            </div>\n          </IntlProvider>\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.loginSignUpReducer, ...state.subjectsReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(withCookies(Home));\n","const messages = {\n    en: {\n      timeLeft: \"Time left\",\n      seconds: \"sec\",\n    },\n    ru: {\n      timeLeft: \"Оставшееся время\",\n      seconds: \"сек\",\n    }\n  };\n\n  export default messages;","import styled from 'styled-components'\n\nconst StyledCountDown = styled.div`\n.timeLeftSeconds{\n  color: #fff;\n  font-weight: bold;\n}\n\n.pie {\n    --p: ${props => props.degrees};\n    --b:25px;\n    --c: ${props => props.colorr};\n    --w:50px;\n  \n    width: var(--w);\n    aspect-ratio: 1;\n    position: relative;\n    display: inline-grid;\n    margin: 5px;\n    place-content: center;\n    font-size: 25px;\n    font-weight: bold;\n    font-family: sans-serif;\n  }\n  .pie:before,\n  .pie:after {\n    content: \"\";\n    position: absolute;\n    border-radius: 50%;\n  }\n  .pie:before {\n    inset: 0;\n    background:\n      radial-gradient(farthest-side,var(--c) 98%,#0000) top/var(--b) var(--b) no-repeat,\n      conic-gradient(var(--c) calc(var(--p)*1%),#0000 0);\n    -webkit-mask: radial-gradient(farthest-side,#0000 calc(99% - var(--b)),#000 calc(100% - var(--b)));\n            mask: radial-gradient(farthest-side,#0000 calc(99% - var(--b)),#000 calc(100% - var(--b)));\n  }\n  .pie:after {\n    inset: calc(50% - var(--b)/2);\n    background: var(--c);\n    transform: rotate(calc(var(--p)*3.6deg)) translateY(calc(50% - var(--w)/2));\n  }\n  .animate {\n    animation: p 1s .5s both;\n  }\n  .no-round:before {\n    background-size: 0 0, auto;\n  }\n  .no-round:after {\n    content: none;\n  }\n  @keyframes p{\n    from{--p:0}\n  }\n`;\n{/*https://www.freecodecamp.org/news/css-only-pie-chart/ pie chart code explained*/}\nexport default StyledCountDown","import React, { Component } from 'react';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/CountDown';\nimport StyledCountDown from '../../styled/StyledCountDown';\n\nclass Countdown extends Component {\n    constructor() {\n        super();\n        this.state = { time: {}, seconds: 61, widthh: \"200px\", bgcolor: '' };\n        this.timer = 0;\n        this.startTimer = this.startTimer.bind(this);\n        this.countDown = this.countDown.bind(this);\n        this.resetTimer = this.resetTimer.bind(this);\n      }\n\n      secondsToTime(secs){\n        let hours = Math.floor(secs / (60 * 60));\n    \n        let divisor_for_minutes = secs % (60 * 60);\n        let minutes = Math.floor(divisor_for_minutes / 60);\n    \n        let divisor_for_seconds = divisor_for_minutes % 60;\n        let seconds = Math.ceil(divisor_for_seconds);\n    \n        let obj = {\n          \"h\": hours,\n          \"m\": minutes,\n          \"s\": seconds\n        };\n        return obj;\n      }\n\n      resetTimer(){\n        this.setState({\n            seconds: 60,\n          });\n      }\n\n      componentDidMount() {\n        let timeLeftVar = this.secondsToTime(this.state.seconds);\n        this.setState({ time: timeLeftVar });\n      }\n    \n      startTimer() {\n        clearInterval(this.timer);\n        this.timer = 0;\n        this.setState({ time: {} });\n        this.setState({ seconds: 61});\n        if (this.timer === 0 && this.state.seconds > 0) {\n          this.timer = setInterval(this.countDown, 1000);\n        }\n      }\n    \n      countDown() {\n        // Remove one second, set state so a re-render happens.\n        let seconds = this.state.seconds - 1;\n        const dynamicWidth = this.state.time.s === 0 ? \"100\" : ((this.state.time.s)/60)*100;\n        this.setState({\n          time: this.secondsToTime(seconds),\n          seconds: seconds,\n          widthh: dynamicWidth + \"px\"\n        });\n        if(seconds >=0 && seconds < 10){\n          this.setState({\n            bgcolor: '#dc3545',\n          });\n        } else if (seconds >=10 && seconds < 25){\n          this.setState({\n            bgcolor: '#ffc107',\n          });\n        } else if (seconds >=25 && seconds < 70){\n          this.setState({\n            bgcolor: '#95c186',\n          });\n        }\n        // Check if we're at zero.\n        if (seconds === 0) { \n          clearInterval(this.timer);\n          this.timer = 0;\n          this.setState({ time: {} });\n          this.setState({ seconds: 61});\n          this.props.stopFunction();\n        }\n      }\n\n  render() {\n    const dynamicDegrees = this.state.time.s === 0 ? 100 : ((this.state.time.s)/60)*100;\n    return (\n      <StyledCountDown degrees={dynamicDegrees} colorr={this.state.bgcolor}>\n        <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n          <div className=\"countdown\">\n            <table>\n            <tbody>\n                <tr>\n                    <td className=\"timeLeftSeconds\" style={{backgroundColor : this.state.bgcolor, color: 'white', width: '133px'}}>&nbsp;<FormattedMessage id=\"timeLeft\" />: {this.state.time.s} <FormattedMessage id=\"seconds\" />&nbsp;</td>\n                    {/*<td><div className = \"countdownindicator\" style={{width : this.state.widthh, backgroundColor: this.state.bgcolor}}></div></td>*/}\n                    {/*<td><div className=\"pie no-round\"></div></td>*/}\n                </tr>\n            </tbody>\n            </table>\n          </div>\n        </IntlProvider>\n      </StyledCountDown>\n    );\n  }\n}\n\nexport default Countdown;","const messages = {\n    en: {\n      tests: \"Tests\",\n      noRegistrationNeeded: \"To use a basic features of our system such as testing, no registration needed.\",\n      ifYouWouldLike: \"If you woul'd like to have an advantage of keeping statistics of your test results or adding your own questions, we'll ask you to register \",\n      herre: \"here.\",\n      firstt: \"First, please select subject you want to start testing:\",\n      select: \"--select--\",\n      currentSubject: \"Subject\",\n      answeredQuestions: \"Answered\",//\"Answered questions\"\n      question: \"Question\",\n      justClickCorrectAnswer: \"Just click correct answer\",\n      clickToStop: \"Click to stop your test\",\n      allQuestionAreAnswered: \"Test is finished\",\n      correctAnswers: \"Correct\",\n      doneThanks: \"Done, thanks\",\n      myResults: \"My all results\",\n      startYour: \"Start your \",\n      test: \" test\",\n      currentQuestion: \"Current question\",\n      pleaseConfirmTestStop: \"Please confirm test stop\",\n      stopTesting: \"Stop\",\n      backToTest: \"Back to test\",\n      reportQuestion: \"Complain about this question\",\n      anotherTest: \"Another test\"\n    },\n    ru: {\n      tests: \"Tесты\",\n      noRegistrationNeeded: \"Для использования базовых функций нашей системы, таких как тестирование, регистрация не требуется.\",\n      ifYouWouldLike: \"Если вы хотите вести статистику результатов тестов или добавлять свои собственные вопросы, мы попросим вас зарегистрироваться \",\n      herre: \"здесь.\",\n      firstt: \"Сначала выберите предмет, по которой хотите начать тестирование:\",\n      select: \"--выбери--\",\n      currentSubject: \"Предмет\",\n      answeredQuestions: \"Отвеченo\",//\n      question: \"Вопрос\",\n      justClickCorrectAnswer: \"Просто нажмите правильный ответ\",\n      clickToStop: \"Нажмите, чтобы остановить тест\",\n      allQuestionAreAnswered: \"Tест закончен c результатoм:\",\n      correctAnswers: \"Правильнo\",\n      doneThanks: \"Готово, спасибо\",\n      myResults: \"Предыдущиe pезультаты\",\n      startYour: \"Начни свой \",\n      test: \" тест\",\n      currentQuestion: \"Текущий вопрос\",\n      pleaseConfirmTestStop: \"Подтвердите остановку тестa\",\n      stopTesting: \"Стоп\",\n      backToTest: \"Назад к тесту\",\n      reportQuestion: \"Пожаловаться на этот вопрос\",\n      anotherTest: \"Еще один тест\"\n    }\n  };\n\n  export default messages;","import React from \"react\";\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Tooltip from '@mui/material/Tooltip';\n\nclass ModalMUI extends React.Component {\n    state = {\n        show: false\n    };\n\n    showModal = () => {\n        this.setState({\n            show: true\n        });\n    };\n\n    hideModal = e => {\n        this.setState({\n            show: false\n        });\n    };\n\n    clickYes = () => {\n        this.setState({\n            show: false\n        });\n        this.props.toExecute();\n    }\n\n    handleChildClick = (e) => {\n        e.stopPropagation();\n    }\n\n    handleClose = () =>{\n        this.setState({\n            show: false\n        });\n    }\n\n    render() {\n        return (\n            <Dialog open={this.state.show} onClose={this.handleClose.bind(this)} >\n                <DialogTitle>{this.props.messages.pleaseConfirmTestStop}</DialogTitle>\n                <DialogContent>\n                <div style={{ width: '100%' }}>\n                    <Box display=\"flex\" flexDirection=\"row\" p={0} m={0}>\n                        <Tooltip title={this.props.messages.stopTesting}>\n                            <Box sx={{ p: 0, mt: 0.25 }}>\n                                <Button variant=\"contained\" color=\"error\" onClick={this.clickYes.bind(this)}>\n                                    {this.props.messages.stopTesting}\n                                </Button>\n                            </Box>\n                        </Tooltip>\n                        <div style={{ width: '100%' }}>\n                        <Box display=\"flex\" flexDirection=\"row-reverse\" p={0} m={0}>\n                            <Tooltip title={this.props.messages.backToTest}>\n                                <Box sx={{ p: 0, mt: 0.25 }}>\n                                    <Button variant=\"contained\"  onClick={this.hideModal.bind(this)}>\n                                        {this.props.messages.backToTest}\n                                    </Button>\n                                </Box>\n                            </Tooltip>\n                        </Box>\n                        </div>\n                    </Box>\n                    </div>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\n\nexport default ModalMUI;","import styled from 'styled-components'\n\nconst Styledtesting = styled.div`\n    .answerBlock {\n        background-color: #C2CEDF;\n        padding: 15px;\n        border: none;\n        margin: 10px 0;\n        cursor: pointer;\n        -webkit-user-select: none;  \n        -moz-user-select: none;    \n        -ms-user-select: none;      \n        user-select: none;\n    }\n    \n    .qusetionBlock{\n        -webkit-user-select: none;  \n        -moz-user-select: none;    \n        -ms-user-select: none;      \n        user-select: none;\n    }\n    table.testingDetails{\n        width: 100%;\n    }\n    table.testingDetails td:first-child{\n        width: 100px;\n    }\n    table.testingDetails td:nth-child(2){\n        width: 130px;\n    }\n    .floatRight{\n        float: right;\n    }\n`;\n\nexport default Styledtesting","import * as React from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\n\nfunction MuiDropDownMenu(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(-1);\n  const open = Boolean(anchorEl);\n  const handleClickListItem = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const translations = {\n    select:  props.language === 'en' ? props.messages.en.select : props.messages.ru.select,\n    clickToSelect:  props.language === 'en' ? props.messages.en.clickToSelect : props.messages.ru.clickToSelect,\n  }\n\n  const myOptions = props.options;\n  let name = props.selectedSubj == \"\" ? translations.select : myOptions[selectedIndex].name;\n\n  const handleMenuItemClick = (event, index, id, name) => {\n    props.onMuiDropdownChange(id, name); \n    setSelectedIndex(index);\n    setAnchorEl(null);\n  };\n\n  const visibility = !!props.visibility && props.visibility === 'none' ? 'none' : 'block';\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div style={{display: visibility}}>\n      <List\n        component=\"nav\"\n        aria-label=\"Device settings\"\n        sx={{ bgcolor: 'background.paper' }}\n      >\n        <ListItem\n          button\n          id=\"lock-button\"\n          aria-haspopup=\"listbox\"\n          aria-controls=\"lock-menu\"\n          aria-label=\"when device is locked\"\n          aria-expanded={open ? 'true' : undefined}\n          onClick={handleClickListItem}\n        >\n          <ListItemText\n            primary={translations.clickToSelect}\n            secondary={name}\n          />\n        </ListItem>\n      </List>\n      <Menu\n        id=\"lock-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'lock-button',\n          role: 'listbox',\n        }}\n      >\n        {props.options.map((option, index) => (\n          <MenuItem\n            key={option.id}\n            indd = {index}\n            selected={index === selectedIndex}\n            onClick={(event) => handleMenuItemClick(event, index, option.id, option.name)}\n          >\n            {option.name}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\nexport default MuiDropDownMenu;","import React from 'react'\nimport MaterialUiNavigation from './MaterialUiNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport { Link} from 'react-router-dom';\nimport Countdown from './formelements/Countdown';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Test';\nimport ModalMUI from './formelements/ModalMUI';\nimport StyledTesting from '../styled/StyledTesting';\nimport Button from '@mui/material/Button';\nimport MuiDropDownMenu from './formelements/MuiDropDownMenu';\nimport $ from 'jquery';\nimport BugReportIcon from '@mui/icons-material/BugReport';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\n\nconst ifToDestroyTemporaryQuestions = 1;\nconst resultsPageAddrUser = '/app/resultsn';// if this guy registered, sent him to results page\nconst resultsPageAddrNotUser = '/app';// if this guy not registered, just sent him to home page\nconst testPage = '/app/test';\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    this.countdown = React.createRef();\n    this.state = {\n      currentSubjectId: '',\n      currentSubjectName: ''\n    }\n    this.modall = React.createRef();\n  }\n\n  jqueryClickEmulation = () =>{\n    $('.container').trigger('click');// for Iphone there is a bug when shadow stays on answer div after page reloaded\n  }\n\n  resetAll(){\n    this.props.setCurrentSubjectId('');\n    this.props.setCurrSubjectNameRedux('');\n    this.props.setTestingSessionHash('');\n    this.props.setCurrentQuestion('');\n    this.props.setAnswers([]);\n    this.props.setNumberOfAnswered(0);\n    this.props.setNumberOfCorrect(0);\n    this.props.setIfRemainQuestions(1)\n  }\n\n  componentDidMount() {\n    this.props.loadSubjectsUsers();\n    this.resetAll();\n    this.jqueryClickEmulation();\n    document.getElementsByClassName(\"testContainer\")[0].addEventListener('contextmenu', (e) => {// this is for disabling right click\n      e.preventDefault();\n    });\n  }\n\n  componentDidUpdate(){\n    this.jqueryClickEmulation();\n  }\n\n\n  componentWillUnmount() {\n    this.props.setCurrentPaginationAction(0);\n    this.props.destroyTemporaryTestingQuestions(this.props.testingSessionHash, ifToDestroyTemporaryQuestions);\n    this.resetAll();\n  }\n\n  onDropdownChange = (event) => {\n    const subjName = this.props.subjectsUser.filter(value => value.id === event.target.value);\n    this.setState({\n      currentSubjectId: event.target.value,\n      currentSubjectName: subjName\n    })\n    this.props.setCurrentSubjectId(event.target.value);\n    if(subjName[0]){\n      this.props.setCurrentSubjectName(subjName[0].name);\n    } else {\n      this.props.setCurrentSubjectName('');\n    }\n  };\n\n  onMuiDropdownChange = (id, name) => {\n    this.setState({\n      currentSubjectId: id,\n      currentSubjectName: name\n    })\n    this.props.setCurrentSubjectId(id);\n    if(!!name){\n      this.props.setCurrentSubjectName(name);\n    } else {\n       this.props.setCurrentSubjectName('');\n    }\n  }\n\n  answerClicked = (id) => {\n    this.props.setOverlayVisibility(true);\n    setTimeout(\n      () => {\n        this.countdown.current.resetTimer();\n        this.props.processTesting(this.props.testingSessionHash, id, this.props.currentSubjectId);\n        let corrAnswerId = ((this.props.correctAnswerId/2) - 456) / 36;\n        this.setState({\n          currentSubjectId: corrAnswerId,\n        })\n        this.props.setHintsBorderVisibility(1);\n      }, 1000\n\n    )\n\n  }\n\n  openModal(){\n      this.modall.current.showModal();\n  }\n\n  startTestingButtonClicked = () =>{\n    this.props.startNewTest(this.state.currentSubjectId, this.props.testingSessionId);\n    this.countdown.current.startTimer();\n  }\n\n  stopTestingButtonClicked = () =>{\n    this.props.setRemainingQuestionsToZero();\n  }\n\n  navigateOutFromTestingPage = () =>{\n    if(this.props.roleId === 0){// depends is this user registered or not, we redirect him to 'results' or 'home' page\n      this.props.history.push(resultsPageAddrNotUser);\n    } else {\n      this.props.history.push(resultsPageAddrUser);\n    }\n  }\n\n  navigateOnTest = () => {\n    // on before unmount\n    this.props.setCurrentPaginationAction(0);\n    this.props.destroyTemporaryTestingQuestions(this.props.testingSessionHash, ifToDestroyTemporaryQuestions);\n    this.resetAll();\n    ///on mount\n    this.props.loadSubjectsUsers();\n    this.resetAll();\n    this.jqueryClickEmulation();\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    const visibility = this.props.testingSessionHash === '' ?  '' : 'none';\n    const currentQuestionId = this.props.currentQuestionId;\n\n     return (\n      <StyledTesting>\n        <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n            <ModalMUI ref={this.modall} toExecute = {this.stopTestingButtonClicked.bind(this)} messages={messages[this.props.language]}/>\n            <div>\n              <MaterialUiNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n              <div className=\"container testContainer\">\n                <h2 className=\"testsHeader\"><FormattedMessage id=\"tests\" /></h2>\n                <h5 style={this.state.currentSubjectName === '' ? {display: 'none'} :  {}}>\n                  <FormattedMessage id=\"currentSubject\" />: {this.props.currentSubjectName} \n                </h5>\n                {/* introductory block starts */}\n                <div className=\"testsIntroduction\" style={this.props.currentSubjectId === '' ? {} : {display: 'none'} }>\n                    <p style={this.props.userName === '' ? {} : { display: 'none' } } >\n                      <FormattedMessage id=\"noRegistrationNeeded\" />\n                    </p>\n                    <p style={this.props.userName === '' ? {} : { display: 'none' } } >\n                      <FormattedMessage id=\"ifYouWouldLike\" /><Link to=\"/app/signup\"><FormattedMessage id=\"herre\" /></Link>\n                    </p>\n                    <p>\n                      <FormattedMessage id=\"firstt\" />\n                    </p>\n                </div>\n                {/* introductory block ends */}\n\n                {/* select subject block starts */}\n                <MuiDropDownMenu options={this.props.subjectsUser} onMuiDropdownChange={this.onMuiDropdownChange} language={this.props.language} messages={messages} visibility={visibility} selectedSubj = {this.props.currentSubjectId}/>\n                <br/>\n                {/* select subject block ends */}\n\n                {/* start test block starts */}\n                <div style={this.props.currentSubjectId === '' ? {display: 'none'} : {}} >\n                  <Button variant=\"contained\"  onClick={this.startTestingButtonClicked} style={this.props.testingSessionHash === '' ?  {} : {display: 'none'}}>\n                    <FormattedMessage id=\"startYour\" /> {this.props.currentSubjectName} <FormattedMessage id=\"test\" />\n                  </Button>\n                </div>\n                {/* start test block ends */}\n\n                {/* main test block starts */}\n                <div className=\"testingInfo\" style={this.props.currentQuestion === '' ? {display: 'none'} : {}} >\n                  <table className=\"testingDetails\">\n                    <tbody>\n                      <tr>\n                          <td><FormattedMessage id=\"answeredQuestions\" />: {this.props.numberOfAnsweredQuestions}&nbsp;</td>\n                          <td><Countdown ref={this.countdown} stopFunction = {this.stopTestingButtonClicked} language={this.props.language} /></td>\n                          <td>\n                            <div className=\"floatRight\" style={(this.props.roleId === 1 || this.props.roleId === 2) ? {} : { display: 'none' } }>\n                              <ListItemButton sx={{ color: 'red' }} onClick={()=>{this.props.postReport({questionId: this.props.currentQuestionId})}}>\n                                <ListItemIcon >\n                                  <BugReportIcon sx={{ color: 'red' }} />\n                                </ListItemIcon>\n                                <ListItemText sx={{ mx: -2, padding: '5px' }}>\n                                  <FormattedMessage id=\"reportQuestion\" />\n                                </ListItemText>\n                              </ListItemButton>\n                            </div>\n                          </td>\n                      </tr>\n                      <tr><td><FormattedMessage id=\"correctAnswers\" />: {this.props.numberOfCorrectQuestions}</td><td></td><td></td></tr>\n                    </tbody>\n                  </table>\n                  <br/>\n                  <p>\n                    <FormattedMessage id=\"currentQuestion\" />: \n                  </p>\n                  <p className=\"qusetionBlock\">{this.props.currentQuestion}</p>\n                  <FormattedMessage id=\"justClickCorrectAnswer\" />:<br/>\n                  {this.props.answers.map((value) => \n                  <div className=\"answerBlock\" title=\"Just click correct answer\" style={(this.props.toShowTestingHints === \"1\" && this.props.toShowTestHintsBorder === 1) ? this.state.currentSubjectId === value.id ? {outline: '2px solid green'} : {outline: '2px solid red'}  : {}} \n                      key={value.id} data-id={value.id} onClick={() => this.answerClicked(value.id)}>{value.name}\n                  </div>)}<br/><br/>\n                  <Button variant=\"contained\" color=\"error\" onClick={this.openModal.bind(this)}><FormattedMessage id=\"clickToStop\" /></Button>\n                </div>\n                {/* main test block ends */}\n\n                {/* results block starts */}\n                <div style={this.props.ifRemainQuestions === 1 ? {display: 'none'} : {}}>\n                  <p><FormattedMessage id=\"allQuestionAreAnswered\" />:</p>\n                  <p><FormattedMessage id=\"answeredQuestions\" />: {this.props.numberOfAnsweredQuestions} </p>  \n                  <p><FormattedMessage id=\"correctAnswers\" />: {this.props.numberOfCorrectQuestions} </p>\n                  <Button variant=\"contained\" onClick={this.navigateOnTest}>\n                    <div>\n                      <FormattedMessage id=\"anotherTest\" />\n                    </div>\n                  </Button>\n                  &nbsp;&nbsp;&nbsp;\n                  <Button variant=\"contained\"  onClick={this.navigateOutFromTestingPage}>\n                    <div style={this.props.roleId !== 0 ? {display: 'none'} : {}}>\n                      <FormattedMessage id=\"doneThanks\" />\n                    </div>\n                    <div style={this.props.roleId === 0 ? {display: 'none'} : {}}>\n                      <FormattedMessage id=\"myResults\" />\n                    </div>\n                  </Button>\n                </div>\n                {/* results block ends */}\n\n              </div>\n            </div>  \n      </IntlProvider>\n     </StyledTesting>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.loginSignUpReducer, ...state.subjectsReducer, ...state.resultsReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(Test);","const messages = {\n    en: {\n        login: \"Login\",\n        clearValues: \"Clear\",\n        emailAddress: \"E-mail address\",\n        password: \"Password\",\n        repeatpassword: \"Repeat password\",\n        thanksforregistration: \"Thank you for registering!\",\n        forgotpassword: \"Forgot password?\",\n        senddata: \"Send password\",\n        emailIssue: \"Invalid email address\",\n        required: \"Required\",\n        signup: \"Signup\"\n    },\n    ru: {\n        login: \"Логин\",\n        clearValues: \"Oчистить формy\",\n        emailAddress: \"Адрес электронной почты\",\n        password: \"Пароль\",\n        repeatpassword: \"Повторите пароль\",\n        thanksforregistration: \"Спасибо за регистрацию!\",\n        forgotpassword: \"Забыл пароль?\",\n        senddata: \"Отправить пароль\",\n        emailIssue: \"Неверный адрес электронной почты\",\n        required: \"Обязательное поле\",\n        signup: \"3арегистрироваться\"\n    }\n  };\n\n  export default messages;\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/Login';\nimport { Link } from 'react-router-dom';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nconst validate = (values, props) => {\n    const errors = {}\n    if (!values.email) {  errors.email =  messages[props.language].required;  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {  errors.email = messages[props.language].emailIssue  }\n    if (!values.password) {   errors.password =  messages[props.language].required; } \n    return errors\n}\n\nconst renderField = ({ input, name, label, type, meta: { touched, error, warning } }) => {\n    let err = touched && (!!(error));\n    let helpertextt = touched && error;\n    return (<TextField id={name} name={name} {...input} label={label} error={err} helperText={helpertextt} size=\"small\" variant=\"outlined\" fullWidth />)\n\n}\n\nconst renderPasswordField = ({ input,  name,  label,  type,  meta: { touched, error, warning }, whatToShow}) => {\n    let err = touched && (!!(error));\n    let helpertextt = touched && error;\n    return (<TextField id={name} name={name} {...input} label={label} error={err} helperText={helpertextt} size=\"small\" variant=\"outlined\" fullWidth type={whatToShow}/>)\n}\n\nconst LoginFormN = props => {\n  const { handleSubmit, pristine, reset, submitting, errorMessage, errorMessageVisibility, language, valid, whatToShow, toggleVisibility } = props;\n  const translations = {\n    emailAddress:  language === 'en' ? messages.en.emailAddress : messages.ru.emailAddress,\n    password:  language === 'en' ? messages.en.password : messages.ru.password,\n  }\n\n\n\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <form onSubmit={handleSubmit}>\n        <table className=\"loginFormWrapper\">\n            <tbody>\n                <tr>\n                    <td><Field  name=\"email\"  component={renderField} type=\"text\" label={translations.emailAddress} /></td><td></td>\n                </tr>\n                <tr>\n                    <td ><Field  name=\"password\"   component={renderPasswordField} label={translations.password} whatToShow={whatToShow} /></td>\n                    <td className=\"visibilityToggleWrapper\"><span className=\"visibilityToggle\" onClick={toggleVisibility}>&nbsp;&nbsp;&nbsp;<i className=\"fa fa-eye\" aria-hidden=\"true\" style={whatToShow === 'text' ? {opacity: 0.4} : {}}></i></span></td>\n                </tr>\n                <tr style={{visibility: `${errorMessageVisibility}`}}><td><span className=\"error\">{errorMessage}</span></td></tr>\n            </tbody>\n        </table>\n        <Link to=\"/app/forgotpassword\"><FormattedMessage id=\"forgotpassword\" /></Link>\n        <br/><br/>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" disabled={!valid || pristine || submitting}><FormattedMessage id=\"login\" /></Button>&nbsp;&nbsp;&nbsp;\n          <Button variant=\"contained\" color=\"error\" disabled={pristine || submitting} onClick={reset}><FormattedMessage id=\"clearValues\" /></Button>&nbsp;&nbsp;&nbsp;\n          <Link to=\"/app/signup\"><Button variant=\"contained\" color=\"error\"><FormattedMessage id=\"signup\" /></Button></Link>\n        </div>\n      </form>\n    </IntlProvider>\n  );\n};\n\nexport default reduxForm({\n  form: 'loginFormRedux', \n  validate\n})(LoginFormN);\n\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Tooltip from '@mui/material/Tooltip';\nimport { Link } from 'react-router-dom';\nimport { IntlProvider } from \"react-intl\";\nimport messages from '../translations/TopNavigation';\nimport ToggleLanguageButton from './formelements/ToggleLanguageButton';\n\n\nfunction MaterialUiNavigationMini(props) {\n  return (\n    <div>\n    <IntlProvider locale={props.language} messages={messages[props.language]}>\n      <AppBar position=\"static\">\n          <Toolbar disableGutters sx={{ mx: 0 }}>\n            <div style={{ width: '100%' }}>\n              <Box display=\"flex\" flexDirection=\"row\" p={0} m={0}>\n                <Box sx={{ pl: 4, pt: 1.75, ml: -1 }} >\n                  <Link to=\"/app/\" color=\"#fff\" variant=\"h6\" underline=\"none\" className=\"custom-mui-home-link\" sx={{ ml: 0 }}>Knowledgedepot</Link>\n                </Box>\n                <div style={{ width: '100%' }}>\n                  <Box display=\"flex\" flexDirection=\"row-reverse\" p={0} m={0}>\n                    <Tooltip title=\"Change language\">\n                      <Box sx={{ p: 2, mt: 0.25 }}>\n                        <ToggleLanguageButton language={props.language} toggleLanguage={props.toggleLanguage}/>\n                      </Box>\n                    </Tooltip>\n                  </Box>\n                </div>\n              </Box>\n            </div>\n          </Toolbar>\n      </AppBar>\n    </IntlProvider>\n    </div>\n  );\n}\n\nexport default MaterialUiNavigationMini;","import React from 'react'\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport LoginFormN from \"./forms/loginFormN\";\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Login';\nimport { withCookies } from 'react-cookie';\nimport MaterialUiNavigationMini from './MaterialUiNavigationMini'\nimport { Link} from 'react-router-dom';\n\n\nclass Loginn extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    const { cookies } = props;\n    const mycookie = cookies.get('needToRedirectToLogin') ? cookies.get('needToRedirectToLogin') : \"empty\"\n    this.state = {\n      email: '',\n      password: '',\n      cook: cookies,\n      needToRedirectToLogin: mycookie,\n      passwordType: 'password'\n    };\n  }\n\n  componentDidMount(){\n    this.state.cook.remove('needToRedirectToLogin');\n    this.state.cook.remove('passwordReset');\n  }\n\n  handleChangeMail = event => {\n    this.setState({ email: event.target.value });\n  }\n\n  handleChangePassword = event => {\n    this.setState({ password: event.target.value });\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  toggleVisibility = () =>{\n    this.state.passwordType === 'password' ? this.setState({ passwordType: 'text' }) : this.setState({ passwordType: 'password' });\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <MaterialUiNavigationMini logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n        <div>\n          <div className=\"container\">\n            <center><h2><FormattedMessage id=\"login\" /></h2>\n            <h3 style={(this.state.needToRedirectToLogin.length > 5) ? {} : {display: 'none'}}><FormattedMessage id=\"thanksforregistration\" /></h3>\n            <br/><br/>\n                <LoginFormN \n                onSubmit={()=>{this.props.loginUserRedux()}} \n                errorMessage={this.props.loginError} \n                errorMessageVisibility={this.props.loginErrorVisibility} \n                language={this.props.language}\n                whatToShow={this.state.passwordType}\n                toggleVisibility={this.toggleVisibility.bind(this)}\n                />\n            </center>\n          </div>\n      </div> \n     </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.loginSignUpReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(withCookies(Loginn));","const messages = {\n  en: {\n    subject: \"Subject\",\n    active: \"Active\",\n    questionNumber: \"Questions number\",\n    edit: \"Edit\",\n    delete: \"Delete\",\n    save: \"Save\",\n    hidden: \"hidden\",\n    active1: \"active\",\n    approved: \"approved\",\n    declined: \"declined\",\n    pending: \"pending\"\n  },\n  ru: {\n      subject: \"Subject\",\n      active: \"Активный\",\n      questionNumber: \"Количество вопросов\",\n      edit: \"Править\",\n      delete: \"Удалить\",\n      save: \"Сохранить\",\n      hidden: \"скрытый\",\n      active1: \"aктивный\",\n      approved: \"одобренный\",\n      declined: \"отклоненный\",\n      pending: \"в ожидании\"\n  }\n};\n\nexport default messages;","import styled from 'styled-components'\n\nconst StyledModal = styled.div`\n  position: fixed;\n  z-index: 3000;\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  top: 0;\n  bottom: 0;\n  left: 0;\n\n  > .winWrapper {\n      background-color: white;\n      position: absolute;\n      top: 200px;\n      width: 400px;\n      height: 220px;\n      left: calc(50% - 200px);\n      border-radius: 10px 10px 0 0;\n\n      @media (max-width: 768px) {\n        > .winWrapper{\n          width: 100%;\n        }\n      }\n\n\n      > .modalHeader {\n          width: 100%;\n          background-color: #00549a;\n          height: 40px;\n          color: white;\n          padding: 10px;\n          border-radius: 10px 10px 0 0;\n        }\n\n      > .modalBody {\n        text-align: center;\n\n        > .btn-danger {\n          width: 80px;\n          position: absolute;\n          bottom: 30px;\n          left: 60px;\n        }\n\n        > .bodyText {\n          margin-top: 30px;\n          font-size: 20px;\n          color: #444;\n        }\n\n        > .btn-success {\n          width: 80px;\n          position: absolute;\n          bottom: 30px;\n          right: 60px;\n        }\n\n        > textarea {\n          margin-top: 20px;\n        }\n      }\n    }\n`;\n\nexport default StyledModal","import React from \"react\";\nimport StyledModal from '../../styled/StyledModal'\n\n\n\nclass Modal extends React.Component {\n    state = {\n        show: false\n    };\n\n    showModal = () => {\n        this.setState({\n            show: true\n        });\n    };\n\n    hideModal = e => {\n        this.setState({\n            show: false\n        });\n    };\n\n    clickYes = () => {\n        this.setState({\n            show: false\n        });\n        this.props.toExecute();\n    }\n\n    handleChildClick = (e) => {\n        e.stopPropagation();\n    }\n\n    render() {\n\n    if(!this.state.show){\n        return null;\n    }\n\n    return <StyledModal onClick={this.hideModal.bind(this)}>\n                <div className=\"winWrapper\" onClick={this.handleChildClick.bind(this)}>\n                    <div className=\"modalHeader\">\n                        {this.props.titlle}\n                    </div>\n                    <div className=\"modalBody\">\n                        <p className=\"bodyText\">{this.props.message}</p>\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={this.hideModal.bind(this)}>Cancel</button>\n                        <button type=\"button\" className=\"btn btn-success\" onClick={this.clickYes.bind(this)}>Yes</button>\n                    </div>\n                </div>\n            </StyledModal>;\n    }\n}\n\n\nexport default Modal;","import React from \"react\";\nimport StyledModal from '../../styled/StyledModal'\n\n\n\nclass Prompt extends React.Component {\n    state = {\n        show: false,\n        value: ''\n    };\n\n    showModal = e => {\n        this.setState({\n            show: true\n        });\n    };\n\n    onChange = e =>{\n        this.setState({\n            value: e.target.value\n        });\n    }\n\n    hideModal = e => {\n        this.setState({\n            show: false\n        });\n    };\n\n    clickYes = () => {\n        this.setState({\n            show: false\n        });\n        this.props.toExecute();\n    }\n\n    handleChildClick = (e) => {\n        e.stopPropagation();\n    }\n\n    render() {\n\n    if(!this.state.show){\n        return null;\n    }\n\n    return <StyledModal onClick={this.hideModal.bind(this)}>\n                <div className=\"winWrapper\" onClick={this.handleChildClick.bind(this)}>\n                    <div className=\"modalHeader\">\n                        {this.props.titlle}\n                    </div>\n                    <div className=\"modalBody\">\n                        <textarea id=\"w3review\" name=\"w3review\" rows=\"2\" cols=\"30\" onChange={this.onChange.bind(this)} placeholder=\"required\"></textarea>\n                        <p className=\"bodyText\">{this.props.message}</p>\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={this.hideModal.bind(this)}>Cancel</button>\n                        <button type=\"button\" className=\"btn btn-success\" onClick={this.clickYes.bind(this)} disabled={this.state.value.length === 0}>Yes</button>\n                    </div>\n                </div>\n            </StyledModal>;\n    }\n}\n\n\nexport default Prompt;","import React from 'react';\nimport { IntlProvider } from \"react-intl\";\nimport messages from '../../translations/EditSubjRow';\nimport Modal from '../formelements/Modal';\nimport Prompt from '../formelements/Prompt';\n\n\n\nexport default class EditUserRow extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.user.user_id,\n            status: this.props.user.status,\n        }\n        this.modall = React.createRef();\n        this.promptt = React.createRef();\n    }\n   \n    openModal(){\n        this.modall.current.showModal();\n    }\n\n    openPromptt(){\n       if(this.props.user.status === 'user-confirmed'){\n            this.promptt.current.showModal();\n       } else {\n            this.props.toggleusersuspend({id: this.state.id, reason: 'none'});\n       };\n    }\n\n    toggleSubjectActivity(){\n        this.props.toggleSubjectActivity({id: this.state.id});\n    }\n\n    deleteUser(){\n        this.props.deleteUser({id: this.state.id});\n    }\n\n    toggleuserconfirm(){\n        this.props.toggleuserconfirm({id: this.state.id});\n    }\n\n    toggleusersuspend(){\n        this.props.toggleusersuspend({id: this.state.id, reason: this.promptt.current.state.value});\n    }\n\n    render(props) {\n        const { name, email, status, resultsNumber, createdAt, suspension_reason } = this.props.user;\n        const { language } = this.props;\n      return  (\n        <>\n            <Modal ref={this.modall} toExecute = {this.deleteUser.bind(this)} message={'Please confirm user deletion'} titlle={'Please confirm'}/>\n            <Prompt ref={this.promptt} toExecute = {this.toggleusersuspend.bind(this)} message={''} titlle={'Suspension reason'}/>\n            <IntlProvider locale={language} messages={messages[language]}>\n                <tr>\n                    <td > { name } </td>\n                    <td > { email } </td>\n                    <td >\n                        { createdAt }\n                    </td>\n                    <td  style={status === 'user-confirmed' ? {backgroundColor: '#bce8bc'} : status === 'user-suspended' ? {backgroundColor: '#efc9c9'} : {backgroundColor: '#f3edaa'}}>\n                        { status }\n                    </td>\n                    <td>\n                        { resultsNumber }\n                    </td>\n                    <td>\n                        <button className=\"btn btn-danger btn-sm\" onClick={this.openModal.bind(this)}  disabled={resultsNumber > 0 || status === 'user-confirmed' || status === 'user-suspended'}>Delete</button>\n                    </td>\n                    <td>\n                        <button className=\"btn btn-success btn-sm\" onClick={this.toggleuserconfirm.bind(this)} disabled={status === 'user-confirmed' || status === 'user-suspended'}>Confirm</button>\n                    </td>\n                    <td>\n                        <button className=\"btn btn-warning btn-sm\"  onClick={this.openPromptt.bind(this)} disabled={status === 'user-unconfirmed'}>\n                            {status === 'user-suspended' ? 'Activate' : 'Suspend'}\n                        </button>\n                    </td>\n                    <td>\n                        <div>{suspension_reason}</div>\n                    </td>\n                </tr>\n            </IntlProvider>\n        </>\n    );\n    }\n  }","const messages = {\n    en: {\n      subject: \"Subject\",\n      active: \"Active\",\n      questionNumber: \"Questions number\",\n      edit: \"Edit\",\n      delete: \"Delete\",\n    },\n    ru: {\n        subject: \"Предмет\",\n        active: \"Активный\",\n        questionNumber: \"Количество вопросов\",\n        edit: \"Править\",\n        delete: \"Удалить\",\n    }\n  };\n\n  export default messages;","import React from 'react';\nimport EditUserRow from './EditUsertRow';\nimport { IntlProvider } from \"react-intl\";\nimport messages from '../../translations/EditSubjectForm';\n\nconst EditSubjectForm = props => {\n  const { users, toggleSubjectActivity, language, deleteUser, toggleuserconfirm, toggleusersuspend } = props;\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Name</th>{/* <FormattedMessage id=\"name\" /> */}\n              <th>Email</th>{/* <FormattedMessage id=\"email\" /> */}\n              <th>Created At</th>{/*? <FormattedMessage id=\"createdAt\" /> */}\n              <th>Status</th>{/* <FormattedMessage id=\"status\" /> */}\n              <th>Tests</th>{/* <FormattedMessage id=\"testResults\" /> */}\n              <th>Delete User</th>{/* <FormattedMessage id=\"testResults\" /> */}\n              <th>Confirm User</th>{/* <FormattedMessage id=\"testResults\" /> */}\n              <th>Suspend User</th>{/* <FormattedMessage id=\"testResults\" /> */}\n              <th>Reason</th>{/* <FormattedMessage id=\"testResults\" /> */}\n            </tr>\n          </thead>\n          <tbody>\n              {users.map(user => <EditUserRow \n                user={user} \n                toggleSubjectActivity = {toggleSubjectActivity}\n                key={user.user_id}\n                language={language}\n                deleteUser={deleteUser}\n                toggleuserconfirm={toggleuserconfirm}\n                toggleusersuspend={toggleusersuspend}\n              /> )}\n          </tbody>\n      </table>\n    </IntlProvider>\n  );\n};\n\nexport default EditSubjectForm;","const messages = {\n    en: {\n      users: \"Users\",\n    },\n    ru: {\n      users: \"Пользователи\",\n    }\n  };\n\n  export default messages;","import styled from 'styled-components'\n\nconst StyledAccordeon = styled.div`\n  th{\n    padding-bottom: 10px;\n  }\n  .accordion__button{\n    background-color: #00549a;\n    color: #fff;\n    cursor: pointer;\n    padding: 10px;\n    width: 100%;\n    text-align: left;\n    border: none;\n  }\n`;\n\nexport default StyledAccordeon","import React from 'react';\nimport '../App.css';\nimport MaterialUiNavigation from './MaterialUiNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport EditUsersForm from \"./forms/EditUsersForm\";\nimport messages from '../translations/Users';\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from 'react-accessible-accordion';\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport StyledAccordeon from '../styled/StyledAccordeon'\n\nclass Users extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n  }\n\n  componentDidMount(){\n    this.props.loadUsers(); \n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n      <div>\n        <MaterialUiNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} toggleLanguage={this.toggleLanguage} language={this.props.language}/>          <div className=\"container\">\n            <h2><FormattedMessage id=\"users\" /></h2>\n            <br/><br/>\n            <StyledAccordeon>\n                <Accordion allowMultipleExpanded=\"true\" allowZeroExpanded=\"true\">\n                  <AccordionItem>\n                      <AccordionItemHeading>\n                          <AccordionItemButton>\n                            Search for users\n                          </AccordionItemButton>\n                      </AccordionItemHeading>\n                      <AccordionItemPanel>\n                          ghjkghjghjkgh ghjhgjkghj\n                      </AccordionItemPanel>\n                  </AccordionItem>\n              </Accordion>\n            </StyledAccordeon><br/><br/>\n            <EditUsersForm \n              users={ this.props.users } \n              deleteUser={this.props.deleteUser}  \n              toggleuserconfirm={this.props.toggleuserconfirm} \n              toggleusersuspend={this.props.toggleusersuspend} \n              language={this.props.language}\n             />\n          </div>\n      </div> \n     </IntlProvider>  \n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.usersReducer, ...state.loginSignUpReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(Users);\n","import React, { useRef, useEffect } from 'react'\n\n\nconst Captcha = props => {\n    const canvasRef = useRef(null);\n\n    const draw = ctx => {\n        ctx.fillStyle = '#0f0'\n        ctx.beginPath()\n        ctx.arc(50, 100, 20, 0, 2*Math.PI)\n        ctx.fill()\n      }\n\n    useEffect(() => {\n        const canvas = canvasRef.current\n        const context = canvas.getContext('2d')\n        //Our first draw\n        context.fillStyle = '#fff'\n        context.fillRect(0, 0, context.canvas.width, context.canvas.height)\n        context.fillStyle = '#06f'\n        context.font = \"20px Arial\";\n        context.fillText(props.text, 10, 30);\n\n        context.fillStyle = '#f00'\n        context.font = \"10px Arial\";\n        context.fillText('Click to reload', 100, 35);\n      }, [draw])\n\n    return <canvas ref={canvasRef} {...props} width=\"170px\" height=\"40px\" />\n}\n\n\nexport default Captcha;","const messages = {\n    en: {\n        register: \"Sign up\",\n        clearValues: \"Clear Values\",\n        name: \"Name\",\n        emailAddress: \"E-mail address\",\n        password: \"Password\",\n        confirmPasword: \"Confirm password\",\n        enterTextInBlue: \"Enter text in blue below\",\n        required: \"Required\",\n        fourOrMore: \"Must be 4 characters or more\",\n        emailIssue: \"Invalid email address\",\n        eightOrMore: 'Must be 8 characters or more',\n        fifteenOrLess: 'Must be 15 characters or less',\n        passworsNotMatching: \"Passwords aren't matching\",\n        login: \"Login\"\n\n    },\n    ru: {\n        register: \"Отправить\",\n        clearValues: \"Oчистить формy\",\n        name: \"Имя\",\n        emailAddress: \"Адрес электронной почты\",\n        password: \"Пароль\",\n        confirmPasword: \"Подтвердить пароль\",\n        enterTextInBlue: \"Введите текст, выделенный синим цветом\",\n        required: \"Обязательное поле\",\n        fourOrMore: \"Должно быть 4 символа или более\",\n        emailIssue: \"Неверный адрес электронной почты\",\n        eightOrMore: \"Должно быть 8 символов или более\",\n        fifteenOrLess: 'Должно быть не более 15 символов',\n        passworsNotMatching: \"Пароли не совпадают\",\n        login: \"Aвторизоваться\"\n    }\n  };\n\n  export default messages;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux'\nimport * as actionCreators from '../../actions/index';\nimport Captcha from '../formelements/Captcha';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/Signupform';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { Link } from 'react-router-dom';\n\n\nconst validate = (values, props) => {\n    const errors = {}\n    if (!values.name) {\n      errors.name = messages[props.language].required;\n    } else if (values.name.length < 4) {\n      errors.name = messages[props.language].fourOrMore;\n    }\n\n    if (!values.email) {\n        errors.email =  messages[props.language].required;\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = messages[props.language].emailIssue;\n    }\n\n    if (!values.password) {\n        errors.password =  messages[props.language].required;\n    } else if (values.password.length < 8) {\n        errors.password = messages[props.language].eightOrMore;\n    } else if (values.password.length > 15) {\n        errors.password = messages[props.language].fifteenOrLess;\n    }\n\n    if (!values.passwordretype) {\n        errors.passwordretype =  messages[props.language].required;\n    } \n\n    if (!values.captcha) {\n        errors.captcha =  messages[props.language].required;\n    } \n\n    if((values.password && values.passwordretype) && values.password !== values.passwordretype){\n        errors.password = messages[props.language].passworsNotMatching;\n        errors.passwordretype = messages[props.language].passworsNotMatching;\n    }\n\n    return errors\n  }\n\n  const renderField = ({ input, name, label, type, meta: { touched, error, warning } }) => {\n    let err = touched && (!!(error));\n    let helpertextt = touched && error;\n    return (<TextField id={name} name={name} {...input} label={label} error={err} helperText={helpertextt} size=\"small\" variant=\"outlined\" fullWidth />)\n  }\n\n  const renderPasswordField = ({ input,  name,  label,  type,  meta: { touched, error, warning }, whatToShow}) => {\n      let err = touched && (!!(error));\n      let helpertextt = touched && error;\n      return (<TextField id={name} name={name} {...input} label={label} error={err} helperText={helpertextt} size=\"small\" variant=\"outlined\" fullWidth type={whatToShow}/>)\n  }\n\n\nlet SignupFormN = props => {\n  const { handleSubmit, pristine, reset, submitting, recaptchaText, onRecaptcaClick, language, valid, whatToShow, toggleVisibility } = props;\n  const translations = {\n    name:  language === 'en' ? messages.en.name : messages.ru.name,\n    emailAddress:  language === 'en' ? messages.en.emailAddress : messages.ru.emailAddress,\n    password:  language === 'en' ? messages.en.password : messages.ru.password,\n    enterTextInBlue:  language === 'en' ? messages.en.enterTextInBlue : messages.ru.enterTextInBlue,\n    confirmPasword: language === 'en' ? messages.en.confirmPasword : messages.ru.confirmPasword\n  }\n\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <center><form onSubmit={handleSubmit}>\n        <div>\n          <div>\n              <table className=\"loginFormWrapper\">\n                  <tbody>\n                      <tr>\n                        <td><Field  name=\"name\"   component={renderField}  type=\"text\"   label={translations.name} /></td>\n                        <td></td>\n                      </tr>\n                      <tr><td><Field  name=\"email\"   component={renderField}   type=\"text\"   label={translations.emailAddress} /></td><td></td></tr>\n                      <tr>\n                        <td><Field  name=\"password\"   component={renderPasswordField} label={translations.password} toShowPasswordMeter={true} whatToShow={whatToShow}/></td>\n                        <td className=\"visibilityToggleWrapper\"><span className=\"visibilityToggle\" onClick={toggleVisibility}>&nbsp;&nbsp;&nbsp;<i className=\"fa fa-eye\" aria-hidden=\"true\" style={whatToShow === 'text' ? {opacity: 0.4} : {}}></i></span></td>\n                      </tr>\n                      <tr><td><Field  name=\"passwordretype\"   component={renderPasswordField}    label={translations.confirmPasword} toShowPasswordMeter={true} whatToShow={whatToShow}/></td>\n                      <td></td>\n                      </tr>\n                      <tr><td><Field  name=\"captcha\"   component={renderField}    type=\"text\" label={translations.enterTextInBlue} /></td><td></td></tr>\n                      <tr><td><Captcha text={recaptchaText} onClick={onRecaptcaClick}/></td><td></td></tr>\n                  </tbody>\n              </table>\n          </div>\n        </div>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" disabled={!valid || pristine || submitting}><FormattedMessage id=\"register\" /></Button>&nbsp;&nbsp;&nbsp;\n          <Button variant=\"contained\" color=\"error\" disabled={pristine || submitting} onClick={reset}><FormattedMessage id=\"clearValues\" /></Button>&nbsp;&nbsp;&nbsp;\n          <Link to=\"/app/login\"><Button variant=\"contained\" color=\"error\"><FormattedMessage id=\"login\" /></Button></Link>\n        </div>\n      </form>\n      </center>\n    </IntlProvider>\n  );\n};\n\nSignupFormN = reduxForm({\n  form: 'signupForm', \n  validate,\n})(SignupFormN);\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.loginSignUpReducer, ...state.settingsReducer\n  };\n}\n\nSignupFormN = connect(\n  state => ({\n    initialValues: {captcha: ''} \n  })\n)(SignupFormN)\n\nexport default connect(mapStateToProps, actionCreators)(SignupFormN);","import React, { Component } from 'react';\n\nclass SmartField extends Component {\n    constructor () {\n        super()\n        this.state = {\n            isHidden: false,\n            password: ''\n        }\n    }\n\n    togglePasswordVisibility() {\n        this.setState({\n            isHidden: !this.state.isHidden\n        })\n    }\n\n    render() {\n    const { input, label, toShowPasswordMeter, meta: { touched, error, warning, dirty } } = this.props;\n    let word, color, width = '';  \n    if(input.value.length <= 8){\n        word = \"very weak\"; color = \"Crimson\"; width=\"70px\"\n    } else if (input.value.length <= 10){\n        word = \"weak\"; color=\"DarkOrange\"; width=\"100px\"\n    } else if (input.value.length <= 12){\n        word = \"strong\"; color=\"DarkSeaGreen\"; width=\"130px\"\n    } else {\n        word = \"very strong\"; color=\"Green\"; width=\"160px\"\n    }\n    return (\n        <div>\n        <label>{label}</label>\n        <div>\n            <input {...input} placeholder={label} type='text' style={this.state.isHidden ? {} : {display: 'none'}} />\n            <input {...input} placeholder={label} type='password' style={this.state.isHidden ? {display: 'none'} : {}} />\n            <span onClick={this.togglePasswordVisibility.bind(this)}>&nbsp;&nbsp;&nbsp;<i className=\"fa fa-eye\" aria-hidden=\"true\" style={this.state.isHidden ? {} : {opacity: 0.5}}></i></span>\n            {touched &&  ((error && <span className=\"error\">{error}</span>) || (warning && <span>{warning}</span>))}\n            <div style={{height: \"19px\", padding: 0, marginTop: \"4px\"}}>{(dirty && toShowPasswordMeter) &&  <div style={{width: width, padding: \"0 5px\", backgroundColor: color, color: \"#fff\", fontSize: \"12px\"}}>{word}</div>}</div>\n        </div>\n        </div>\n    );\n    }\n}\n\nexport default SmartField;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux'\nimport * as actionCreators from '../../actions/index';\nimport SmartField from '../formelements/SmartField';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/Signupform';\n\n\nconst validate = (values) => {\n    const errors = {}\n    if (!values.name) {\n      errors.name = 'Required'\n    } else if (values.name.length < 4) {\n      errors.name = 'Must be 4 characters or more'\n    }\n\n    if (!values.email) {\n        errors.email = 'Required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address'\n    }\n\n    if (!values.password) {\n        errors.password = 'Required'\n    } else if (values.password.length < 8) {\n        errors.password = 'Must be 8 characters or more'\n    } else if (values.password.length > 15) {\n        errors.password = 'Must be 15 characters or less'\n    }\n\n    if (!values.passwordretype) {\n        errors.passwordretype = 'Required'\n    } \n\n    if((values.password && values.passwordretype) && values.password !== values.passwordretype){\n        errors.password = 'password not confirmed';\n        errors.passwordretype = 'password not confirmed'\n    }\n\n    return errors\n  }\n\n  const renderField = ({\n    input,\n    label,\n    type,\n    meta: { touched, error, warning }\n  }) => (\n    <div>\n      <label>{label}</label>\n      <div>\n        <input {...input} placeholder={label} type={type} />\n        {touched &&\n          ((error && <span className=\"error\">{error}</span>) ||\n            (warning && <span>{warning}</span>))}\n      </div>\n    </div>\n  )\n\n\nlet SignupFormNoRecaptcha = props => {\n  const { handleSubmit, pristine, reset, submitting, language } = props;\n  const translations = {\n    name:  language === 'en' ? messages.en.name : messages.ru.name,\n    emailAddress:  language === 'en' ? messages.en.emailAddress : messages.ru.emailAddress,\n    password:  language === 'en' ? messages.en.password : messages.ru.password,\n    enterTextInBlue:  language === 'en' ? messages.en.enterTextInBlue : messages.ru.enterTextInBlue,\n    confirmPasword: language === 'en' ? messages.en.confirmPasword : messages.ru.confirmPasword\n  }\n\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <div>\n              <table>\n                  <tbody>\n                      <tr><td><Field  name=\"name\"   component={renderField}  type=\"text\"   label={translations.name} /></td></tr>\n                      <tr><td><Field  name=\"email\"   component={renderField}   type=\"text\"   label={translations.emailAddress} /></td></tr>\n                      <tr><td><Field  name=\"password\"   component={SmartField} label={translations.password} toShowPasswordMeter={true}/></td></tr>\n                      <tr><td><Field  name=\"passwordretype\"   component={SmartField}    label={translations.confirmPasword} toShowPasswordMeter={true}/></td></tr>\n                  </tbody>\n              </table>\n          </div>\n        </div>\n        <div>\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={pristine || submitting}><FormattedMessage id=\"register\" /></button>&nbsp;&nbsp;\n          <button type=\"button\" className=\"btn btn-danger\" disabled={pristine || submitting} onClick={reset}><FormattedMessage id=\"clearValues\" /></button>\n        </div>\n      </form>\n    </IntlProvider>\n  );\n};\n\nSignupFormNoRecaptcha = reduxForm({\n  form: 'signupForm', \n  validate,\n})(SignupFormNoRecaptcha);\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.loginSignUpReducer, ...state.settingsReducer\n  };\n}\n\nSignupFormNoRecaptcha = connect(\n  state => ({\n    initialValues: {captcha: ''} \n  })\n)(SignupFormNoRecaptcha)\n\nexport default connect(mapStateToProps, actionCreators)(SignupFormNoRecaptcha);","const messages = {\n    en: {\n        register: \"Sign up\",\n    },\n    ru: {\n        register: \"3арегистрироваться\",\n    }\n  };\n\n  export default messages;","import React from 'react'\nimport MaterialUiNavigationMini from './MaterialUiNavigationMini';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport SignupFormN from \"./forms/signupFormN\";\nimport SignupFormNoRecaptcha from \"./forms/signupFormNoRecaptcha\";\nimport helpers from '../helpers/Helpers';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Signup';\n\n\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    this.recaptchaClick.bind(this);\n    this.state={\n      recaptcatext: '',\n      passwordType: 'password'\n    }\n  }\n\n  componentDidMount = () => {\n    this.recaptchaClick();\n    this.props.loadGlobalSettings();\n  }\n\n  recaptchaClick = () =>{\n    let recaptchaText = helpers.makeRandom();\n    this.props.setRecaptchaText(recaptchaText);\n    this.setState({\n      recaptcatext: recaptchaText\n    })\n  }\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  toggleVisibility = () =>{\n    this.state.passwordType === 'password' ? this.setState({ passwordType: 'text' }) : this.setState({ passwordType: 'password' });\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n        <MaterialUiNavigationMini logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} toggleLanguage={this.toggleLanguage} language={this.props.language}/>            <div className=\"container\">\n              <center><h2><FormattedMessage id=\"register\" /></h2></center>\n              {this.props.needToShowRecaptcha === 1 && \n              <SignupFormN onSubmit={()=>{this.props.signup()}} \n              errorMessage={this.props.loginError} \n              errorMessageVisibility={this.props.loginErrorVisibility} \n              recaptchaText={this.state.recaptcatext} \n              onRecaptcaClick={this.recaptchaClick}\n              language={this.props.language}\n              whatToShow={this.state.passwordType}\n              toggleVisibility={this.toggleVisibility.bind(this)}\n              />\n              }\n\n              {this.props.needToShowRecaptcha === 0 && \n              <SignupFormNoRecaptcha onSubmit={()=>{this.props.signup()}} \n              errorMessage={this.props.loginError} \n              errorMessageVisibility={this.props.loginErrorVisibility} \n              onRecaptcaClick={this.recaptchaClick}\n              language={this.props.language}\n              whatToShow={this.state.passwordType}\n              toggleVisibility={this.toggleVisibility.bind(this)}\n              />\n              }\n            </div>\n            \n        </div> \n     </IntlProvider>  \n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.loginSignUpReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(Signup);","import React, { Component } from 'react';\n\nclass Checkbox extends Component {\n  state = {\n    isChecked: true,\n  }\n\n  toggleCheckboxChange = () => {\n    const { handleCheckboxChange, label } = this.props;\n\n    this.setState(({ isChecked }) => (\n      {\n        isChecked: !isChecked,\n      }\n    ));\n\n    handleCheckboxChange(label);\n  }\n\n  render() {\n    const { label } = this.props;\n    const { isChecked } = this.state;\n\n    return (\n      <div className=\"checkbox\">\n        <label>\n          <input\n                type=\"checkbox\"\n                value={label}\n                checked={isChecked}\n                onChange={this.toggleCheckboxChange}\n            />&nbsp;\n          {label}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;","import React, { Component } from 'react';\n\nclass Select extends Component {\n  render() {\n    const { options, onChange, defaultt } = this.props;\n    return (\n    <div className=\"select\">\n        <select className=\"form-control\" onChange={onChange}   value={defaultt}>\n            { options.map((value) => ( <option key={value.id} value={value.id}>{value.value}</option>)) }\n        </select>\n    </div>\n    );\n  }\n}\n\nexport default Select;","import styled from 'styled-components'\n\nconst StyledPagination = styled.div`\nmargin: 20px 0;\n li{\n     width: 37px;\n     text-align: center;\n }\n\n li:first-child{\n    width: 37px;\n}\n > div{\n     width: 30px;\n     height: 30px;\n     text-align: center;\n     padding-top: 4px;\n     display: inline-block;\n     background-color: #C2CEDF;\n     margin: 0 5px 5px 0;\n }\n\n > div.active {\n    background-color: #C2FFFF;\n}\n`;\n\nexport default StyledPagination","import React, { Component } from 'react';\nimport StyledPagination from '../../styled/StyledPagination'\n\n\nclass Pagination extends Component {\n  render() {\n    const { paginationQuantity, paginationNumber, paginationClick } = this.props;\n    return (\n        <StyledPagination>\n            <ul className=\"pagination pagination-sm flex-wrap\">\n              <li className=\"page-item\" style={(paginationNumber === 0) ? {opacity: '.2'} : {}} onClick={() => paginationClick(0)} key=\"-3\">\n                <button className=\"page-link\" key=\"-3\">&lt;&lt;</button>\n              </li>\n              <li className=\"page-item\" style={(paginationNumber === 0) ? {opacity: '.2'} : {}} \n              onClick={() => {if (paginationNumber > 0) {paginationClick(paginationNumber-1)} }} key=\"-2\">\n                <button className=\"page-link\" key=\"-2\">&lt;</button>\n              </li>\n              <li className=\"page-item\" style={(paginationNumber > 2) ? {} : {display: \"none\"}} key=\"-1\">\n                <button className=\"page-link\" key=\"-1\">..</button>\n              </li>\n            {Array(paginationQuantity).fill().map((_, i) =>(<> \n              <li className={(paginationNumber === i ? \"page-item active\" : \"page-item\")} onClick={() => paginationClick(i)} \n              key={i} style={(paginationNumber < (i-2) || paginationNumber > (i+2)) ? {display: 'none'} : {}}>\n                <button className=\"page-link\" key={i}>{i + 1}</button> \n              </li></>))}\n              <li className=\"page-item\" style={(paginationNumber < (paginationQuantity-3)) ? {} : {display: \"none\"}} key=\"3000\">\n                <button className=\"page-link\" key=\"3000\">..</button>\n              </li>\n              <li className=\"page-item\" style={(paginationNumber === (paginationQuantity - 1)) ? {opacity: '.2'} : {}} key=\"3001\" onClick={() => {if(paginationNumber<(paginationQuantity-1)){paginationClick(paginationNumber+1)} }}>\n                <button className=\"page-link\" key=\"3001\">&gt;</button>\n              </li>\n              <li className=\"page-item\" style={(paginationNumber === (paginationQuantity - 1)) ? {opacity: '.2'} : {}} key=\"3002\" onClick={() => paginationClick(paginationQuantity - 1)}>\n                <button className=\"page-link\" key=\"3002\">&gt;&gt;</button>\n              </li>\n            </ul>\n        </StyledPagination>\n    );\n  }\n}\n\nexport default Pagination;","const messages = {\n    en: {\n      results: \"Results\",\n      belowAreResults: \"Below are your tests results\",\n      subjects: \"Subjects\",\n      subject: \"Subject\",\n      filterResults: \"Filter results\",\n      itemsPerPage: \"Items qty per page\",\n      sortingOptons: \"Sort\",\n      score: \"Score\",\n      answeredQuestions: \"Answered\",\n      createdAt: \"Date\",\n      testDateAsc: \"Testing date asc\",\n      testDateDesc: \"Testing date dec\",\n      resultsAsc: \"Testing results asc\",\n      resultsDesc: \"Testing results desc\",\n      subjAsc: \"Subjects asc\",\n      subjsDesc: \"Subjects desc\",\n      noResults: \"No results\"\n\n\n    },\n    ru: {\n      results: \"Pезультаты\",\n      belowAreResults: \"Pезультаты ваших тестов\",\n      subjects: \"Предметы\",\n      subject: \"Предмет\",\n      filterResults: \"Фильтровать результаты\",\n      itemsPerPage: \"Pез. на страницу\",\n      sortingOptons: \"Сорт\",\n      score: \"Бaлл\",\n      answeredQuestions: \"Bопросов\",\n      createdAt: \"Дата\",\n      testDateAsc: \"Дата тестиров. возр.\",\n      testDateDesc: \"Дата тестиров. убыв.\",\n      resultsAsc: \"Результаты возр.\",\n      resultsDesc: \"Результаты убыв.\",\n      subjAsc: \"Предметы возр.\",\n      subjsDesc: \"Предметы убыв.\",\n      noResults: \"Нет результатов\"\n    }\n  };\n\n  export default messages;","import React from 'react'\nimport MaterialUiNavigation from './MaterialUiNavigation';\nimport {connect} from 'react-redux';\nimport Checkbox from './formelements/Checkbox';\nimport Select from './formelements/Select';\nimport Pagination from './formelements/Pagination';\nimport * as actionCreators from '../actions/index';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport helpers from '../helpers/Helpers';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Resultsn';\n\nimport StyledAccordeon from '../styled/StyledAccordeon'\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\n\nclass Resultsn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    this.state = {\n      resultsPerPage: [\n          {id: 5, value: \"5\"},\n          {id: 10, value: \"10\"},\n          {id: 20, value: \"20\"},\n          {id: 50, value: \"50\"},\n      ],\n    }\n  }\n\n  componentDidMount() {\n    this.props.setOverlayVisibility(true);\n    this.props.loadSubjectsUsers();\n    this.props.loadResults();\n    this.selectedCheckboxes = new Set();\n    this.props.subjectsUser.map((subject) =>this.selectedCheckboxes.add(subject.name))\n  }\n\n  componentWillUnmount() {\n    this.props.setCurrentPaginationAction(0);\n  }\n\n  filterresults = (initialResults, activeSubjects, resultsFilterPerPage, resultsFilterPaginationNumber, sortingOption) => {\n    let filteredBySubjectsAndSort = helpers.FilterBySubjectsAndSort(initialResults, activeSubjects, sortingOption);\n    this.props.setNumberOfPaginationAction(Math.ceil(filteredBySubjectsAndSort.length/resultsFilterPerPage));\n    return helpers.PaginatedResults(filteredBySubjectsAndSort, resultsFilterPerPage, resultsFilterPaginationNumber);\n  }\n\n  toggleCheckbox = (label) => {\n    if (this.selectedCheckboxes.has(label)) {  this.selectedCheckboxes.delete(label);  } else {  this.selectedCheckboxes.add(label); }\n    let resultsFiltered = this.filterresults(this.props.results, [...this.selectedCheckboxes], this.props.resultsFilterPerPage, 0, this.props.resultsFilterSortingOption);\n    this.props.setResultsFiltered(resultsFiltered);\n    this.props.setResultsFilterActiveSubjects([...this.selectedCheckboxes]);\n    this.props.setCurrentPaginationAction(0);\n  }\n\n  createCheckbox = subject => (\n    <Checkbox label={subject.name} handleCheckboxChange={this.toggleCheckbox.bind(this)} key={subject.id} />\n  )\n\n  createCheckboxes = () => (\n    this.props.subjectsUser.map(this.createCheckbox)\n  )\n\n  onDropdownChangeItemsPerPage = (event) => {\n    let resultsFiltered = this.filterresults(this.props.results, [...this.selectedCheckboxes], event.target.value, 0, this.props.resultsFilterSortingOption);\n    this.props.setResultsFiltered(resultsFiltered);\n    this.props.setItemsPerPage(event.target.value);\n    this.props.setCurrentPaginationAction(0);\n  };\n\n  onDropdownChangeSortingOptions = (event) => {\n    let resultsFiltered = this.filterresults(this.props.results, [...this.selectedCheckboxes], this.props.resultsFilterPerPage, 0, event.target.value);\n    this.props.setResultsFiltered(resultsFiltered);\n    this.props.setCurrentPaginationAction(0);\n    this.props.setSortingOptionAction(event.target.value);\n  };\n\n  paginationClick = (i) => {\n    let resultsFiltered = this.filterresults(this.props.results, [...this.selectedCheckboxes], this.props.resultsFilterPerPage, i, this.props.resultsFilterSortingOption);\n    this.props.setResultsFiltered(resultsFiltered);\n    this.props.setCurrentPaginationAction(i);\n  }\n\n  toggleLanguage = (lang) => {\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    const columns = [{\n      dataField: 'quality',\n      text:  this.props.language === 'en' ? messages.en.score : messages.ru.score,\n      sort: false\n    }, {\n      dataField: 'answered_questions_number',\n      text: this.props.language === 'en' ? messages.en.answeredQuestions : messages.ru.answeredQuestions,\n      sort: false\n    },{\n      dataField: 'createdAt',\n      text: this.props.language === 'en' ? messages.en.createdAt : messages.ru.createdAt,\n      sort: false\n    }, {\n      dataField: 'subjectName',\n      text: this.props.language === 'en' ? messages.en.subject : messages.ru.subject,\n      sort: false\n    }\n    ]\n\n    const sortOptions = \n    [\n      {id: 1, value: this.props.language === 'en' ? messages.en.testDateAsc : messages.ru.testDateAsc },\n      {id: 2, value: this.props.language === 'en' ? messages.en.testDateDesc : messages.ru.testDateDesc },\n      {id: 3, value: this.props.language === 'en' ? messages.en.resultsAsc : messages.ru.resultsAsc },\n      {id: 4, value: this.props.language === 'en' ? messages.en.resultsDesc : messages.ru.resultsDesc },\n      {id: 5, value: this.props.language === 'en' ? messages.en.subjAsc : messages.ru.subjAsc },\n      {id: 6, value: this.props.language === 'en' ? messages.en.subjsDesc : messages.ru.subjsDesc },\n    ]\n\n     return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n      <div>\n      <MaterialUiNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} toggleLanguage={this.toggleLanguage} language={this.props.language}/>        <div className=\"container\">\n          <h2><FormattedMessage id=\"results\" /></h2>\n          <StyledAccordeon>\n            <Accordion>\n              <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\"  id=\"panel1a-header\">\n                <Typography><FormattedMessage id=\"filterResults\" /></Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <table className=\"resultsFilter\">\n                  <tbody>\n                    <tr>\n                      <th><FormattedMessage id=\"subjects\" />:</th>\n                      <th><FormattedMessage id=\"itemsPerPage\" />:</th>\n                      <th><FormattedMessage id=\"sortingOptons\" />:</th>\n                    </tr>\n                    <tr>\n                      <td>{this.createCheckboxes()}</td>\n                      <td><Select options={this.state.resultsPerPage} onChange={this.onDropdownChangeItemsPerPage} defaultt={this.props.resultsFilterPerPage}/></td>\n                      <td><Select options={ sortOptions } onChange={this.onDropdownChangeSortingOptions} defaultt={this.props.resultsFilterSortingOption}/></td>\n                    </tr>\n                  </tbody>\n                </table>\n              </AccordionDetails>\n            </Accordion>\n          </StyledAccordeon>\n          <div style={(this.props.resultsFiltered.length === 0) ? {display: 'none'} : {}}>\n            <Pagination paginationQuantity={this.props.resultsFilterPaginationQuantity} paginationNumber={this.props.resultsFilterPaginationNumber} \n              paginationClick={this.paginationClick}/>\n            <BootstrapTable keyField='id' data={ this.props.resultsFiltered } columns={ columns } />\n            <Pagination paginationQuantity={this.props.resultsFilterPaginationQuantity} paginationNumber={this.props.resultsFilterPaginationNumber} \n              paginationClick={this.paginationClick}/>\n          </div>\n          <div style={(this.props.resultsFiltered.length === 0) ? {} : {display: 'none'}}>\n            <br /><br /><br /><center><h4><FormattedMessage id=\"noResults\" /></h4></center>\n          </div>\n        </div>\n      </div>\n     </IntlProvider>   \n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.loginSignUpReducer, ...state.resultsReducer, ...state.subjectsReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(Resultsn);","const messages = {\n  en: {\n    subject: \"Subject\",\n    active: \"Active\",\n    clearVal: \"Clear form\",\n    edit: \"Edit\",\n    delete: \"Delete\",\n    save: \"Save\",\n    submit: \"Submit\",\n  },\n  ru: {\n      subject: \"Предмет\",\n      active: \"Активный\",\n      clearVal: \"Очистить\",\n      edit: \"Править\",\n      delete: \"Удалить\",\n      save: \"Сохранить\",\n      submit: \"Oтослать\",\n  }\n};\n\nexport default messages;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/AddSubjForm';\n\nconst AddSubjectForm = props => {\n  const { handleSubmit, pristine, reset, submitting, language } = props;\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <div>\n          <FormattedMessage id=\"subject\">\n            {(formattedValue)=>(<Field name=\"subject\" component=\"input\" type=\"text\" placeholder={formattedValue}/>)}\n          </FormattedMessage>\n          </div>\n        </div>\n        <div>\n          <button type=\"submit\" disabled={pristine || submitting}><FormattedMessage id=\"submit\" /></button>\n          <button type=\"button\" disabled={pristine || submitting} onClick={reset}><FormattedMessage id=\"clearVal\" /></button>\n        </div>\n      </form>\n    </IntlProvider>\n  );\n};\n\nexport default reduxForm({\n  form: 'addSubjectForm', // a unique identifier for this form\n})(AddSubjectForm);","import React from 'react';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/EditSubjRow';\nimport Modal from '../formelements/Modal';\n\n\nexport default class EditSubjectRow extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isInputHidden: true,\n            name: this.props.subject.name,\n            id: this.props.subject.id,\n            editMode: false\n        }\n        this.modall = React.createRef();\n    }\n   \n\n    saveSubject() {\n        this.props.saveSubject({id: this.state.id, name: this.state.name});\n        this.setState({editMode: false})\n    }\n\n    deleteSubject(){\n        this.props.deleteSubject({id: this.state.id});\n    }\n\n    openModal(){\n        this.modall.current.showModal();\n    }\n\n    toggleSubjectActivity(){\n        this.props.toggleSubjectActivity({id: this.state.id});\n    }\n\n    handleChangeName = event => {\n        this.setState({ name: event.target.value });\n    }\n\n    toggleEditModeTrue () {\n        this.setState({\n            editMode: true\n        })\n    }\n\n    render(props) {\n        const { name, active, questions_number } = this.props.subject;//saveSubject\n        const activePhrase = active === 1 ? this.props.language === 'en' ? messages.en.active1 : messages.ru.active1 : this.props.language === 'en' ? messages.en.hidden : messages.ru.hidden;\n        const { language } = this.props;\n      return  (\n        <>\n            <Modal ref={this.modall} toExecute = {this.deleteSubject.bind(this)} message={'Please confirm subject deletion'}/>\n            <IntlProvider locale={language} messages={messages[language]}>\n                <tr>\n                    <td style={this.state.editMode ? {display: 'none'} : { display: 'block' }}> {name} </td>\n                    <td style={this.state.editMode ? {display: 'block'} : { display: 'none' }}><input type=\"text\"  value={this.state.name} onChange={this.handleChangeName.bind(this)}/></td>\n                    <td onClick={this.toggleSubjectActivity.bind(this)} className=\"cursorPointer\">\n                    {activePhrase}\n                    </td>\n                    <td>\n                    {questions_number}\n                    </td>\n                    <td style={this.state.editMode ? {display: 'block'} : { display: 'none' }}>\n                        <button className=\"btn btn-success btn-sm\" onClick={this.saveSubject.bind(this)}><FormattedMessage id=\"save\" /></button>\n                    </td>\n                    <td style={this.state.editMode ? {display: 'none'} : { display: 'block' }}>\n                        <button className=\"btn btn-warning btn-sm\" onClick={this.toggleEditModeTrue.bind(this)}><FormattedMessage id=\"edit\" /></button>\n                    </td>\n                    <td>\n                        <button className=\"btn btn-danger btn-sm\" onClick={this.openModal.bind(this)} disabled={questions_number > 0}><FormattedMessage id=\"delete\" /></button>\n                    </td>\n                </tr>\n            </IntlProvider>\n        </>\n    );\n    }\n  }\n\n","import React from 'react';\nimport EditSubjectRow from './EditSubjectRow';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/EditSubjectForm';\n\nconst EditSubjectForm = props => {\n  const { saveSubject, subjects, deleteSubject, toggleSubjectActivity, language } = props;\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <table>\n          <thead>\n            <tr>\n              <th><FormattedMessage id=\"subject\" /></th>\n              <th><FormattedMessage id=\"active\" />?</th>\n              <th><FormattedMessage id=\"questionNumber\" /></th>\n              <th><FormattedMessage id=\"edit\" /></th>\n              <th><FormattedMessage id=\"delete\" /></th>\n            </tr>\n          </thead>\n          <tbody>\n              {subjects.map(subject => <EditSubjectRow \n              subject={subject} \n              saveSubject={saveSubject} \n              deleteSubject={deleteSubject} \n              toggleSubjectActivity = {toggleSubjectActivity}\n              key={subject.id}\n              language={language}\n              /> )}\n          </tbody>\n      </table>\n    </IntlProvider>\n  );\n};\n\nexport default EditSubjectForm;","const messages = {\n    en: {\n      subjControlCenter: \"Subjects control center\",\n      atTheMomentSubjList: \"At the moment we have tests on these subjects available in our site\",\n    },\n    ru: {\n      subjControlCenter: \"Центр управления предметами\",\n      atTheMomentSubjList: \"На данный момент на сайте доступны тесты по этим предметам\",\n    }\n  };\n\n  export default messages;","import React from 'react';\nimport '../App.css';\nimport MaterialUiNavigation from './MaterialUiNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport AddSubjectForm from \"./forms/addSubjectForm\";\nimport EditSubjectForm from \"./forms/EditSubjectForm\";\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Subjects';\n\n\nclass Subjects extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    this.countdown = React.createRef();\n  }\n\n  state = {\n    subject: '',\n  }\n\n  componentDidMount(){\n    this.props.loadSubjectsAdmin();\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n          <MaterialUiNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} toggleLanguage={this.toggleLanguage} language={this.props.language}/>            <div className=\"container\">\n              <h2><FormattedMessage id=\"subjControlCenter\" /></h2><br/><br/>\n              <AddSubjectForm onSubmit={()=>{this.props.addSubjectOne()}} language={this.props.language}/><br/><br/>\n              <FormattedMessage id=\"atTheMomentSubjList\" />:<br/><br/>\n              <EditSubjectForm subjects={this.props.subjectsAdmin} \n                saveSubject={this.props.saveSubject} \n                deleteSubject={this.props.deleteSubject} \n                toggleSubjectActivity={this.props.toggleSubjectActivity}\n                language={this.props.language}\n                />\n            </div>\n        </div>\n      </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n    return {\n      ...state.testReducer, ...state.loginSignUpReducer, ...state.subjectsReducer, ...state.settingsReducer\n    };\n  }\n\nexport default (connect(mapStateToProps, actionCreators))(Subjects);","const messages = {\n    en: {\n      aboutCookieTitle: \"About Cookie\",\n      aboutCookieText: \"What is a cookie? A cookie is a small file that can be placed on your device that allows us to recognise and remember you. It is sent to your browser and stored on your computer's hard drive or tablet or mobile device. When you visit our sites,  we may collect information from you automatically through cookies or similar technology. \",\n    },\n    ru: {\n      aboutCookieTitle: \"О файлах cookie\",\n      aboutCookieText: \"Что такое cookie? Файл cookie - это небольшой файл, который может быть размещен на вашем устройстве и позволяет нам узнавать и запоминать вас. Он отправляется в ваш браузер и сохраняется на жестком диске вашего компьютера, планшете или мобильном устройстве. Когда вы посещаете наши сайты,  мы можем собирать информацию от вас автоматически с помощью файлов cookie или аналогичных технологий.\",\n    }\n  };\n\n  export default messages;","import React from 'react'\nimport MaterialUiNavigation from './MaterialUiNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/AboutCookie';\nimport { withCookies } from 'react-cookie';\n\n\nclass AboutCookie extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    const { cookies } = props;\n    const mycookie = cookies.get('needToRedirectToLogin') ? cookies.get('needToRedirectToLogin') : \"empty\"\n    this.state = {\n      email: '',\n      password: '',\n      cook: cookies,\n      needToRedirectToLogin: mycookie,\n    };\n  }\n\n  componentDidMount(){\n    this.state.cook.remove('needToRedirectToLogin');\n  }\n\n  handleChangeMail = event => {\n    this.setState({ email: event.target.value });\n  }\n\n  handleChangePassword = event => {\n    this.setState({ password: event.target.value });\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n          <MaterialUiNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          <div className=\"container\">\n          <br/>\n            <h2><FormattedMessage id=\"aboutCookieTitle\" /></h2>\n            <FormattedMessage id=\"aboutCookieText\" />\n          </div>\n        </div>\n     </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.loginSignUpReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(withCookies(AboutCookie));","import styled from 'styled-components'\n\n//const coll = props.bGcolorr;\n\nconst StyledCookieConsent = styled.div`\n  position: fixed;\n  width: 100%;\n  bottom: 30px;\n  left: -8px;\n  z-index: 3000;\n  .flashMessageBody {\n    position: absolute;\n    bottom: ${props => props.ifVisible === 0 ? `-240px` : `-35px`};\n    width: calc(100% + 8px);\n    background-color: #d4edda;\n    text-align: center;\n    padding: 15px;\n    transition: top 3s;\n    transition: bottom 3s;\n    p.message {\n      margin-bottom: 0;\n      display: inline;\n      margin-right: 30px;\n    }\n    a {\n      margin-right: 30px;\n      cursor: pointer;\n    }\n  }\n`;\n\n//to hide, put -240px  ///bGcolorr\n\nexport default StyledCookieConsent","const messages = {\n    en: {\n      consent: \"This site uses cookie to provide you with a great user experience\",\n      agree: \"Agree\",\n      details: \"Details...\"\n    },\n    ru: {\n      consent: \"Этот сайт использует файлы cookie для вашего удобства\",\n      agree: \"Согласeн\",\n      details: \"Подробности...\"\n    }\n  };\n\n  export default messages;","import React from 'react';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport StyledCookieConsent from '../styled/StyledCookieConsent'\nimport {withCookies} from 'react-cookie';\nimport messages from '../translations/CookieConsent';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport { Link } from 'react-router-dom';\nimport Button from '@mui/material/Button';\n\n\nclass CookieConsent extends React.Component {\n  constructor(props) {\n    super(props);\n    const { cookies } = props;\n    const mycookie = cookies.get('cookieConsentObtained')\n    this.state = {\n        cookieConsentObtained: mycookie\n    };\n  }\n\n  componentDidMount(){\n    setTimeout(() => { \n        if(!this.state.cookieConsentObtained && this.props.cookieConsentObtained === 0){/// this means that user came from email confirmation link\n            this.props.setCookieConsentVisibility(1);\n        };\n    }, 5000);\n  }\n\n  componentDidUpdate(){\n    if(this.props.cookieConsentObtained === 1){/// this means that user came from email confirmation link\n        this.props.setCookieConsentVisibility(0);\n    } \n  }\n\n  hideConsent(){\n    this.props.cookies.set(\"cookieConsentObtained\", 'obtained', { path: '/', expires: new Date(Date.now()+22222592000)})  \n    this.props.setCookieConsentVisibility(0);\n  }\n\n  render() {\n    return (\n        <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n            <StyledCookieConsent ifVisible={this.props.cookieConsentVisibility}>\n                <div className=\"flashMessageBody\">\n                    <p className=\"message\"><FormattedMessage id=\"consent\" /></p>\n                    <Link to=\"/app/aboutcookie\"><FormattedMessage id=\"details\" /></Link>\n                    <Button variant=\"contained\"  onClick={this.hideConsent.bind(this)}>\n                      <FormattedMessage id=\"agree\" />\n                    </Button>\n                </div>\n            </StyledCookieConsent>\n        </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(withCookies(CookieConsent));","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/Login';\nimport SmartField from '../formelements/SmartField';\n\n\nconst validate = values => {\n    const errors = {}\n    if (!values.password) {\n        errors.password = 'Required'\n    } else if (values.password.length < 8) {\n        errors.password = 'Must be 8 characters or more'\n    } else if (values.password.length > 15) {\n        errors.password = 'Must be 15 characters or less'\n    }\n\n    if (!values.repeatpassword) {\n        errors.repeatpassword = 'Required'\n    } else if (values.repeatpassword.length < 8) {\n        errors.repeatpassword = 'Must be 8 characters or more'\n    } else if (values.repeatpassword.length > 15) {\n        errors.repeatpassword = 'Must be 15 characters or less'\n    }\n\n    if (values.repeatpassword !== values.password) {\n        errors.password = 'Password doesn\\'t match';\n        errors.repeatpassword = 'Password doesn\\'t match';\n    } \n\n    return errors\n  }\n\nconst PasswordResetForm = props => {\n  const { handleSubmit, pristine, reset, submitting, errorMessage, errorMessageVisibility, language } = props;\n  const translations = {\n    emailAddress:  language === 'en' ? messages.en.emailAddress : messages.ru.emailAddress,\n    password:  language === 'en' ? messages.en.password : messages.ru.password,\n    repeatpassword: language === 'en' ? messages.en.repeatpassword : messages.ru.repeatpassword,\n  }\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <div>\n              <table>\n                  <tbody>\n                      <tr><td><Field  name=\"password\"   component={SmartField} label={translations.password}  toShowPasswordMeter={true}/></td></tr>\n                      <tr><td><Field  name=\"repeatpassword\"   component={SmartField} label={translations.repeatpassword} toShowPasswordMeter={true}/></td></tr>\n                      <tr style={{visibility: `${errorMessageVisibility}`}}><td><span className=\"error\">{errorMessage}</span></td></tr>\n                  </tbody>\n              </table>\n          </div>\n        </div>\n        <br/><br/>\n        <div>\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={pristine || submitting}><FormattedMessage id=\"senddata\" /></button>&nbsp;&nbsp;&nbsp;\n          <button type=\"button\" className=\"btn btn-danger\" disabled={pristine || submitting} onClick={reset}><FormattedMessage id=\"clearValues\" /></button>\n        </div>\n      </form>\n    </IntlProvider>\n  );\n};\n\nexport default reduxForm({\n  form: 'passwordresetform', \n  validate\n})(PasswordResetForm);","const messages = {\n    en: {\n        passwordreset: \"Reset password\",\n    },\n    ru: {\n        passwordreset: \"Сброс пароля\",\n    }\n  };\n\n  export default messages;","import React from 'react'\nimport MaterialUiNavigation from './MaterialUiNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport PasswordResetForm from \"./forms/passwordresetform\";\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/PasswordReset';\nimport { withCookies } from 'react-cookie';\n\n\nclass PasswordReset extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    const { cookies } = props;\n    this.state = {\n      cook: cookies,\n    };\n  }\n\n  componentDidMount(){\n  }\n\n  componentDidUpdate() {\n    if(this.props.redirectFlagForPasswordresetFunctionality === 2){\n    this.props.history.push('/app/login');\n    }\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n        <MaterialUiNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          <div className=\"container\">\n            <h2><FormattedMessage id=\"passwordreset\" /></h2>\n            <PasswordResetForm onSubmit={()=>{this.props.resetPassword()}} errorMessage={this.props.loginError} errorMessageVisibility={this.props.loginErrorVisibility} language={this.props.language}/>\n          </div>\n      </div> \n     </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.loginSignUpReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(withCookies(PasswordReset));","import React from 'react';\nimport '../App.css';\nimport MaterialUiNavigation from './MaterialUiNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport { IntlProvider } from \"react-intl\";\nimport messages from '../translations/Home';\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemHeading,\n    AccordionItemButton,\n    AccordionItemPanel,\n  } from 'react-accessible-accordion';\n  import 'react-accessible-accordion/dist/fancy-example.css';\n  import StyledAccordeon from '../styled/StyledAccordeon'\n\nclass AdminSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n  }\n  \n  componentDidMount(){\n    this.props.loadGlobalSettings();\n  }\n  toggleEmailConfirmation(){\n    this.props.toggleEmailConfirmation();\n  }\n\n  toggleRecaptcha(){\n    this.props.toggleRecaptcha();\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n          <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n            <div>\n            <MaterialUiNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n            <div className=\"container\">\n              <h2>Global Settings</h2>\n              <StyledAccordeon>\n                <Accordion allowMultipleExpanded=\"true\" allowZeroExpanded=\"true\">\n                  <AccordionItem>\n                      <AccordionItemHeading>\n                          <AccordionItemButton>\n                            Email confirmation\n                          </AccordionItemButton>\n                      </AccordionItemHeading>\n                      <AccordionItemPanel>\n                        <div style={this.props.needEmailConfirmation === 0 ? {} : {display: 'none'}}>\n                            Disabled &nbsp;&nbsp;&nbsp;&nbsp;<button type=\"button\" className=\"btn btn-success\" onClick={this.toggleEmailConfirmation.bind(this)}>Click to enable</button>{/* onClick={this.clickYes.bind(this)} */}\n                        </div>\n                        <div style={this.props.needEmailConfirmation === 1 ? {} : {display: 'none'}}>\n                            Enabled &nbsp;&nbsp;&nbsp;&nbsp;<button type=\"button\" className=\"btn btn-danger\" onClick={this.toggleEmailConfirmation.bind(this)}>Click to disable</button>\n                        </div>\n                      </AccordionItemPanel>\n                      <AccordionItem>\n                      <AccordionItemHeading>\n                          <AccordionItemButton>\n                            Use recaptcha on signup\n                          </AccordionItemButton>\n                      </AccordionItemHeading>\n                      <AccordionItemPanel>\n                        <div style={this.props.needToShowRecaptcha === 0 ? {} : {display: 'none'}}>\n                            Disabled &nbsp;&nbsp;&nbsp;&nbsp;<button type=\"button\" className=\"btn btn-success\" onClick={this.toggleRecaptcha.bind(this)}>Click to enable</button>{/* onClick={this.clickYes.bind(this)} */}\n                        </div>\n                        <div style={this.props.needToShowRecaptcha === 1 ? {} : {display: 'none'}}>\n                            Enabled &nbsp;&nbsp;&nbsp;&nbsp;<button type=\"button\" className=\"btn btn-danger\" onClick={this.toggleRecaptcha.bind(this)}>Click to disable</button>\n                        </div>\n                      </AccordionItemPanel>\n                  </AccordionItem>\n                  </AccordionItem>\n              </Accordion>\n            </StyledAccordeon><br/><br/>\n            </div>\n            </div>\n          </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.loginSignUpReducer, ...state.subjectsReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(AdminSettings);","const messages = {\n    en: {\n        emailAddress: \"E-mail address\",\n        forgotpassword: \"Forgot password?\",\n        username: \"Username\",\n        clearValues: \"Clear\",\n        send: \"Send\",\n        pleaseEnter: \"Please enter email address and/or username\",\n        andor: \"and/or\",\n        verifyaddress: \"Password reset link will be sent to the email address/username specified. Usually it takes up to 3 minutes for system to send email. Just click link in email body and fill password reset form. Please note that link is valid for 24 hours\",\n        enterTextInBlue: \"Enter text in blue below\",\n\n    },\n    ru: {\n        emailAddress: \"Адрес электронной почты\",\n        forgotpassword: \"Забыл пароль?\",\n        username: \"Имя пользователя\",\n        clearValues: \"Oчистить\",\n        send: \"Отправить\",\n        pleaseEnter: \"Пожалуйста, введите адрес электронной почты и/или имя пользователя\",\n        andor: \"и/или\",\n        verifyaddress: \"Ссылка для сброса пароля будет отправлена ​​на указанный адрес электронной почты/имя пользователя. Обычно система отправляет электронное письмо в течение 3 минут. Пожалуйста, примите во внимание что ссылка действительна в течение 24 часов.\",\n        enterTextInBlue: \"Введите текст, выделенный синим цветом\",\n    }\n  };\n\n  export default messages;","import React, { useRef, useEffect } from 'react'\n\n\nconst Captcha = props => {\n    const canvasRef = useRef(null);\n\n    const draw = ctx => {\n        ctx.fillStyle = '#0f0'\n        ctx.beginPath()\n        ctx.arc(50, 100, 20, 0, 2*Math.PI)\n        ctx.fill()\n      }\n\n    useEffect(() => {\n        const canvas = canvasRef.current\n        const context = canvas.getContext('2d')\n        //Our first draw\n        context.fillStyle = '#fff'\n        context.fillRect(0, 0, context.canvas.width, context.canvas.height)\n        context.fillStyle = '#06f'\n        context.font = \"20px Arial\";\n        context.fillText(props.text, 10, 30);\n\n        context.fillStyle = '#f00'\n        context.font = \"10px Arial\";\n        context.fillText('Click to reload', 100, 35);\n      }, [draw])\n\n    return <canvas ref={canvasRef} {...props} width=\"170px\" height=\"40px\" />\n}\n\n\nexport default Captcha;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/Forgotpassword';\nimport Captcha from '../Captcha';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\n\n\nconst validate = values => {\n    const errors = {}\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email) && values.email) {\n        errors.email = 'Invalid email address'\n    }\n\n    if (!values.username && !values.email) {\n        errors.email = 'Either Email or Username Required';\n        errors.username = 'Either Email or Username Required'\n    } \n\n    if (!values.captcha) {\n      errors.captcha = 'Recaptcha Required';\n  } \n\n    return errors\n  }\n\n  const renderField = ({ input, name, label, type, meta: { touched, error, warning } }) => {\n    let err = touched && (!!(error));\n    let helpertextt = touched && error;\n    return (<TextField id={name} name={name} {...input} label={label} error={err} helperText={helpertextt} size=\"small\" variant=\"outlined\" fullWidth />)\n  }\n\nconst ForgotPasswordForm = props => {\n  const { handleSubmit, pristine, reset, submitting, language, recaptchaText, onRecaptcaClick, valid } = props;\n  const translations = {\n    emailAddress:  language === 'en' ? messages.en.emailAddress : messages.ru.emailAddress,\n    username:  language === 'en' ? messages.en.username : messages.ru.username,\n    enterTextInBlue:  language === 'en' ? messages.en.enterTextInBlue : messages.ru.enterTextInBlue,\n  }\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <center>\n        <form onSubmit={handleSubmit}>\n        <div>\n          <div>\n              <table className=\"loginFormWrapper\">\n                  <tbody>\n                      <tr><td><Field  name=\"email\"   component={renderField} type=\"text\" label={translations.emailAddress} /></td></tr>\n                      <tr><td><FormattedMessage id=\"andor\" /></td></tr>\n                      <tr><td><Field  name=\"username\"   component={renderField} label={translations.username}/></td></tr>\n                      <tr><td><Field  name=\"captcha\"   component={renderField}    type=\"text\" label={translations.enterTextInBlue} /></td></tr>\n                      <tr><td><Captcha text={recaptchaText} onClick={onRecaptcaClick}/></td></tr>\n                  </tbody>\n              </table>\n          </div>\n        </div>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" disabled={!valid || pristine || submitting}><FormattedMessage id=\"send\" /></Button>&nbsp;&nbsp;&nbsp;\n          <Button variant=\"contained\" color=\"error\" disabled={pristine || submitting} onClick={reset}><FormattedMessage id=\"clearValues\" /></Button>\n        </div>\n      </form>\n      </center>\n    </IntlProvider>\n  );\n};\n\nexport default reduxForm({\n  form: 'forgotPasswordFormRedux', \n  validate\n})(ForgotPasswordForm);","import React from 'react'\nimport MaterialUiNavigation from './MaterialUiNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport ForgotPasswordForm from \"./forms/ForgotPasswordForm\";\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Forgotpassword';\nimport { withCookies } from 'react-cookie';\nimport helpers from '../helpers/Helpers';\n\n\nclass ForgotPassword extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    this.state = {\n      email: '',\n      password: '',\n      recaptcatext: '',\n    };\n    this.recaptchaClick.bind(this);\n  }\n\n  componentDidMount(){\n    this.recaptchaClick();\n  }\n\n  recaptchaClick = () =>{\n    let recaptchaText = helpers.makeRandom();\n    this.props.setRecaptchaText(recaptchaText);\n    this.setState({\n      recaptcatext: recaptchaText\n    })\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n        <MaterialUiNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          <div className=\"container\">\n            <center><h2><FormattedMessage id=\"forgotpassword\" /></h2></center>\n            <FormattedMessage id=\"pleaseEnter\" /><br/><br/>\n            <FormattedMessage id=\"verifyaddress\" /><br/><br/>\n            <center>\n            <ForgotPasswordForm onSubmit={()=>{this.props.sentForgotPasswordForm()}} \n            errorMessage={this.props.loginError} \n            errorMessageVisibility={this.props.loginErrorVisibility} \n            language={this.props.language}\n            recaptchaText={this.state.recaptcatext} \n            onRecaptcaClick={this.recaptchaClick}\n            />\n            </center>\n          </div>\n      </div>\n     </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.loginSignUpReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(withCookies(ForgotPassword));","const messages = {\n    en: {\n      accountSettings: \"Account settings\",\n      setCurrentLanguage: \"Set current langusage\",\n      wantToSeeHints: \"Want to see correct answer hints while testing\",\n      ifYesHints: \"If yes, after you clicked answer while testing, correct anser will be outlined in green for several seconds\",\n      changePassword: \"Change password\",\n      pleaseKeepInMind: \"Please keep in mind that after succesful password change stystem will log you out and you will need to use your new password to log in again.\",\n      submit: \"Submit\",\n      clearValues: \"Clear values\",\n      enterNewPassw: \"Enter new password\",\n      repeatNewPassw: \"Repeat new password\",\n      required: \"Required\",\n      mustBe8CharOrMore: \"Must be 8 characters or more\",\n      mustBe15CharactersOrLess: 'Must be 15 characters or less',\n      passwordsDoNotMatch: 'Passwords do not match',\n\n    },\n    ru: {\n      accountSettings: \"Настройки учетной записи\",\n      setCurrentLanguage: \"Установить текущий язык\",\n      wantToSeeHints: \"Хотите видеть подсказки при тестировании\",\n      ifYesHints: \"Если да, то после того как вы нажали ответ во время тестирования, правильный ответ будет обведен зеленой рамкой на несколько секунд.\",\n      changePassword: \"Cменить пароль\",\n      pleaseKeepInMind: \"Имейте в виду, что после успешной смены пароля система выйдет из сессии, и вам нужно будет использовать новый пароль для повторного входа.\",\n      submit: \"Oтправить\",\n      clearValues: \"Очистить формy\",\n      enterNewPassw: \"Введите новый пароль\",\n      repeatNewPassw: \"Повторите новый пароль\",\n      required: \"Oбязательный\",\n      mustBe8CharOrMore: \"Должно быть 8 или более символов\",\n      mustBe15CharactersOrLess: \"Должно быть не более 15 символов\",\n      passwordsDoNotMatch: 'Пароли не соответствуют',\n    }\n  };\n\n  export default messages;\n\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nconst checkPassword = (value, allValues, props ) => {\n  if (!value) {\n    return props.messages[props.language].required\n  } else if (value.length < 8) {\n    return props.messages[props.language].mustBe8CharOrMore\n  } else if (value.length > 15) {\n    return props.messages[props.language].mustBe15CharactersOrLess\n  }\n\n  if (allValues.repeatPassword !== allValues.password){\n    return props.messages[props.language].passwordsDoNotMatch\n  }\n}\n\nconst renderPasswordField = ({ input,  name,  label,  type,  meta: { touched, error, warning }, whatToShow}) => {\n  let err = touched && (!!(error));\n  let helpertextt = touched && error;\n  return (<TextField id={name} name={name} {...input} label={label} error={err} helperText={helpertextt} size=\"small\" variant=\"outlined\" fullWidth type={whatToShow}/>)\n}\n\nlet ChangePasswordForm = props => {  \n  const { handleSubmit, pristine, reset, submitting, valid, language, messages, whatToShow, toggleVisibility } = props;\n  return (\n    <center>\n        <form onSubmit={handleSubmit}>\n        <div>\n          <div>\n              <table className=\"loginFormWrapper\">\n                  <tbody>\n                      <tr>\n                        <td><Field  name=\"password\" component={renderPasswordField} type=\"password\" label={messages[language].enterNewPassw} validate={checkPassword}  whatToShow={whatToShow}/></td>\n                        <td className=\"visibilityToggleWrapper\"><span className=\"visibilityToggle\" onClick={toggleVisibility}>&nbsp;&nbsp;&nbsp;<i className=\"fa fa-eye\" aria-hidden=\"true\" style={whatToShow === 'text' ? {opacity: 0.4} : {}}></i></span></td>\n                      </tr>\n                      <tr>\n                        <td><Field  name=\"repeatPassword\"   component={renderPasswordField}    type=\"password\"   label={messages[language].repeatNewPassw} validate={checkPassword} lang={language} whatToShow={whatToShow}/></td>\n                        <td className=\"visibilityToggleWrapper\"></td>\n                      </tr>\n                  </tbody>\n              </table>\n          </div>\n        </div>\n        <div>\n          <br /><br />\n        <Button type=\"submit\" variant=\"contained\" disabled={!valid || pristine || submitting}>{messages[language].submit}</Button>&nbsp;&nbsp;&nbsp;\n        <Button variant=\"contained\" color=\"error\" disabled={pristine || submitting} onClick={reset}>{messages[language].clearValues}</Button>\n        </div>\n      </form>\n    </center>\n  );\n};\n\nChangePasswordForm = reduxForm({\n  form: 'changePasswordFormRedux'\n})(ChangePasswordForm)\n\nexport default ChangePasswordForm\n\n","import React from 'react';\nimport '../App.css';\nimport MaterialUiNavigation from './MaterialUiNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/AccountSettings';\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport ChangePasswordForm from \"./forms/ChangePasswordForm\";\n\nclass AccountSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    this.state = {\n      passwordType: 'password'\n    };\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  toggleLanguageInternal = (e) =>{\n    this.props.setLanguage(e.target.value);\n  }\n\n  toggleShowHintsInternal = (e) =>{\n    this.props.setIfToShowTestingHints(e.target.value);\n  }\n\n  toggleVisibility = () =>{\n    this.state.passwordType === 'password' ? this.setState({ passwordType: 'text' }) : this.setState({ passwordType: 'password' });\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <MaterialUiNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n        <div>\n          <div className=\"container\" style={{ minHeight: \"600px\" }}>\n            <center>\n              <h2><FormattedMessage id=\"changePassword\" /></h2>\n              <FormattedMessage id=\"pleaseKeepInMind\" />\n              <br/><br/>\n              <ChangePasswordForm \n              onSubmit={()=>{this.props.changePassword()}} \n              language = {this.props.language}\n              messages = {messages} \n              whatToShow={this.state.passwordType} \n              toggleVisibility={this.toggleVisibility.bind(this)}\n              />\n            </center>\n          </div>\n        </div>\n      </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.loginSignUpReducer, ...state.subjectsReducer, ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(AccountSettings);\n\n\n","import styled from 'styled-components'\n\n//const coll = props.bGcolorr;\n\nconst StyledFlashMessage = styled.div`\n  position: fixed;\n  top: 30px;\n  right: 420px;\n  z-index: 3000;\n  .flashMessageBody {\n    position: absolute;\n    top: ${props => props.ifVisible === 0 ? `-240px` : `-30px`};\n    right: 50%;\n    width: 400px;\n    background-color: ${props => props.bGcolorr === `success` ? `#d4edda` : `#f8d7da`};\n    text-align: center;\n    padding: 20px;\n    transition: top 1s;\n    p {\n      margin-bottom: 0;\n    }\n  }\n  @media only screen and (max-width: 600px) {\n    left: 0px;\n    .flashMessageBody {\n      width: 320px;\n      background-color: ${props => props.bGcolorr === `success` ? `#d4edda` : `#f8d7da`};\n      padding: 10px;\n    }\n  }\n`;\n\n//to hide, put -240px  ///bGcolorr\n\nexport default StyledFlashMessage","import React from 'react';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../../actions/index';\nimport StyledFlashMessage from '../../styled/StyledFlashMessage'\n\n\nclass FlashMessage extends React.Component {\n  render() {\n    return (\n        <StyledFlashMessage ifVisible={this.props.flashMessagesVisibility} bGcolorr = {this.props.flashMessagesType}>\n            <div className=\"flashMessageBody\">\n                <p>{this.props.flashMessagesMessage}</p>\n            </div>\n        </StyledFlashMessage>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(FlashMessage);","import styled from 'styled-components'\n\nconst StyledFeedbackButton = styled.div`\nbutton.rotated{\n    position: fixed;\n    top: 50%;\n    z-index: 30000;\n    right: -48px;\n    transform:rotate(-90deg);\n}\n\n\n    div.overlay{    \n        display: ${props => props.visib};\n        position: fixed;\n        z-index: 3000;\n        width: 100%;\n        background-color: rgba(0, 0, 0, 0.5);\n        top: 0;\n        bottom: 0;\n        left: 0;\n\n\n\n    \n        > .winWrapper {\n            background-color: white;\n            position: absolute;\n            top: 200px;\n            width: 400px;\n            height: 330px;\n            left: calc(50% - 200px);\n            border-radius: 10px 10px 0 0;\n      \n            @media (max-width: 768px) {\n              > .winWrapper{\n                width: 100%;\n              }\n            }\n      \n      \n            > .modalHeader {\n                width: 100%;\n                background-color: #00549a;\n                height: 40px;\n                color: white;\n                padding: 10px;\n                border-radius: 10px 10px 0 0;\n              }\n      \n            > .modalBody {\n              text-align: center;\n      \n              > .btn-danger {\n                width: 80px;\n                position: absolute;\n                bottom: 30px;\n                left: 60px;\n              }\n      \n              > .bodyText {\n                margin-top: 10px;\n                font-size: 20px;\n                color: #444;\n                margin-bottom: -30px;\n              }\n      \n              > .btn-success {\n                position: absolute;\n                bottom: 30px;\n                right: 60px;\n              }\n      \n              > textarea {\n                margin-top: 20px;\n              }\n            }\n          }\n    }\n\n\n`;\nexport default StyledFeedbackButton","const messages = {\n    en: {\n            sendFeedback: \"Send\",\n            cancel: \"Cancel\",\n            reset: \"Reset\",\n            addFeedback: \"Add your feedback\",\n            limit: \"Max 200 chars\",\n            howAreWeDoing: \"How are we doing\",\n            maximumNumberOfComments: \"Maximum number of comments\",\n            perDay: \" per day\"\n        },\n    ru: {\n            sendFeedback: \"Отправить\",\n            cancel: \"Отмена\",\n            reset: \"Сброс\",\n            addFeedback: \"Добавьте свой отзыв\",\n            limit: \"Макс 200 симв\",\n            howAreWeDoing: \"Добавьте свой отзыв\",\n            maximumNumberOfComments: \"Максимальное количество комментариев\",\n            perDay: \" в день\"\n        }\n  };\n\n  export default messages;","import React from 'react';\nimport { TextField } from \"@mui/material\";\n\nfunction TextAreaCounterPeter(props) {\n    const CHARACTER_LIMIT = props.limit;\n    const [values, setValues] = React.useState({\n    });\n  \n    const handleChange = name => event => {\n      setValues({ ...values, [name]: event.target.value });\n    };\n    \n      return (\n        <div>\n          <TextField\n            label={props.label}\n            inputProps={{\n              maxLength: CHARACTER_LIMIT,\n              name: props.input.name\n            }}\n            value={values.name}\n            helperText={`${props.input.value.length}/${CHARACTER_LIMIT}`}\n            margin=\"normal\"\n            variant=\"outlined\"\n            multiline\n            onChange={handleChange(\"comment\")}\n            {...props.input}\n            error={props.input.value.length === CHARACTER_LIMIT}\n            fullWidth\n          />\n        </div>\n      );\n  }\n  \n  export default TextAreaCounterPeter;\n\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { IntlProvider } from \"react-intl\";\nimport messages from '../../translations/forms/AddCommentForm';\nimport {connect} from 'react-redux';\nimport Button from '@mui/material/Button';\nimport TextAreaCounterPeter from '../formelements/TextAreaCounterPeter';\nimport SendIcon from '@mui/icons-material/Send';\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nlet validate = values => {\n  const errors = {}\n  if (!values.comment) {  errors.comment = 'Required'  } else if (values.comment.length > 200) { errors.comment = 'Must be 200 characters or less'}\n  return errors\n}\n\nlet AddCommentForm = props => {\n  const { handleSubmit, pristine, reset, submitting, language, valid, cancell } = props;\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <form onSubmit={handleSubmit}>\n        <div>\n            <table style={{width: \"100%\"}} className=\"contributionForm\">\n                <tbody>\n                  <tr><td><Field  name=\"comment\" component={TextAreaCounterPeter} limit={200} label={messages[language].howAreWeDoing}  language={language}/></td></tr>\n                </tbody>\n            </table>\n            <Button type=\"submit\" variant=\"contained\"  onClick={cancell} disabled={!valid || pristine || submitting}>\n              <SendIcon />\n            </Button>&nbsp;&nbsp;&nbsp;\n            <Button variant=\"contained\" color=\"error\" disabled={pristine || submitting} onClick={reset}>\n              <CancelIcon />\n            </Button>\n        </div>\n      </form>\n    </IntlProvider>\n  );\n};\n\nconst mapStateToProps=(state)=>{\n  return {\n      ...state.commentsReducer, ...state.loginSignUpReducer, ...state.settingsReducer\n  };\n}\n\nAddCommentForm = reduxForm({\n  form: 'addCommentFormRedux', \n  validate\n})(AddCommentForm);\n\nexport default connect(mapStateToProps)(AddCommentForm);\n","import React from 'react';\nimport StyledFeedbackButton from '../../styled/StyledFeedbackButton';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport AddCommentForm from './../forms/AddCommentForm';\nimport messages from '../../translations/forms/AddCommentForm';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../../actions/index';\nimport { formValueSelector } from 'redux-form';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nclass FeedbackButton extends React.Component {\n    constructor() {\n        super();\n        this.state = { visib: 'none', open: false};\n      }\n\n    showModal = () => {\n        this.setState({\n            visib: 'block'\n        });\n    };\n\n    hideModal = () => {\n        this.setState({\n            visib: 'none'\n        });\n    };\n\n    componentDidMount(){\n        this.props.getRatelimiterSettings();// to be able to show proper message about rate limits\n    }\n\n    clickSend = () => {\n        this.setState({visib: 'none'});\n    }\n\n    handleChildClick = (e) => {\n        e.stopPropagation();\n    }\n\n    handleClose = () =>{\n        this.setState({\n            open: false\n        });\n    }\n\n    handleClickOpen = () =>{\n        this.setState({\n            open: true\n        });\n    }\n\n    render() {\n        const { language, comment } = this.props;\n        const route = window.location.href.substring(window.location.href.indexOf(\"/app\"));\n\n        return (\n            <IntlProvider locale={language} messages={messages[this.props.language]}>\n                <StyledFeedbackButton  visib={this.state.visib} style={(this.props.roleId === 1 || this.props.roleId === 2) ? {} : {display: 'none'}}>\n                    <button className=\"btn btn-primary btn-sm rotated\" style={(language === 'en') ? {} : {right: '-55px'}} onClick={this.handleClickOpen.bind(this)}><FormattedMessage id=\"howAreWeDoing\"/></button>\n                    <Dialog open={this.state.open} onClose={this.handleClose.bind(this)}>\n                        <DialogTitle><FormattedMessage id=\"addFeedback\" /></DialogTitle>\n                        <DialogContent>\n                            <FormattedMessage id=\"maximumNumberOfComments\" />: {this.props.commentRateLimiterQuantity}<FormattedMessage id=\"perDay\" />\n                            <AddCommentForm onSubmit={()=>{this.props.postComment({comment, route});}} language={this.props.language} cancell={this.handleClose.bind(this)}/>\n                        </DialogContent>\n                    </Dialog>\n                </StyledFeedbackButton>\n            </IntlProvider>\n        );\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return {\n        ...state.commentsReducer, ...state.loginSignUpReducer, ...state.settingsReducer\n    };\n}\n\nconst selector = formValueSelector('addCommentFormRedux');\n\nFeedbackButton = connect(\nstate => {\n    const comment = selector(state, 'comment')\n    return {\n    comment,\n    }\n}\n)(FeedbackButton)  \n\n\nexport default connect(mapStateToProps, actionCreators)(FeedbackButton);\n\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../../actions/index';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n  });\n\nclass MuiFlashMessage extends React.Component {\n\ncomponentDidUpdate(){\n    if(this.props.muiFlashMessageVisibility === 1){\n        const that = this;\n        setTimeout(function(){ that.props.setMuiFlashVisibility(0); }, that.props.muiFlashMessagesTimeout);\n    };\n}\n\nrender() {\n   let severity = \"success\";\n   if(!!this.props.muiFlashMessagesType){\n    severity = this.props.muiFlashMessagesType;\n   }\n    return (\n        <Snackbar open={this.props.muiFlashMessageVisibility} anchorOrigin={{vertical: 'top', horizontal: 'right'}}>\n            <Alert  severity={severity} sx={{ width: '100%' }} >\n                {this.props.muiFlashMessagesMessage1}\n            </Alert>\n        </Snackbar>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.settingsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(MuiFlashMessage);","import styled from 'styled-components'\n\nconst StyledSpinningOverlay = styled.div`\n  position: fixed;\n  z-index: 3000;\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.6);\n  top: 0;\n  bottom: 0;\n  left: 0;\n\n  > .spinnerWrapper{\n        margin: 0;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        -ms-transform: translateY(-50%) translateX(-50%);\n        transform: translateY(-50%) translateX(-50%);\n  }\n\n  .lds-spinner {\n    color: official;\n    display: inline-block;\n    position: relative;\n    width: 80px;\n    height: 80px;\n  }\n  .lds-spinner div {\n    transform-origin: 40px 40px;\n    animation: lds-spinner 1.2s linear infinite;\n  }\n  .lds-spinner div:after {\n    content: \" \";\n    display: block;\n    position: absolute;\n    top: 3px;\n    left: 37px;\n    width: 6px;\n    height: 18px;\n    border-radius: 20%;\n    background: #fff;\n  }\n  .lds-spinner div:nth-child(1) {\n    transform: rotate(0deg);\n    animation-delay: -1.1s;\n  }\n  .lds-spinner div:nth-child(2) {\n    transform: rotate(30deg);\n    animation-delay: -1s;\n  }\n  .lds-spinner div:nth-child(3) {\n    transform: rotate(60deg);\n    animation-delay: -0.9s;\n  }\n  .lds-spinner div:nth-child(4) {\n    transform: rotate(90deg);\n    animation-delay: -0.8s;\n  }\n  .lds-spinner div:nth-child(5) {\n    transform: rotate(120deg);\n    animation-delay: -0.7s;\n  }\n  .lds-spinner div:nth-child(6) {\n    transform: rotate(150deg);\n    animation-delay: -0.6s;\n  }\n  .lds-spinner div:nth-child(7) {\n    transform: rotate(180deg);\n    animation-delay: -0.5s;\n  }\n  .lds-spinner div:nth-child(8) {\n    transform: rotate(210deg);\n    animation-delay: -0.4s;\n  }\n  .lds-spinner div:nth-child(9) {\n    transform: rotate(240deg);\n    animation-delay: -0.3s;\n  }\n  .lds-spinner div:nth-child(10) {\n    transform: rotate(270deg);\n    animation-delay: -0.2s;\n  }\n  .lds-spinner div:nth-child(11) {\n    transform: rotate(300deg);\n    animation-delay: -0.1s;\n  }\n  .lds-spinner div:nth-child(12) {\n    transform: rotate(330deg);\n    animation-delay: 0s;\n  }\n  @keyframes lds-spinner {\n    0% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n\n\n`;\n\nexport default StyledSpinningOverlay","import React from \"react\";\nimport StyledSpinningOverlay from '../styled/StyledSpinningOverlay';\nimport {connect} from 'react-redux';\n\nclass SpinningOverlay extends React.Component {\n    render() {\n        if(!this.props.spinnerOverlayVisibility){\n            return null;\n        }\n        return <StyledSpinningOverlay>\n                <div className=\"spinnerWrapper\">\n                    <div className=\"lds-spinner\">\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                    </div>\n                </div>\n               </StyledSpinningOverlay>\n   }\n}\n\nconst mapStateToProps=(state)=>{\n    return {\n        ...state.testReducer\n    };\n}\n  \nexport default connect(mapStateToProps)(SpinningOverlay);\n","const messages = {\n    en: {\n        firstAnswer: \"First incorrect answer\",\n        secondAnswer: \"Second incorrect answer\",\n        thirdAnswer: \"Third incorrect answer\",\n        fourthAnswer: \"Fourth correct answer\",\n        question: \"Your question\",\n        sendQuestion: \"Send question\",\n        approveAndsaveQuestion: \"Approve and save question\", \n        saveQuestionAndReturnToQuestionsList: \"Save question and return\",\n        saveAndMoveToNextQuestions: \"Save question and move to the next\",\n        clearValues: \"Clear Values\",\n        declineQuestion: \"Decline question\",\n        backToContributionPage: \"Back to previous page\",\n        save: \"Save\",\n        reset: \"Reset\",\n        saveAndGoToTheNextQuestion: \"Save and load next Question >>\",\n        saveAndGoToThePrevQuestion: \"Save and load previous Question\",\n        deleteAndReturn: \"Delete this question and return\",\n        sendFeedback: \"Send feedback\",\n        deleteAndLoadNext: \"Delete this question and load next >>\",\n        seeMyContributionStatus: \"Status of my questions\",\n        limit: \"Limit\",\n    },\n    ru: {\n        firstAnswer: \"Первый неправильный ответ\",\n        secondAnswer: \"Bторой неправильный ответ\",\n        thirdAnswer: \"Tретий неправильный ответ\",\n        fourthAnswer: \"Четвертый правильный ответ\",\n        question: \"Ваш вопрос\",\n        sendQuestion: \"Отправить вопрос\",\n        approveAndsaveQuestion: \"Approve and save question\",\n        saveQuestion: \"Save question\",\n        saveQuestionAndReturnToQuestionsList: \"Save question and return\",\n        saveAndMoveToNextQuestions: \"Save question and move to the next\",\n        clearValues: \"Очистить значения\",\n        backToContributionPage: \"Вернуться на предыдущую страницу\",\n        save: \"Сохранить\",\n        reset: \"Oчистить\",\n        saveAndGoToTheNextQuestion: \"Save and load next Question >>\",\n        saveAndGoToThePrevQuestion: \"Save and load previous Question\",\n        deleteAndReturn: \"Delete this question and return\",\n        sendFeedback: \"Отправить отзыв\",\n        deleteAndLoadNext: \"Delete this question and load next >>\",\n        seeMyContributionStatus: \"Cтатус моих вопросов\",\n        limit: \"Лимит\",\n     }\n  };\n\n  export default messages;","import React, { Component } from 'react';\n\nclass SmartTextArea extends Component {\n\n    render() {\n        const { input, label, type, disabled, meta: { touched, error, warning } } = this.props;\n        let color='';\n        if(input.value.length > 1000){ color = \"red\"; } else {color = \"green\";}\n        return (\n            <>\n            <label style={{marginBottom: \"0\", fontSize: \"12px\"}}>{label}</label>\n            <div>\n                \n            <div style={{display: \"inline-block\", width: \"100%\"}}>\n              <textarea {...input} placeholder={label} type={type} rows=\"4\" disabled={disabled} style={{width: \"calc(100% - 30px)\"}}></textarea>\n              <br />\n              <span style={{fontWeight: \"bold\", color: color}}>&nbsp;&nbsp;{input.value.length}</span>\n              {touched &&\n                ((error && <span className=\"error\">{error}</span>) ||\n                  (warning && <span>{warning}</span>))}\n            </div>\n          </div>\n          </>\n        );\n        }\n}\n  export default SmartTextArea;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/forms/AddContributionForm';\nimport SmartTextArea from '../formelements/SmartTextArea';\n\n\nconst validate = values => {\n    const errors = {}\n    if (!values.question) { errors.question = 'Required'  } else if (values.question.length > 1000) { errors.question = 'Must be 1000 characters or less'}\n    if (!values.uncorrect0) {  errors.uncorrect0 = 'Required'  } else if (values.uncorrect0.length > 1000) { errors.uncorrect0 = 'Must be 1000 characters or less'}\n    if (!values.uncorrect1) {  errors.uncorrect1 = 'Required'  } else if (values.uncorrect1.length > 1000) { errors.uncorrect1 = 'Must be 1000 characters or less'}\n    if (!values.uncorrect2) { errors.uncorrect2 = 'Required' } else if (values.uncorrect2.length > 1000) { errors.uncorrect2 = 'Must be 1000 characters or less'}\n    if (!values.answerCorrect) { errors.answerCorrect = 'Required'  } else if (values.answerCorrect.length > 1000) { errors.answerCorrect = 'Must be 1000 characters or less'}\n    return errors\n  }\n\nlet AdminEditQuestionForm = props => {\n  const { handleSubmit, submitting, language,  backNavigation,  pristine,  valid, nextIsAvailable, loadnextQuestion, loadPrevQuestion, prevIsAvailable, showModal, prevPath, backNavigationsearch, saveSearchQuestion} = props;\n  const translations = {\n    firstAnswer:  language === 'en' ? messages.en.firstAnswer : messages.ru.firstAnswer,\n    secondAnswer:  language === 'en' ? messages.en.secondAnswer : messages.ru.secondAnswer,\n    thirdAnswer:  language === 'en' ? messages.en.thirdAnswer : messages.ru.thirdAnswer,\n    fourthAnswer:  language === 'en' ? messages.en.fourthAnswer : messages.ru.fourthAnswer,\n    question: language === 'en' ? messages.en.question : messages.ru.question,\n    clearValues: language === 'en' ? messages.en.clearValues : messages.ru.clearValues,\n  }\n  return (\n    \n    <IntlProvider locale={language} messages={messages[language]}>\n      <form onSubmit={handleSubmit}>\n          <br/> <br />\n        <div>\n          <table style={{width: \"100%\"}} className=\"contributionForm\">\n              <tbody>\n                <tr><td><Field  name=\"question\"   component={SmartTextArea} label={translations.question}/></td></tr>\n                <tr><td><br/><br/></td></tr>\n                <tr><td><Field  name=\"uncorrect0\"   component={SmartTextArea} label={translations.firstAnswer} /></td></tr>\n                <tr><td><Field  name=\"uncorrect1\"   component={SmartTextArea} label={translations.secondAnswer} /></td></tr>\n                <tr><td><Field  name=\"uncorrect2\"   component={SmartTextArea} label={translations.thirdAnswer} /></td></tr>\n                <tr><td><Field  name=\"answerCorrect\"   component={SmartTextArea} label={translations.fourthAnswer} /></td></tr>\n              </tbody>\n          </table>\n        </div>\n        <br/><br/>\n        <div style={prevPath.prevPath === '/app/adminsearchquestion' ? {display: 'none'} : {}}>\n          <>\n          <button type=\"button\" className=\"btn btn-primary\" disabled={submitting} onClick={backNavigation}><FormattedMessage id=\"backToContributionPage\" /></button>&nbsp;&nbsp;&nbsp;\n          <button type=\"button\" className=\"btn btn-primary\" disabled={!valid || !prevIsAvailable} onClick={loadPrevQuestion}><FormattedMessage id=\"saveAndGoToThePrevQuestion\" /></button>&nbsp;&nbsp;&nbsp;\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={!valid || pristine}><FormattedMessage id=\"saveQuestionAndReturnToQuestionsList\" /></button>&nbsp;&nbsp;&nbsp;\n          <button type=\"button\" className=\"btn btn-primary\" disabled={!valid || !nextIsAvailable} onClick={loadnextQuestion}><FormattedMessage id=\"saveAndGoToTheNextQuestion\" /></button>&nbsp;&nbsp;&nbsp;\n          <button type=\"button\" className=\"btn btn-danger\" onClick={showModal}><FormattedMessage id=\"deleteAndReturn\" /></button>\n          </>\n        </div>\n        <div style={prevPath.prevPath === '/app/adminsearchquestion' ? {} : {display: 'none'}}>\n          <>\n          <button type=\"button\" className=\"btn btn-primary\" disabled={submitting} onClick={backNavigationsearch}><FormattedMessage id=\"backToContributionPage\" /></button>&nbsp;&nbsp;&nbsp;\n          <button type=\"button\" className=\"btn btn-primary\" disabled={!valid || pristine} onClick={saveSearchQuestion}><FormattedMessage id=\"save\" /></button>&nbsp;&nbsp;&nbsp;\n          </>\n        </div>\n      </form>\n    </IntlProvider>\n  );\n};\n\nAdminEditQuestionForm = reduxForm({\n  form: 'editContibutionFormAdminRedux', \n  enableReinitialize: true,\n  validate,\n})(AdminEditQuestionForm);\n\nexport default AdminEditQuestionForm;","import React from 'react';\nimport '../App.css';\nimport MaterialUiNavigation from './MaterialUiNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Questions';\nimport AdminEditQuestionForm from \"./forms/AdminEditQuestionForm\";\nimport Modal from './formelements/Modal';\nimport { formValueSelector } from 'redux-form';\n\n\nclass AdminEditQuestion extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    this.state = {\n      currentSubjectId: '',\n      currentSubjectName: '',\n      isThisTheLastQuestionForGivenSubject: false,\n      isThisTheFirstQuestionForGivenSubject: false,\n      nextQuestionId: '',\n      prevQuestionId: '',\n      currentQuestionId: '',\n    }\n    this.modall = React.createRef();\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  componentDidUpdate(){\n    if(this.props.redirectAfterSuccesfullQuestionsSaving === 2){// this means need to redirect to questions list\n      this.props.history.push('/app/admineditquestion');\n    } else if(this.props.redirectAfterSuccesfullQuestionsSaving === 3){// this means need to redirect to question search form\n      this.props.history.push('/app/adminsearchquestion');\n    };\n  }\n\n  componentDidMount(){\n    ///////////////////////////////////////////////// for next question functionality\n    this.props.loadQuestionsAndAnswersToEditAdmin(this.props.match.params.id);\n    this.setState({\n      currentQuestionId: this.props.match.params.id,\n    })\n    let questionsFiltered = this.props.questions.filter (question => question.id > this.props.match.params.id);//to determine if this is the last question for this subject ordered by id\n    if(questionsFiltered.length > 0){\n      this.setState({\n        isThisTheLastQuestionForGivenSubject: true,\n        nextQuestionId: questionsFiltered[0].id,\n      })\n    }\n    ///////////////////////////////////////////////// for prev question functionality\n    let questionsFilteredPrev = this.props.questions.filter(question => question.id < this.props.match.params.id).sort(function (a, b){\n      if(a.id > b.id) return -1;\n      if(a.id < b.id) return 1;\n      return 0;\n    });//to determine if this is the first question for this subject ordered by id\n    if(questionsFilteredPrev.length > 0){\n      this.setState({\n        isThisTheFirstQuestionForGivenSubject: true,\n        prevQuestionId: questionsFilteredPrev[0].id,\n      })\n    }\n  }\n\n  loadNextQuestion(){\n    let editedValues = {\n      question: this.props.questionFromForm,\n      subjectId: this.props.adminEditQuestionItem.subjectId,\n      questionId: this.props.adminEditQuestionItem.questionId,\n      answerCorrect: this.props.fourthAnswerFromForm,\n      correctId: this.props.adminEditQuestionItem.correctId,\n      uncorrect0: this.props.firstAnswerFromForm,\n      uncorrect1: this.props.secondAnswerFromForm,\n      uncorrect2: this.props.thirdAnswerFromForm,\n      uncorrectId0: this.props.adminEditQuestionItem.uncorrectId0,\n      uncorrectId1: this.props.adminEditQuestionItem.uncorrectId1,\n      uncorrectId2: this.props.adminEditQuestionItem.uncorrectId2,\n      ifNeedToRedirect: false\n    }\n    this.props.editQuestionsSaga({editedValues})\n    this.props.loadQuestionsAndAnswersToEditAdmin(this.state.nextQuestionId);\n    let questionsFiltered = this.props.questions.filter (question => question.id > this.state.nextQuestionId);//to determine if this is the last question for this subject ordered by id\n    if(questionsFiltered.length > 0){\n      this.setState({\n        isThisTheLastQuestionForGivenSubject: true,\n        currentQuestionId: this.state.nextQuestionId,\n        nextQuestionId: questionsFiltered[0].id,\n      })\n    } else {\n      this.setState({\n        currentQuestionId: this.state.nextQuestionId,\n        isThisTheLastQuestionForGivenSubject: false,\n      })\n    }\n///////////////////\n    let questionsFilteredPrev = this.props.questions.filter(question => question.id < this.state.nextQuestionId).sort(function (a, b){\n      if(a.id > b.id) return -1;\n      if(a.id < b.id) return 1;\n      return 0;\n    });//to determine if this is the first question for this subject ordered by id\n    \n  if(questionsFilteredPrev.length > 0){\n        this.setState({\n          isThisTheFirstQuestionForGivenSubject: true,\n          prevQuestionId: questionsFilteredPrev[0].id,\n        })\n      } \n  }\n\n  loadPrevQuestion(){\n    let editedValues = {\n      question: this.props.questionFromForm,\n      subjectId: this.props.adminEditQuestionItem.subjectId,\n      questionId: this.props.adminEditQuestionItem.questionId,\n      answerCorrect: this.props.fourthAnswerFromForm,\n      correctId: this.props.adminEditQuestionItem.correctId,\n      uncorrect0: this.props.firstAnswerFromForm,\n      uncorrect1: this.props.secondAnswerFromForm,\n      uncorrect2: this.props.thirdAnswerFromForm,\n      uncorrectId0: this.props.adminEditQuestionItem.uncorrectId0,\n      uncorrectId1: this.props.adminEditQuestionItem.uncorrectId1,\n      uncorrectId2: this.props.adminEditQuestionItem.uncorrectId2,\n      ifNeedToRedirect: false\n    }\n    this.props.editQuestionsSaga({editedValues})\n    this.props.loadQuestionsAndAnswersToEditAdmin(this.state.prevQuestionId);\n    let questionsFilteredPrev = this.props.questions.filter(question => question.id < this.state.prevQuestionId).sort(function (a, b){\n      if(a.id > b.id) return -1;\n      if(a.id < b.id) return 1;\n      return 0;\n    });//to determine if this is the first question for this subject ordered by id\n    if(questionsFilteredPrev.length > 0){\n      this.setState({\n        isThisTheFirstQuestionForGivenSubject: true,\n        currentQuestionId: this.state.prevQuestionId,\n        prevQuestionId: questionsFilteredPrev[0].id,\n      })\n    } else {\n      this.setState({\n        currentQuestionId: this.state.prevQuestionId,\n        isThisTheFirstQuestionForGivenSubject: false,\n      })\n    }\n    /////\n    let questionsFilteredNext = this.props.questions.filter (question => question.id > this.state.prevQuestionId);//to determine if this is the last question for this subject ordered by id\n    if(questionsFilteredNext.length > 0){\n      this.setState({\n        nextQuestionId: questionsFilteredNext[0].id,\n        isThisTheLastQuestionForGivenSubject: true,\n      })\n    }   \n  }\n\n  saveSearchQuestion(){\n    let editedValues = {\n      question: this.props.questionFromForm,\n      subjectId: this.props.adminEditQuestionItem.subjectId,\n      questionId: this.props.adminEditQuestionItem.questionId,\n      answerCorrect: this.props.fourthAnswerFromForm,\n      correctId: this.props.adminEditQuestionItem.correctId,\n      uncorrect0: this.props.firstAnswerFromForm,\n      uncorrect1: this.props.secondAnswerFromForm,\n      uncorrect2: this.props.thirdAnswerFromForm,\n      uncorrectId0: this.props.adminEditQuestionItem.uncorrectId0,\n      uncorrectId1: this.props.adminEditQuestionItem.uncorrectId1,\n      uncorrectId2: this.props.adminEditQuestionItem.uncorrectId2,\n      ifNeedToRedirectToSearch: true\n    }\n    this.props.editSearchQuestionsSaga({editedValues})\n  }\n\n  showModal(){\n    console.log(\"show modal\");\n    this.modall.current.showModal();\n  }\n  \n  deleteQuestion(){\n    this.props.deleteQuestion(true);\n  }\n\n  backNavigation(){\n    this.props.history.push('/app/admineditquestion');\n  }\n\n  backNavigationsearch(){\n    this.props.history.push('/app/adminsearchquestion');\n  }\n\n  render() {\n    let prevPath;\n    !this.props.location.state  ? prevPath={prevPath: ''} : prevPath = this.props.location.state;\n\n    let initialValues={// this way of assignment looks weird, but otherwise, if simpler, it gives error\n      question: this.props.adminEditQuestionItem.question,\n      subjectId: this.props.adminEditQuestionItem.subjectId,\n      questionId: this.props.adminEditQuestionItem.questionId,\n      answerCorrect: this.props.adminEditQuestionItem.answerCorrect,\n      correctId: this.props.adminEditQuestionItem.correctId,\n      uncorrect0: this.props.adminEditQuestionItem.uncorrect0,\n      uncorrect1: this.props.adminEditQuestionItem.uncorrect1,\n      uncorrect2: this.props.adminEditQuestionItem.uncorrect2,\n      uncorrectId0: this.props.adminEditQuestionItem.uncorrectId0,\n      uncorrectId1: this.props.adminEditQuestionItem.uncorrectId1,\n      uncorrectId2: this.props.adminEditQuestionItem.uncorrectId2\n    }\n\n    let editedValues = {\n      question: this.props.questionFromForm,\n      subjectId: this.props.adminEditQuestionItem.subjectId,\n      questionId: this.props.adminEditQuestionItem.questionId,\n      answerCorrect: this.props.fourthAnswerFromForm,\n      correctId: this.props.adminEditQuestionItem.correctId,\n      uncorrect0: this.props.firstAnswerFromForm,\n      uncorrect1: this.props.secondAnswerFromForm,\n      uncorrect2: this.props.thirdAnswerFromForm,\n      uncorrectId0: this.props.adminEditQuestionItem.uncorrectId0,\n      uncorrectId1: this.props.adminEditQuestionItem.uncorrectId1,\n      uncorrectId2: this.props.adminEditQuestionItem.uncorrectId2,\n      ifNeedToRedirect: true\n    }\n\n    return (\n      \n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n      <div>\n          <Modal ref={this.modall}  message={'Please confirm question deletion'} toExecute = {this.deleteQuestion.bind(this)}/>\n          <MaterialUiNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          <div className=\"container\">\n            <h2><FormattedMessage id=\"editQuestion\" /> # {this.state.currentQuestionId} </h2>\n            <h4><FormattedMessage id=\"subject\" />:&nbsp;{this.props.currentSubjectName}</h4>\n              <AdminEditQuestionForm  \n              onSubmit={()=>{this.props.editQuestionsSaga({editedValues})}} \n              language={this.props.language} \n              declineFunction={this.props.declineContributionAdmin} \n              initialValues={initialValues} \n              backNavigation={this.backNavigation.bind(this)} \n              nextIsAvailable={this.state.isThisTheLastQuestionForGivenSubject} \n              prevIsAvailable={this.state.isThisTheFirstQuestionForGivenSubject}\n              loadnextQuestion={this.loadNextQuestion.bind(this)} \n              loadPrevQuestion={this.loadPrevQuestion.bind(this)}\n              showModal={this.showModal.bind(this)}\n              prevPath={prevPath}\n              backNavigationsearch={this.backNavigationsearch.bind(this)}\n              saveSearchQuestion={this.saveSearchQuestion.bind(this)}\n            />\n          </div>\n      </div> \n     </IntlProvider>  \n    )\n  }\n}\n\nconst selector = formValueSelector('editContibutionFormAdminRedux');\n\nAdminEditQuestion = connect(\n  state => {\n    const questionFromForm = selector(state, 'question');\n    const firstAnswerFromForm = selector(state, 'uncorrect0');\n    const secondAnswerFromForm = selector(state, 'uncorrect1');\n    const thirdAnswerFromForm = selector(state, 'uncorrect2');\n    const fourthAnswerFromForm = selector(state, 'answerCorrect');\n    return {\n      questionFromForm, firstAnswerFromForm, secondAnswerFromForm, thirdAnswerFromForm, fourthAnswerFromForm\n    }\n  }\n)(AdminEditQuestion) \n\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.usersReducer, ...state.loginSignUpReducer, ...state.settingsReducer,  ...state.questionsReducer, ...state.subjectsReducer,  ...state.resultsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(AdminEditQuestion);","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/forms/AddContributionForm';\nimport SmartTextArea from '../formelements/SmartTextArea';\n\nconst validate = values => {\n    const errors = {}\n    if (!values.question) { errors.question = 'Required'  } else if (values.question.length > 1000) { errors.question = 'Must be 1000 characters or less'}\n    if (!values.uncorrect0) {  errors.uncorrect0 = 'Required'  } else if (values.uncorrect0.length > 1000) { errors.uncorrect0 = 'Must be 1000 characters or less'}\n    if (!values.uncorrect1) {  errors.uncorrect1 = 'Required'  } else if (values.uncorrect1.length > 1000) { errors.uncorrect1 = 'Must be 1000 characters or less'}\n    if (!values.uncorrect2) { errors.uncorrect2 = 'Required' } else if (values.uncorrect2.length > 1000) { errors.uncorrect2 = 'Must be 1000 characters or less'}\n    if (!values.answerCorrect) { errors.answerCorrect = 'Required'  } else if (values.answerCorrect.length > 1000) { errors.answerCorrect = 'Must be 1000 characters or less'}\n    return errors\n  }\n\nlet AdminEditContributionForm = props => {\n  const { handleSubmit, submitting, language, declineFunction, backNavigation, showAllButtons, pristine, reset, valid} = props;\n  const translations = {\n    firstAnswer:  language === 'en' ? messages.en.firstAnswer : messages.ru.firstAnswer,\n    secondAnswer:  language === 'en' ? messages.en.secondAnswer : messages.ru.secondAnswer,\n    thirdAnswer:  language === 'en' ? messages.en.thirdAnswer : messages.ru.thirdAnswer,\n    fourthAnswer:  language === 'en' ? messages.en.fourthAnswer : messages.ru.fourthAnswer,\n    question: language === 'en' ? messages.en.question : messages.ru.question,\n    clearValues: language === 'en' ? messages.en.clearValues : messages.ru.clearValues,\n  }\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <form onSubmit={handleSubmit}>\n          <br/> <br />\n        <div>\n          <table style={{width: \"100%\"}} className=\"contributionForm\">\n              <tbody>\n                <tr><td><Field  name=\"question\"   component={SmartTextArea} label={translations.question}/></td></tr>\n                <tr><td><br/><br/></td></tr>\n                <tr><td><Field  name=\"uncorrect0\"   component={SmartTextArea} label={translations.firstAnswer} /></td></tr>\n                <tr><td><Field  name=\"uncorrect1\"   component={SmartTextArea} label={translations.secondAnswer} /></td></tr>\n                <tr><td><Field  name=\"uncorrect2\"   component={SmartTextArea} label={translations.thirdAnswer} /></td></tr>\n                <tr><td><Field  name=\"answerCorrect\"   component={SmartTextArea} label={translations.fourthAnswer} /></td></tr>\n              </tbody>\n          </table>\n        </div>\n        <br/><br/>\n        <div>\n          <>\n          <button type=\"button\" className=\"btn btn-primary\" disabled={submitting} onClick={backNavigation} style={showAllButtons ? {} : {display: 'none'}}>\n              <FormattedMessage id=\"backToContributionPage\" />\n          </button>&nbsp;&nbsp;&nbsp;\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={!valid} style={showAllButtons ? {} : {display: 'none'}}><FormattedMessage id=\"approveAndsaveQuestion\" />\n            </button>&nbsp;&nbsp;&nbsp;\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={submitting || pristine || !valid} style={showAllButtons ? {display: 'none'} : {}}><FormattedMessage id=\"save\" />\n            </button>&nbsp;&nbsp;&nbsp;\n          <button type=\"submit\" className=\"btn btn-danger\"  onClick={reset} disabled={ pristine } style={showAllButtons ? {display: 'none'} : {}}><FormattedMessage id=\"reset\" />\n            </button>&nbsp;&nbsp;&nbsp;\n\n          <button type=\"button\" className=\"btn btn-danger\" onClick={declineFunction} disabled={submitting} style={showAllButtons ? {} : {display: 'none'}}>\n            <FormattedMessage id=\"declineQuestion\" />\n          </button>&nbsp;&nbsp;&nbsp;\n          </>\n        </div>\n      </form>\n    </IntlProvider>\n  );\n};\n\nAdminEditContributionForm = reduxForm({\n  form: 'editContibutionFormAdminRedux', \n  enableReinitialize: true,\n  validate,\n})(AdminEditContributionForm);\n\nexport default AdminEditContributionForm;","import React from 'react';\nimport '../App.css';\nimport MaterialUiNavigation from './MaterialUiNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Questions';\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport AdminEditContributionForm from \"./forms/AdminEditContributionForm\";\n\nclass AdminAddQuestions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    this.state = {\n        currentSubjectId: '',\n        currentSubjectName: '',\n      }\n  }\n\n  componentDidMount(){\n    this.props.loadSubjectsAdmin();\n    this.props.setCurrentSubjectIdToAddQuestion(\"\");\n  }\n\n  componentWillUnmount(){\n    this.props.resetQuestionsSet();\n    this.props.setCurrentSubjectIdToAddQuestion(\"\");\n  }\n\n  onDropdownChange = (event) => {\n    const subjName = this.props.subjectsAdmin.filter(value => value.id == event.target.value);\n    if(event.target.value !== 0){\n        this.setState({\n            currentSubjectId: event.target.value,\n            currentSubjectName: subjName[0].name\n          })\n    } else {\n        this.setState({\n            currentSubjectId: event.target.value,\n            currentSubjectName: ''\n          })\n    }\n    this.props.setCurrentSubjectIdToAddQuestion(event.target.value);\n  };\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n      <div>\n        <MaterialUiNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          <div className=\"container\">\n            <h2><FormattedMessage id=\"addQuestion\" /></h2>\n            <p style={this.state.currentSubjectName === ''  ? {} : {display: 'none'}}><FormattedMessage id=\"firstt\" /></p>\n            <p style={this.state.currentSubjectName === ''  ? {display: 'none'} : {}}><FormattedMessage id=\"currentSubject\" />&nbsp;{this.state.currentSubjectName}</p>\n            <select className=\"form-control\" onChange={this.onDropdownChange}>\n            <FormattedMessage id=\"select\">{(formattedValue)=>(<option key=\"0\" value=\"0\">{formattedValue}</option>)}</FormattedMessage>{/* ugly way to get just translated string, but this works */}\n                {\n                this.props.subjectsAdmin.map((value) => \n                (<option key={value.id} value={value.id}>{value.name}</option>))\n                }\n            </select>\n            <br/>\n            <div style={this.state.currentSubjectName === ''  ? {display: 'none'} : {}}>\n            <AdminEditContributionForm  onSubmit={()=>{this.props.addNewQuestionAdmin()}} language={this.props.language}  showAllButtons={false} />\n            </div>\n          </div>\n      </div> \n     </IntlProvider>  \n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.usersReducer, ...state.loginSignUpReducer, ...state.settingsReducer, ...state.questionsReducer, ...state.subjectsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(AdminAddQuestions);","const messages = {\n    en: {\n      contibution: \"Contribution\",\n      editContibution: \"Edit Contribution\",\n      myConrtibutionDetails: \"Question details (question and answers aren't editable)\",\n      approved: \"approved\",\n      declined: \"declined\",\n      pending: \"pending\",\n      status: \"Status\",\n      creationDate: \"Created at\",\n      subject: \"Subject\",\n      userName: \"User name\"\n    },\n    ru: {\n      contibution: \"Bопросы, добавленные пользователями\",\n      editContibution: \"Изменить добавленные вопросы\",\n      myConrtibutionDetails: \"Подробности моего добавленного вопроса (не редактируется)\",\n      approved: \"одобренный\",\n      declined: \"отклоненный\",\n      pending: \"в ожидании\",\n      status: \"Cтатус\",\n      creationDate: \"Создан\",\n      subject: \"Предмет\",\n      userName: \"Имя пользователя\",\n    }\n  };\n\n  export default messages;","import React from 'react';\nimport { IntlProvider } from \"react-intl\";\nimport messages from '../../translations/EditSubjRow';\nimport { Link } from 'react-router-dom';\n\nexport default class EditContributionRow extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.contribution.resultId,\n            status: this.props.contribution.status,\n        }\n    }\n\n    render(props) {\n        const { userName, subjectName, createdAt, status } = this.props.contribution;\n        const { language } = this.props;\n        let statusWord = status === 0 ? 'pending' : status === '1' ? 'approved' : 'declined';\n        let url = '/app/admincontribution/' + this.state.id;\n      return  (\n        <>\n            <IntlProvider locale={language} messages={messages[language]}>\n                <tr>\n                    <td > { userName } </td>\n                    <td > { subjectName } </td>\n                    <td > { createdAt } </td>\n                    <td style={status === '0' ? {backgroundColor: '#efe756'} : status === '1' ? {backgroundColor: '#9dd49b', color: 'white !important'} : {backgroundColor: '#efc9c9', color: 'white !important'}} > \n                       {status === '0' && (<Link to={url}>{ statusWord }</Link>)}\n                            { (status === '1' || status === '2') && statusWord }\n                    </td>\n                </tr>\n            </IntlProvider>\n        </>\n    );\n    }\n  }","const messages = {\n    en: {\n      subject: \"Subject\",\n      active: \"Active\",\n      questionNumber: \"Questions number\",\n      edit: \"Edit\",\n      delete: \"Delete\",\n      createdAt: \"Created At\",\n      status: \"Status\",\n      userName: \"User Name\",\n      pending:\"Pending\",\n      declined:\"Declined\",\n      approved: \"Approved\",\n      noAddedQuestions: \"No added questions\",\n    },\n    ru: {\n        subject: \"Предмет\",\n        active: \"Активный\",\n        questionNumber: \"Количество вопросов\",\n        edit: \"Править\",\n        delete: \"Удалить\",\n        createdAt: \"Дата создания\",\n        status: \"Cтатус\",\n        userName: \"Имя пользователя\",\n        pending:\"В ожидании\",\n        declined:\"Отклоненный\",\n        approved: \"Одобренный\",\n        noAddedQuestions: \"Нет добавленных вопросов\",\n    }\n  };\n\n  export default messages;","import React from 'react';\nimport EditContributionRow from './EditContributionRow';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/EditContributionForm';\n\nconst EditContributionForm = props => {\n  const { contributions, language } = props;\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <table className=\"table\">\n          <thead>\n            <tr>\n              <th><FormattedMessage id=\"userName\" /></th>\n              <th><FormattedMessage id=\"subject\" /></th>\n              <th><FormattedMessage id=\"createdAt\" /></th>\n              <th><FormattedMessage id=\"status\" /></th>\n            </tr>\n          </thead>\n          <tbody>\n            {Array.from(contributions).map(contribution => <EditContributionRow contribution={contribution}  language={language} key={contribution.resultId}/> )}\n          </tbody>\n      </table>\n    </IntlProvider>\n  );\n};\n\nexport default EditContributionForm;","import React from 'react'\nimport MaterialUiNavigation from './MaterialUiNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/AdminContribution';\nimport EditContributionForm from \"./forms/EditContributionForm\";\n\n\nclass AdminContribution extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  componentDidMount(){\n      this.props.loadContributionAdmin();\n      this.props.clearAdminContributionItem();\n      this.props.setRedirectFlagForAdmin(1);// this is reset for this flag to be able to redirect from edit form to this page after succes. editing, when success flag turns 1nto 2\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n          <MaterialUiNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          <div className=\"container\">\n            <h2><FormattedMessage id=\"contibution\" /></h2>\n            <EditContributionForm  contributions={ this.props.adminContribution } language={this.props.language} />\n          </div>\n      </div>\n     </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.loginSignUpReducer, ...state.settingsReducer, ...state.contributionsReducer, ...state.usersReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(AdminContribution);","import styled from 'styled-components'\n\nconst StyledEditQuestionrRow = styled.tr`\n  :hover{\n    background-color: red;\n  }\n  .questionCell {\n    position: relative;\n    cursor: pointer;\n  }\n\n  .questionCell:hover {\n    background-color: #d5fdff;\n  }\n\n  .pointer{\n    cursor: pointer;    \n  }\n  .questionCell > .popupAnswersHint {\n    position: absolute;\n    bottom: 100%;\n    left: 13px;\n    display: none;\n    background-color: #5d8ed9;\n    padding: 10px;\n    z-index: 3000;\n    max-width: 400px;\n  }\n\n  .questionCell > .popupAnswersHint > div {\n    background-color: #ddd;\n    padding: 10px;\n    margin: 10px;\n  }\n\n  .questionCell:hover > .popupAnswersHint {\n    display: block;\n  }\n\n  .questionCell:hover > .popupAnswersHint > .correctAnswer{\n    background-color: #cee7c9;  \n  }\n\n  .questionCell:hover > .popupAnswersHint > .uncorrectAnswer{\n    background-color: #ffb9b9;  \n  }\n`;\n\nexport default StyledEditQuestionrRow","import React from 'react';\nimport { IntlProvider } from \"react-intl\";\nimport messages from '../../translations/EditSubjRow';\nimport StyledEditQuestionrRow from '../../styled/StyledEditQuestionrRow';\nimport { Link } from 'react-router-dom';\n\n\n\n\nexport default class EditQuestionrRow extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.questions.id,\n        }\n        this.modall = React.createRef();\n        this.promptt = React.createRef();\n    }\n   \n    openModal(){\n        this.modall.current.showModal();\n    }\n\n    openPromptt(){\n\n    }\n\n    toggleQuestActivity(){\n        this.props.toggleQuestionActivity(this.state.id);\n    }\n\n    onRollover(){\n        this.props.onTdRollover(this.state.id);\n    }\n\n    render() {\n        let { id, name, active, created_at } = this.props.questions;\n        let { editedQuestionsArray } = this.props;\n        let edited = editedQuestionsArray.includes(this.state.id);\n        created_at = created_at.substring(0, 10);\n        let statusWord = active === 1 ? 'active' : 'unactive';\n        let url = '/app/admineditquestions/' + this.state.id;\n        const { language, answersToShow } = this.props;\n        return  (\n            <>\n                <StyledEditQuestionrRow style={edited ? {backgroundColor: '#ecffea'} : active === 1 ? {backgroundColor: '#fff'} : {backgroundColor: '#f1f1f1'}}>\n                    {/* style={active === 1 ? {backgroundColor: '#fff'} : {backgroundColor: '#f1f1f1'}} */}\n                    <IntlProvider locale={language} messages={messages[language]}>\n                            <td width=\"10%\">{id}</td>\n                            <td width=\"55%\" className=\"questionCell\" onMouseOver={this.onRollover.bind(this)}>\n                                {name}\n                                <div className=\"popupAnswersHint\">\n                                    {answersToShow.map(answer => <div className={answer.correct === 1 ? 'correctAnswer' : 'uncorrectAnswer'} key={answer.id}>{answer.name}</div> )}\n                                </div>\n                            </td>\n                            <td width=\"15%\">{created_at}</td>\n                            <td className=\"pointer\" width=\"10%\" onClick={this.toggleQuestActivity.bind(this)}>{statusWord}</td>\n                            <td width=\"10%\"><Link to={url}>edit</Link></td>\n                    </IntlProvider>\n                </StyledEditQuestionrRow>\n            </>\n        );\n    }\n  }","import React from 'react';\nimport EditQuestionrRow from './EditQuestionrRow';\nimport { IntlProvider } from \"react-intl\";\nimport messages from '../../translations/EditSubjectForm';\n\n\n\nexport default class EditQuestionTable extends React.Component {\n    render() {\n        const { questions, language, toggleQuestionActivity, onTdRollover, answersToShow, editedQuestionsArray } = this.props;\n        return  (\n            <IntlProvider locale={language} messages={messages[language]}>\n            <table className=\"table\">\n                <thead>\n                  <tr>\n                    <th>Id</th>{/* <FormattedMessage id=\"name\" /> */}\n                    <th>Question</th>{/* <FormattedMessage id=\"email\" /> */}\n                    <th>Created At</th>{/*? <FormattedMessage id=\"createdAt\" /> */}\n                    <th>Status</th>{/* <FormattedMessage id=\"status\" /> */}\n                    <th>Edit</th>{/* <FormattedMessage id=\"status\" /> */}\n                  </tr>\n                </thead>\n                <tbody>\n                    {questions.map(questions => <EditQuestionrRow \n                      questions={questions} \n                      key={questions.id}\n                      language={language}\n                      toggleQuestionActivity={toggleQuestionActivity}\n                      onTdRollover={onTdRollover}\n                      answersToShow={answersToShow}\n                      editedQuestionsArray={editedQuestionsArray}\n                    /> )}\n                </tbody>\n            </table>\n          </IntlProvider>\n        );\n    }\n  }\n\n","import React, { Component } from 'react';\nimport StyledPagination from '../../styled/StyledPagination'\n\n\nclass PaginationSimple extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          numberOfPaginations: '',\n        }\n      }\n\n  render() {\n    const { totalNumberOfItems, itemsPerPage, paginationClick, currentPagination } = this.props;\n    let numberOfPaginations = Math.ceil(totalNumberOfItems/itemsPerPage);\n\n    return (\n        <StyledPagination>\n            <ul className=\"pagination pagination-sm flex-wrap\">\n              {Array(numberOfPaginations).fill().map((_, i) =>( \n              <li className={(currentPagination === (i + 1) ? \"page-item active\" : \"page-item\")} key={i} onClick={() => paginationClick(i + 1)}>\n                <a key={i} className=\"page-link\" href=\"#\">{i + 1}</a> \n              </li>))}\n            </ul>\n        </StyledPagination>\n    );\n  }\n}\n\nexport default PaginationSimple;","import React from 'react';\nimport '../App.css';\nimport MaterialUiNavigation from './MaterialUiNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Questions';\nimport EditQuestionTable from \"./forms/EditQuestionTable\";\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from 'react-accessible-accordion';\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport StyledAccordeon from '../styled/StyledAccordeon';\nimport Select from './formelements/Select';\nimport PaginationSimple from './formelements/PaginationSimple';\nimport helpers from '../helpers/Helpers';\n\n\n\nclass AdmineditQuestions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    this.state = {\n      resultsPerPage: [\n        {id: 5, value: \"5\"},\n        {id: 10, value: \"10\"},\n        {id: 20, value: \"20\"},\n        {id: 50, value: \"50\"},\n      ],\n      activityDropdown: [\n        {id: 1, value: \"All\"},\n        {id: 2, value: \"Active\"},\n        {id: 3, value: \"Unactive\"},\n      ],\n    }\n  }\n\n  onDropdownChangeItemsPerPage = (event) => {\n    this.props.setCurrentPagination(1);\n    let resultsPaginated = helpers.SimplePaginatedResults(this.props.questions, event.target.value, 1);\n    this.props.setResultsPaginated(resultsPaginated);\n    this.props.setItemsPerPage(event.target.value);\n  };\n\n  onDropdownChangeStatus = (event) => {\n    this.props.setCurrentPagination(1);\n    this.props.setStatus(event.target.value);\n    this.props.loadQuestions();\n  };\n\n  componentDidMount(){\n    //this.props.resetQuestionsSet();\n    //this.props.setCurrentSubjectIdToAddQuestion(\"\");\n    this.props.loadSubjectsAdmin();\n    this.props.setRedirectFlagToBackToQuestionsList(1);\n  }\n\n  componentWillUnmount(){}\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  onDropdownChange = (event) => {// subjects dropdown\n    let subjNameObj = this.props.subjectsAdmin.filter(value => value.id === event.target.value);\n    let subjName;\n    if(typeof subjNameObj[0] !== \"undefined\"){\n      subjName = subjNameObj[0].name;\n    } else {\n      subjName = '';\n    }\n    \n\n    this.props.setSubjName(subjName)\n    this.props.setCurrentPagination(1);\n    if(event.target.value !== 0){\n        this.setState({\n            currentSubjectId: event.target.value,\n          })\n    } else {\n        this.setState({\n            currentSubjectId: event.target.value,\n         })\n    }\n    this.props.setCurrentSubjectIdToAddQuestion(event.target.value);\n    this.props.loadQuestions();\n  }\n\n  paginationClick = (i) => {\n    this.props.setCurrentPagination(i);\n    let resultsPaginated = helpers.SimplePaginatedResults(this.props.questions, this.props.resultsFilterPerPage, i);\n    this.props.setResultsPaginated(resultsPaginated);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n      <div>\n          <MaterialUiNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          <div className=\"container\">\n            <h2><FormattedMessage id=\"editQuestion\" /></h2>\n            <p style={this.props.numberOfQuestionsBySubject !== 0 ? {display: 'none'} : {}}><FormattedMessage id=\"firstt\" /></p>\n            <p style={this.props.numberOfQuestionsBySubject !== 0 ? {} : {display: 'none'}}><FormattedMessage id=\"currentSubject\" />&nbsp;{this.props.currentSubjectName}</p>\n            <select className=\"form-control\" onChange={this.onDropdownChange} value={this.props.currentSubjectId}>\n            <FormattedMessage id=\"select\">{(formattedValue)=>(<option key=\"0\" value=\"0\">{formattedValue}</option>)}</FormattedMessage>{/* ugly way to get just translated string, but this works */}\n                {\n                this.props.subjectsAdmin.map((value) => \n                (<option key={value.id} value={value.id}>{value.name}</option>))\n                }\n            </select>\n            <br />\n            <div style={this.props.numberOfQuestionsBySubject === 0  ? {display: 'none'} : {}}>\n              <StyledAccordeon>\n                  <Accordion allowMultipleExpanded=\"true\" allowZeroExpanded=\"true\">\n                    <AccordionItem>\n                        <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <FormattedMessage id=\"filterResults\" />\n                            </AccordionItemButton>\n                        </AccordionItemHeading>\n                        <AccordionItemPanel>\n                          <table className=\"resultsFilter\">\n                            <tbody>\n                              <tr>\n                                <th><FormattedMessage id=\"itemsPerPage\" />:</th>\n                                <th><FormattedMessage id=\"status\" />:</th>\n                                <th><FormattedMessage id=\"cleareditedList\" /></th>\n                                <th>Refresh questions</th>\n                              </tr>\n                              <tr>\n                                <td><Select options={this.state.resultsPerPage} onChange={this.onDropdownChangeItemsPerPage} defaultt={this.props.resultsFilterPerPage}/></td>\n                                <td><Select options={this.state.activityDropdown} defaultt={this.props.currentStatus} onChange={this.onDropdownChangeStatus} /></td>\n                                <td>\n                                  <button type=\"button\" className=\"btn btn-danger\" onClick={this.props.clearEditedQuestionsList}>\n                                    <FormattedMessage id=\"cleareditedList\" />\n                                  </button>\n                                </td>\n                                <td>\n                                  <button type=\"button\" className=\"btn btn-danger\" onClick={this.props.loadQuestions}>\n                                    Click\n                                  </button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </AccordionItemPanel>\n                    </AccordionItem>\n                </Accordion>\n              </StyledAccordeon>\n              <PaginationSimple totalNumberOfItems={this.props.numberOfQuestionsBySubject} itemsPerPage={this.props.resultsFilterPerPage} paginationClick={this.paginationClick} currentPagination={this.props.currentPagination} />\n              <EditQuestionTable \n                questions={ this.props.questionsPaginated } \n                language={this.props.language}\n                toggleQuestionActivity={this.props.toggleQuestionActivity}\n                onTdRollover={this.props.loadAnswers}\n                answersToShow={this.props.answers}\n                editedQuestionsArray={this.props.recentlyEditedQuestionsarray}\n              />\n              <PaginationSimple totalNumberOfItems={this.props.numberOfQuestionsBySubject} itemsPerPage={this.props.resultsFilterPerPage} paginationClick={this.paginationClick} currentPagination={this.props.currentPagination} />\n            </div>\n          </div>\n      </div> \n    </IntlProvider>  \n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.usersReducer, ...state.loginSignUpReducer, ...state.settingsReducer,  ...state.questionsReducer, ...state.subjectsReducer,  ...state.resultsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(AdmineditQuestions);","import React from 'react'\nimport MaterialUiNavigation from './MaterialUiNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/AdminContribution';\nimport AdminEditContributionForm from \"./forms/AdminEditContributionForm\";\n\n\nclass AdminContributionDetails extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n  }\n\n  componentDidMount(){\n    this.props.loadContributionItemAdmin(this.props.match.params.id);\n  }\n\n\n  componentDidUpdate(){\n    if(this.props.redirectAfterSuccesfullAdministeringForAdmin === 2){/// this means that user came from email confirmation link\n      this.props.history.push('/app/admincontribution');\n    };\n  }\n \n  backNavigation(){\n    this.props.history.push('/app/admincontribution');\n  }\n\n  handleChange = (e) =>{\n    this.setState({question: e.target.value});\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n          <MaterialUiNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n          <div className=\"container\">\n            <h2><FormattedMessage id=\"editContibution\" /></h2>\n            <h4><FormattedMessage id=\"subject\" />:&nbsp;{this.props.adminContributionItem.subjectName}</h4>\n            <h4><FormattedMessage id=\"userName\" />:&nbsp;{this.props.adminContributionItem.userName}</h4>\n            <AdminEditContributionForm  onSubmit={()=>{this.props.saveContributionAdmin()}} language={this.props.language}  \n            declineFunction={this.props.declineContributionAdmin} initialValues={this.props.adminContributionItem}  backNavigation={this.backNavigation.bind(this)} showAllButtons={true}  />\n          </div>\n      </div> \n     </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.loginSignUpReducer, ...state.settingsReducer, ...state.contributionsReducer, ...state.usersReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(AdminContributionDetails);","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/forms/AddContributionForm';\nimport SmartTextArea from '../formelements/SmartTextArea';\nimport Button from '@mui/material/Button';\n\nconst validate = values => {\n    const errors = {}\n    if (!values.question) { errors.question = 'Required'  } else if (values.question.length > 1000) { errors.question = 'Must be 1000 characters or less'}\n    if (!values.uncorrect0) {  errors.uncorrect0 = 'Required'  } else if (values.uncorrect0.length > 1000) { errors.uncorrect0 = 'Must be 1000 characters or less'}\n    if (!values.uncorrect1) {  errors.uncorrect1 = 'Required'  } else if (values.uncorrect1.length > 1000) { errors.uncorrect1 = 'Must be 1000 characters or less'}\n    if (!values.uncorrect2) { errors.uncorrect2 = 'Required' } else if (values.uncorrect2.length > 1000) { errors.uncorrect2 = 'Must be 1000 characters or less'}\n    if (!values.answerCorrect) { errors.answerCorrect = 'Required'  } else if (values.answerCorrect.length > 1000) { errors.answerCorrect = 'Must be 1000 characters or less'}\n    return errors\n  }\n\nlet UserEditContributionForm = props => {\n  const { handleSubmit, submitting, language, backNavigation } = props;\n  const translations = {\n    firstAnswer:  language === 'en' ? messages.en.firstAnswer : messages.ru.firstAnswer,\n    secondAnswer:  language === 'en' ? messages.en.secondAnswer : messages.ru.secondAnswer,\n    thirdAnswer:  language === 'en' ? messages.en.thirdAnswer : messages.ru.thirdAnswer,\n    fourthAnswer:  language === 'en' ? messages.en.fourthAnswer : messages.ru.fourthAnswer,\n    question: language === 'en' ? messages.en.question : messages.ru.question,\n    clearValues: language === 'en' ? messages.en.clearValues : messages.ru.clearValues,\n  }\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <form onSubmit={handleSubmit}>\n          <br/> <br />\n          <div>\n              <table style={{width: \"100%\"}} class=\"contributionForm\">\n                  <tbody>\n                    <tr><td><Field  name=\"question\"   component={SmartTextArea} label={translations.question} disabled={true} /></td></tr>\n                    <tr><td><br/></td></tr>\n                    <tr><td><Field  name=\"uncorrect0\"   component={SmartTextArea} label={translations.firstAnswer} disabled={true} /></td></tr>\n                    <tr><td><Field  name=\"uncorrect1\"   component={SmartTextArea} label={translations.secondAnswer} disabled={true} /></td></tr>\n                    <tr><td><Field  name=\"uncorrect2\"   component={SmartTextArea} label={translations.thirdAnswer} disabled={true} /></td></tr>\n                    <tr><td><Field  name=\"answerCorrect\"   component={SmartTextArea} label={translations.fourthAnswer} disabled={true} /></td></tr>\n                  </tbody>\n              </table>\n          </div>\n        <br/><br/>\n        <div>\n          <Button variant=\"contained\"  disabled={submitting} onClick={backNavigation}><FormattedMessage id=\"backToContributionPage\" /></Button>\n        </div>\n      </form>\n    </IntlProvider>\n  );\n};\n\nUserEditContributionForm = reduxForm({\n  form: 'editContibutionFormUserRedux', \n  enableReinitialize: true,\n  validate,\n})(UserEditContributionForm);\n\nexport default UserEditContributionForm;","import styled from 'styled-components'\n\nconst StyledUserContributionItem = styled.div`\n        h4 {\n            display: inline;\n        }\n\n        h4.second {\n            margin-left: 30px; \n        }\n`;\n\nexport default StyledUserContributionItem","import React from 'react'\nimport MaterialUiNavigation from './MaterialUiNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/AdminContribution';\nimport UserEditContributionForm from \"./forms/UserEditContributionForm\";\nimport StyledUserContributionItem from '../styled/StyledUserContributionItem'\n\n\nclass UserContributionDetails extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n  }\n\n  componentDidMount(){\n    this.props.loadContributionItemUser(this.props.match.params.id);\n  }\n\n  componentDidUpdate(){}\n \n  backNavigation(){\n    this.props.history.push('/app/myquestionstatus');\n  }\n\n  handleChange = (e) =>{\n    this.setState({question: e.target.value});\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    let { questionStatus, createdAt, subjectId } = this.props.userContributionItem;\n    ////console.log(\"subjectId = \", subjectId);\n    let subjectName = this.props.subjectsUser.filter((e) => e.id === subjectId);\n    let subjName;\n    if(!!subjectName[0]){\n      subjName = subjectName[0]['name'];\n    }\n\n    let statusWord = questionStatus === 0 ? messages[this.props.language].pending : questionStatus === '1' ? messages[this.props.language].approved : messages[this.props.language].declined;\n    return (\n      <StyledUserContributionItem >\n        <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n          <div>\n            <MaterialUiNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n            <div className=\"container\">\n              <h2><FormattedMessage id=\"myConrtibutionDetails\" /></h2>\n              <h4 style={questionStatus === '0' ? {backgroundColor: '#efe756'} : questionStatus === '1' ? {backgroundColor: '#9dd49b', color: 'white !important'} : {backgroundColor: '#efc9c9', color: 'white !important'}}>\n                <FormattedMessage id=\"status\" />: {statusWord}\n              </h4>&nbsp;&nbsp;\n              <h4>\n                <FormattedMessage id=\"subject\" />: {subjName}\n              </h4>\n              <h4 className=\"second\"><FormattedMessage id=\"creationDate\" />: {createdAt}\n              </h4>\n              <UserEditContributionForm  language={this.props.language}  initialValues={this.props.userContributionItem}   backNavigation={this.backNavigation.bind(this)} />\n            </div>\n        </div> \n      </IntlProvider>\n     </StyledUserContributionItem>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.loginSignUpReducer, ...state.settingsReducer, ...state.contributionsReducer, ...state.usersReducer, ...state.subjectsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(UserContributionDetails);","const messages = {\n    en: {\n      searchForQusestion: \"Search for question\",\n      searchByKeyword: \"Search by keyword\",\n      searchById: \"Search by id\",\n      keyword: \"Keyword\",\n      search: \"Search\",\n      clearVal: \"Clear form\",\n      searchSuccess: \"Success\",\n      searchError: \"Error\"\n    },\n    ru: {\n      searchForQusestion: \"Поиск вопроса\",\n      searchByKeyword: \"Поиск по ключевым словам\",\n      searchById: \"Поиск по ID\",\n      keyword: \"Kлючевое слово\",\n      search: \"Поиск\",\n      clearVal: \"Oчисть формy\",\n      searchSuccess: \"Success\",\n      searchError: \"Error\"\n    }\n  };\n\n  export default messages;","import styled from 'styled-components'\n\nconst StyledQuestionSearch = styled.td`\n  .search_highlight{\n    background-color: #4eff14;\n  }\n\n  .cellContent {\n      position: relative;\n  }\n\n  .cellContent .hiddenTip {\n    position: absolute;\n    bottom: 100%;\n    left: 13px;\n    display: none;\n    background-color: #5d8ed9;\n    padding: 10px;\n    z-index: 3000;\n    max-width: 400px;\n  }\n\n  .hiddenTip .correctAnswer{\n    background-color: #cee7c9;  \n    padding: 10px;\n    margin: 10px;\n  }\n\n  .hiddenTip .uncorrectAnswer{\n    background-color: #ffb9b9;  \n    padding: 10px;\n    margin: 10px;\n  }\n\n  .cellContent:hover .hiddenTip {\n    display: block;\n  }\n`;\n\nexport default StyledQuestionSearch","import React from 'react';\nimport Highlighter from \"react-highlight-words\";\nimport StyledQuestionSearch from '../../styled/StyledQuestionSearch';\nimport { Link } from 'react-router-dom';\n\nexport default class QuestionSearchResultRow extends React.Component {\n    toggleSubjectActivity(){\n        this.props.toggleSubjectActivity({id: this.state.id});\n    }\n\n    deleteUser(){\n        this.props.deleteUser({id: this.state.id});\n    }\n\n    toggleuserconfirm(){\n        this.props.toggleuserconfirm({id: this.state.id});\n    }\n\n    toggleusersuspend(){\n        this.props.toggleusersuspend({id: this.state.id, reason: this.promptt.current.state.value});\n    }\n\n    onRollover(id){\n        this.props.onTdRollover(id);\n    }\n\n    render() {\n      const { id, name, subject_id, user_id } = this.props.question;\n      const keyWord = this.props.keyWord; \n      const answersToShow = this.props.answersToShow;\n      let url = '/app/admineditquestions/' + id;\n      return  (\n        \n                <tr>\n                    <td > { id } </td>\n                     \n                    <StyledQuestionSearch className=\"questionCell\" onMouseOver={()=>{this.props.loadAnswers(id)}}>\n                        <div className=\"cellContent\" >\n                            <div className=\"hiddenTip\">\n                                {answersToShow.map(answer => <div className={answer.correct === 1 ? 'correctAnswer' : 'uncorrectAnswer'} key={answer.id}>{answer.name}</div> )}\n                            </div>\n\n                            <Highlighter\n                                highlightClassName=\"search_highlight\"\n                                searchWords={[keyWord]}\n                                autoEscape={true}\n                                textToHighlight={ name }\n                            />\n                        </div>\n                    </StyledQuestionSearch>\n                    <td > { subject_id } </td>\n                    <td > { user_id }  </td>\n                    <td ><Link to={{pathname: url, state: { prevPath: window.location.pathname }}}>edit</Link></td>\n                </tr>\n        \n    );\n    }\n  }","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/SearchForQuestions';\nimport * as actionCreators from '../../actions/index';\n\n\nconst SearchQuestionByKeyWord = props => {\n  const { handleSubmit, pristine, reset, submitting, language } = props;\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <div>\n          <FormattedMessage id=\"keyword\">\n            {(formattedValue)=>(<Field name=\"questionsearchkeyword\" component=\"input\" type=\"text\" placeholder={formattedValue}/>)}\n          </FormattedMessage>\n          </div>\n        </div>\n        <div>\n          <button type=\"submit\" disabled={pristine || submitting}><FormattedMessage id=\"search\" /></button>\n          <button type=\"button\" disabled={pristine || submitting} onClick={reset}><FormattedMessage id=\"clearVal\" /></button>\n        </div>\n      </form>\n    </IntlProvider>\n  );\n};\n\nexport default reduxForm({\n  form: 'SearchQuestionByKeyWord', // a unique identifier for this form\n})(SearchQuestionByKeyWord);","import React from 'react';\nimport '../App.css';\nimport MaterialUiNavigation from './MaterialUiNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/SearchForQuestions';\nimport {withCookies} from 'react-cookie';\nimport Button from '@mui/material/Button';\nimport QuestionSearchResultRow from './forms/QuestionSearchResultRow';\n\n\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemHeading,\n    AccordionItemButton,\n    AccordionItemPanel,\n} from 'react-accessible-accordion';\nimport SearchQuestionByKeyWord from './forms/SearchQuestionByKeyWord';\n\n\nimport StyledAccordeon from '../styled/StyledAccordeon';\nimport Select from './formelements/Select';\nimport { formValueSelector } from 'redux-form';\n\nclass AdminSearchQuestion extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    const { cookies } = props;\n    const mycookie = cookies.get('needToRedirectToLogin') ? cookies.get('needToRedirectToLogin') : \"empty\";\n    const mycookieRedirectToResetPassword = cookies.get('passwordReset') ? cookies.get('passwordReset') : \"empty\";\n\n    this.state = {\n      needToRedirectToLogin: mycookie,\n      needToRedirectToresetPassword: mycookieRedirectToResetPassword,\n    };\n  }\n\n  componentDidMount(){\n    this.props.setRedirectFlag();\n    this.props.loadSubjectsUsers();\n    setTimeout(() => { \n      if(this.state.needToRedirectToLogin.length > 5){/// this means that user came from email confirmation link\n        this.props.history.push('/app/login');\n      };\n      if(this.state.needToRedirectToresetPassword.length > 5){/// this means that user came from reset password link\n        this.props.history.push('/app/resetpassword');\n      };\n    }, 500);\n    this.props.setRedirectFlagForPasswordResetFunction(1);// this is preparation for reset password workflow. If there is certain ciookie, page will be redirected to reset password form\n    //and in case of successfull new password establised, we swithch this flag to \"2\" and from reset form user will be redirected to login form\n  }\n\n  resendEmailConfirmation(){\n    this.props.resendEmailConfirmation();\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n  const { questionsearchkeyword } = this.props;\n  return (\n        <div>\n          <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n            {/*<TopNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} ref={this.child} toggleLanguage={this.toggleLanguage} language={this.props.language}/>*/}\n            <MaterialUiNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} roleId={this.props.roleId} toggleLanguage={this.toggleLanguage} language={this.props.language}/>\n            <div className=\"container\" style={(this.state.needToRedirectToLogin.length > 5) ? {display: 'none'} : {}}>\n                <h2><FormattedMessage id=\"searchForQusestion\" /></h2>\n                <StyledAccordeon>\n                  <Accordion allowMultipleExpanded=\"true\" allowZeroExpanded=\"true\">\n                    <AccordionItem>\n                        <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <FormattedMessage id=\"searchByKeyword\" />\n                            </AccordionItemButton>\n                        </AccordionItemHeading>\n                        <AccordionItemPanel>\n                            <SearchQuestionByKeyWord onSubmit={()=>{this.props.searchQuestionByKeyWord({questionsearchkeyword})}} language={this.props.language}/>\n                            <div style={this.props.foundQuestionsByWord.length === 0  ? {display: 'none'} : {}}>\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>Id</th>{/* <FormattedMessage id=\"name\" /> */}\n                                        <th>Question</th>{/* <FormattedMessage id=\"email\" /> */}\n                                        <th>Subject Id</th>{/*? <FormattedMessage id=\"createdAt\" /> */}\n                                        <th>User Id</th>{/* <FormattedMessage id=\"status\" /> */}\n                                        <th>Edit</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.props.foundQuestionsByWord.map(question => <QuestionSearchResultRow \n                                        question={question} \n                                        key={question.id}\n                                        keyWord = {questionsearchkeyword}\n                                        loadAnswers = {this.props.loadAnswers}\n                                        answersToShow={this.props.answers}\n                                    /> )}\n                                </tbody>\n                            </table>\n                            </div>\n                        </AccordionItemPanel>\n                        <AccordionItem>\n                        <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <FormattedMessage id=\"searchById\" />\n                            </AccordionItemButton>\n                        </AccordionItemHeading>\n                        <AccordionItemPanel>\n                            hhhhhhhhhhhhhhhhhhh\n                        </AccordionItemPanel>\n                    </AccordionItem>\n                    </AccordionItem>\n                </Accordion>\n              </StyledAccordeon>\n            </div>\n          </IntlProvider>\n        </div>\n    )\n  }\n}\n\nconst selector = formValueSelector('SearchQuestionByKeyWord');\n\nAdminSearchQuestion = connect(\n    state => {\n        const questionsearchkeyword = selector(state, 'questionsearchkeyword')\n        return {\n            questionsearchkeyword,\n        }\n    }\n    )(AdminSearchQuestion) \n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.testReducer, ...state.loginSignUpReducer, ...state.subjectsReducer, ...state.settingsReducer, ...state.questionsReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(withCookies(AdminSearchQuestion));\n","const messages = {\n    en: {\n        commenttSuccess: \"Comment has been added successfully\",\n        commenttError: \"Error while adding comment\",\n        maximumNumberOfComments: \"Maximum number of comments\",\n        perDay: \" per day\"\n    },\n    ru: {\n        commenttSuccess: \"Комментарий успешно добавлен\",\n        commenttError: \"Ошибка при добавлении комментария\",\n        maximumNumberOfComments: \"Максимальное количество комментариев\",\n        perDay: \" в день\"\n    }\n  };\n\n  export default messages;","import store from '../index.js';\nexport const createHeader = () => ({ 'JWToken': store.getState().loginSignUpReducer.JWToken });\n","const urls = {\n      addComments: 'react/addmycomment',\n      addContribution: 'react/addmycontribution',\n      adminEditQuestion: 'react/editquestions/',\n      getRateLimiter: 'react/ratelimiters',\n      addquestionreport: 'react/addquestionreport',\n      searchQuestionByKey: 'react/searchquestionbykey'\n  };\n\nexport default urls;","import { createHeader } from './';\nimport axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport urls from '../urls';\nconst BaseUrl = helpers.UrlSniffer();\n\nexport const createComment = ({comment, route}) => {\n    const headers = createHeader();\n    return axios.post(BaseUrl + urls.addComments, {comment, route}, {headers}); \n}","import { put, all, delay } from 'redux-saga/effects';\n\nexport function* showHideSpinnerAndMessage(overlayVisibility, message, flashVisibility, flashType){\n    yield all([\n        put({ type: 'SET_OVERLAY_VISIBILITY', visibility: overlayVisibility }),\n        put({ type: 'SET_MUI_FLASH_MESSAGES_MESSAGE', muiFlashMessageMessage: message}),\n        put({ type: 'SET_MUI_FLASH_MESSAGES_VISIBILITY', muiFlashMessageVisibility: flashVisibility}),\n        put({ type: 'SET_MUI_FLASH_MESSAGES_TYPE', muiFlashMessageType: flashType}),\n    ])\n    yield delay(3000);\n    yield put({ type: 'SET_MUI_FLASH_MESSAGES_VISIBILITY', muiFlashMessageVisibility: 0});\n}","import {reset} from 'redux-form';\nimport store from '../index.js';\nimport { put, call } from 'redux-saga/effects';\nimport messages from '../translations/Comments';\nimport { createComment } from '../api/comment';\nimport { showHideSpinnerAndMessage } from './sagaUtilities';\n\nexport function* postComment({comment, route}) {// route is the page url to store to be able to identify page\n    const translations = {\n        commentSuccess:   messages[store.getState().settingsReducer.language].commenttSuccess,\n        commenttError:  messages[store.getState().settingsReducer.language].commenttError,\n        maximumNumberOfComments:  messages[store.getState().settingsReducer.language].maximumNumberOfComments,\n        perDay:  messages[store.getState().settingsReducer.language].perDay,\n    }\n\n    const rateLimiters = {\n        number:   store.getState().commentsReducer.commentRateLimiterQuantity,\n    }\n    \n    const errorMessage = translations.maximumNumberOfComments + ' ' + rateLimiters.number + translations.perDay\n\n    try {\n        yield put({ type: 'SET_OVERLAY_VISIBILITY', visibility: 1 });\n        const responceData = yield call(createComment, {comment, route});\n        if (responceData.data.payload.success === 'true'){\n            yield showHideSpinnerAndMessage(0, translations.commentSuccess, 1, 'success'); \n        } else if (responceData.data.payload.success === 'false' && responceData.data.payload.message === 'ratelimiter issue'){\n            yield showHideSpinnerAndMessage(0, errorMessage, 1, 'error');\n        } else {\n            yield showHideSpinnerAndMessage(0, translations.commenttError, 1, 'error');\n        }\n        yield  put (reset('addCommentFormRedux'));\n    } catch(e) {\n        yield put(reset('addCommentFormRedux'));\n        yield showHideSpinnerAndMessage(0, translations.commenttError, 1, 'error');\n    }\n}\n\n\n","const messages = {\n    en: {\n      contibute: \"Contribute\",\n      select: \"Please select subject\",\n      addMyQuestions: \"Add my questions\",\n      myQuestionsStatus: \"My added questions' status\",\n      youCanAddQuestions: \"On this page you can share your experience and add questions to our knowledge base. After checking by the moderator, they will be added and available to all users. Please note that maximum length of the answer or question is 1000 characters\",\n      onceAdded: \"Please take into consideration that once added, you can't change or edit your question. To check your question details, just click question status\",\n      addSuccess: \"Your question has been sent to moderation, thanks\",\n      addError: \"Network error, please try again later\",\n      pleaseselectASubject: \"Please select a subject\",\n      clickToSelect: \"Click to select\",\n      maximumNumberOfContributions: \"Maximum number of questions\",\n      perDay: \" per day\"\n    },\n    ru: {\n      contibute: \"Мои вопросы\",\n      select: \"Пожалуйста, выберите предмет\",\n      addMyQuestions: \"Добавить вопросы\",\n      myQuestionsStatus: \"Статус добавленных мной вопросов\",\n      youCanAddQuestions: \"Hа этой страничке вы можете поделиться своим опытом и добавить в базу знаний вопросы. После проверки модератором они будут добавлены и доступны всем пользователям. Обратите внимание, что максимальная длина ответа или вопроса составляет 1000 символов.\",\n      onceAdded: \"Учтите, что после добавления вы не можете изменить или отредактировать свой вопрос. Чтобы проверить детали своего вопроса, просто нажмите на статус вопроса.\",\n      addSuccess: \"Ваш вопрос отправлен на модерацию, спасибо\",\n      addError: \"Ошибка сети, повторите попытку позже\",\n      pleaseselectASubject: \"Пожалуйста, выберите предмет\",\n      clickToSelect: \"Нажмите, чтобы выбрать\",\n      maximumNumberOfContributions: \"Максимальное количество вопросов\",\n      perDay: \" в день\"\n    }\n  };\n\n  export default messages;","import { createHeader } from './';\nimport axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport urls from '../urls';\nconst BaseUrl = helpers.UrlSniffer();\n\nexport const sendContributionSaga = ({question, firstAnswer, secondAnswer, thirdAnswer, fourthAnswer, subjectId}) => {\n    const headers = createHeader();\n    return axios.post(BaseUrl + urls.addContribution, {question, firstAnswer, secondAnswer, thirdAnswer, fourthAnswer, subjectId}, {headers}); \n}","import {reset} from 'redux-form';\nimport store from '../index.js';\nimport { put, call } from 'redux-saga/effects';\nimport messages from '../translations/Contribution';\nimport { sendContributionSaga } from '../api/contribution';\nimport { showHideSpinnerAndMessage } from './sagaUtilities';\n\n\nexport function* postContribution({question, firstAnswer, secondAnswer, thirdAnswer, fourthAnswer, subjectId}){\n    const translations = {\n        addSuccess:   messages[store.getState().settingsReducer.language].addSuccess,\n        addError: messages[store.getState().settingsReducer.language].addError,\n        maximumNumberOfContributions:  messages[store.getState().settingsReducer.language].maximumNumberOfContributions,\n        perDay:  messages[store.getState().settingsReducer.language].perDay,\n    }\n    \n    const rateLimiters = {\n        number:   store.getState().contributionsReducer.contributionRateLimiterQuantity,\n    }\n\n    const errorMessage = translations.maximumNumberOfContributions + ' ' + rateLimiters.number + translations.perDay\n\n    try {\n        yield put({ type: 'SET_OVERLAY_VISIBILITY', visibility: 1 });\n        const responceData = yield call(sendContributionSaga, {question, firstAnswer, secondAnswer, thirdAnswer, fourthAnswer, subjectId});\n        if (responceData.data.payload.success === 'true'){\n            yield  put (reset('addContibutionFormRedux'));\n            yield showHideSpinnerAndMessage(0, translations.addSuccess, 1, 'success'); \n        } else if (responceData.data.payload.success === 'false' && responceData.data.payload.message === 'ratelimiter issue'){\n            yield  put (reset('addContibutionFormRedux'));\n            yield showHideSpinnerAndMessage(0, errorMessage, 1, 'error');\n        } else {\n            yield  put (reset('addContibutionFormRedux'));\n            yield showHideSpinnerAndMessage(0, translations.addError, 1, 'error');\n        }\n    } catch(e) {\n        yield showHideSpinnerAndMessage(0, translations.addError, 1, 'error');\n    }\n}\n","import { createHeader } from './';\nimport axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport urls from '../urls';\nconst BaseUrl = helpers.UrlSniffer();\n\nexport const editQuestionPost = ({editedValues}) => {\n    const headers = createHeader();\n    return axios.post(BaseUrl + urls.adminEditQuestion, {\n        answerCorrect: editedValues.answerCorrect, \n        correctId: editedValues.correctId, \n        question: editedValues.question, \n        questionId: editedValues.questionId, \n        uncorrect0: editedValues.uncorrect0, \n        uncorrect1: editedValues.uncorrect1, \n        uncorrect2: editedValues.uncorrect2, \n        uncorrectId0: editedValues.uncorrectId0, \n        uncorrectId1: editedValues.uncorrectId1, \n        uncorrectId2: editedValues.uncorrectId2, \n        subjectId: editedValues.subjectId,\n    }, {headers}); \n}\n\nexport const getQuestionsBySubjectAndStatus = ({currentSubjId, currentStatus}) => {\n    const headers = createHeader();\n    return axios.get(BaseUrl + 'react/questions/' + currentSubjId + '/' + currentStatus, {headers: headers})\n}","import store from '../index.js';\nimport { put, all, call, delay } from 'redux-saga/effects';\nimport { editQuestionPost, getQuestionsBySubjectAndStatus } from '../api/questions';\nimport helpers from '../helpers/Helpers';\n\n\nexport function* postEditQuestions({editedValues}) {\n    let currentSubjId = store.getState().questionsReducer.currentSubjectId;\n    const currentStatus = store.getState().questionsReducer.currentStatus;\n    const itemsPerPage = store.getState().questionsReducer.resultsFilterPerPage;\n    const currentPagination = store.getState().questionsReducer.currentPagination;\n    try {\n        yield put({ type: 'SET_OVERLAY_VISIBILITY', visibility: 1 });\n        const responceData = yield call(editQuestionPost, {editedValues});\n        if (responceData.data.payload.success === 'true'){\n            const getResponceData = yield call(getQuestionsBySubjectAndStatus, {currentSubjId, currentStatus});\n            if (getResponceData.data.payload.success === 'true'){\n                yield put({ type: 'SET_NUMBER_OF_CURRENT_QUESTIONS_BY_SUBJECT_TO_EDIT',  number: getResponceData.data.payload.questions.length });\n                yield put({ type: 'PUSH_EDITED_QUESTION_ID_TO_ARRAY_TO_BE_ABLE_TO_SEE_RECENTLY_EDITED_QUESTIONS', id: parseInt(editedValues.questionId) });\n                yield put({ type: 'SET_CURRENT_QUESTIONS_BY_SUBJECT_TO_EDIT',  questions: getResponceData.data.payload.questions });\n                let paginatedQuestions = helpers.SimplePaginatedResults(getResponceData.data.payload.questions, itemsPerPage, currentPagination);\n                yield put({ type: 'SET_PAGINATED_QUESTIONS', results: paginatedQuestions });\n                if(editedValues.ifNeedToRedirect){ yield put({ type: 'SET_REDIRECT_FLAG_TO_BACK_TO_QUESTIONS_LIST', n: 2 }); }\n                yield put({ type: 'SET_OVERLAY_VISIBILITY', visibility: 0 });\n                yield all([\n                    put({ type: 'SET_FLASH_MESSAGES_MESSAGE_1', flashMessageMessage: 'success'}),\n                    put({ type: 'SET_FLASH_MESSAGES_VISIBILITY', flashMessageVisibility: 1}),\n                ])\n                yield delay(3000);\n                yield put({ type: 'SET_FLASH_MESSAGES_VISIBILITY', flashMessageVisibility: 0 });\n            } else {\n                yield put({ type: 'SET_OVERLAY_VISIBILITY', visibility: 0 });\n                yield all([\n                    put({ type: 'SET_FLASH_MESSAGES_MESSAGE_1', flashMessageMessage: 'error'}),\n                    put({ type: 'SET_FLASH_MESSAGES_VISIBILITY', flashMessageVisibility: 1}),\n                ])\n                yield delay(3000);\n                yield put({ type: 'SET_FLASH_MESSAGES_VISIBILITY', flashMessageVisibility: 0 });\n            }\n        } else {\n            yield put({ type: 'SET_OVERLAY_VISIBILITY', visibility: 0 });\n            yield all([\n                put({ type: 'SET_FLASH_MESSAGES_MESSAGE_1', flashMessageMessage: 'error'}),\n                put({ type: 'SET_FLASH_MESSAGES_VISIBILITY', flashMessageVisibility: 1}),\n            ])\n            yield delay(3000);\n            yield put({ type: 'SET_FLASH_MESSAGES_VISIBILITY', flashMessageVisibility: 0 });\n        }\n    } catch (e){\n        yield put({ type: 'SET_OVERLAY_VISIBILITY', visibility: 0 });\n        yield all([\n            put({ type: 'SET_FLASH_MESSAGES_MESSAGE_1', flashMessageMessage: 'error'}),\n            put({ type: 'SET_FLASH_MESSAGES_VISIBILITY', flashMessageVisibility: 1}),\n        ])\n        yield delay(3000);\n        yield put({ type: 'SET_FLASH_MESSAGES_VISIBILITY', flashMessageVisibility: 0 });\n    }\n}","import axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport urls from '../urls';\nconst BaseUrl = helpers.UrlSniffer();\n\nexport const getRateLimiterApi = () => {\n    return axios.get(BaseUrl + urls.getRateLimiter); \n}","import { put, call } from 'redux-saga/effects';\nimport { getRateLimiterApi } from '../api/ratelimiter';\n\nexport function* getRateLimiter() {\n    try {\n        const responceData = yield call(getRateLimiterApi);\n        if (responceData.data.payload.success === 'true'){\n            yield put({ type: 'SET_RATE_LIMITER', \n                commentRatelimiterComments: responceData.data.payload.commentRatelimiterComments, \n                commentRatelimiterHours: responceData.data.payload.commentRatelimiterHours,\n                contributeRatelimiterHours: responceData.data.payload.contributeRatelimiterHours,\n                contributeRatelimiterContributions: responceData.data.payload.contributeRatelimiterContributions,\n                questionReportRatelimiterHours: responceData.data.payload.questionReportRatelimiterHours,\n                questionReportRatelimiterReports: responceData.data.payload.questionReportRatelimiterReports\n            })\n        } else {\n            alert(\"comments ratelimiter issue\");\n        }\n    } catch(e){\n        console.log(e);\n    }\n}","const messages = {\n    en: {\n        commenttSuccess: \"Report has been added successfully\",\n        commenttError: \"Error while adding report\",\n        maximumNumberOfComments: \"Maximum number of reports\",\n        perDay: \" per day\"\n    },\n    ru: {\n        commenttSuccess: \"Жалоба успешно добавлена\",\n        commenttError: \"Ошибка при добавлении жалобы\",\n        maximumNumberOfComments: \"Максимальное количество жалоб\",\n        perDay: \" в день\"\n    }\n  };\n\n  export default messages;","import { createHeader } from './';\nimport axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport urls from '../urls';\nconst BaseUrl = helpers.UrlSniffer();\n\nexport const addQuestionReport = ({questionId}) => {\n    const headers = createHeader();\n    return axios.post(BaseUrl + urls.addquestionreport, {questionId}, {headers}); \n}","import {reset} from 'redux-form';\nimport store from '../index.js';\nimport { put, call } from 'redux-saga/effects';\nimport messages from '../translations/AddQuestionReport';\nimport { addQuestionReport } from '../api/addquestionreport';\nimport { showHideSpinnerAndMessage } from './sagaUtilities';\n\nexport function* addQuestReport({questionId, userId}) {// route is the page url to store to be able to identify page\n    const translations = {\n        commentSuccess:   messages[store.getState().settingsReducer.language].commenttSuccess,\n        commenttError:  messages[store.getState().settingsReducer.language].commenttError,\n        maximumNumberOfComments:  messages[store.getState().settingsReducer.language].maximumNumberOfComments,\n        perDay:  messages[store.getState().settingsReducer.language].perDay,\n    }\n\n    const rateLimiters = {\n        number:   store.getState().commentsReducer.questionReportRatelimiterReports,\n    }\n    \n    const errorMessage = translations.maximumNumberOfComments + ' ' + rateLimiters.number + translations.perDay\n\n    try {\n        yield put({ type: 'SET_OVERLAY_VISIBILITY', visibility: 1 });\n        const responceData = yield call(addQuestionReport, {questionId, userId});\n        if (responceData.data.payload.success === 'true'){\n            yield showHideSpinnerAndMessage(0, translations.commentSuccess, 1, 'success'); \n        } else if (responceData.data.payload.success === 'false' && responceData.data.payload.message === 'ratelimiter issue'){\n            yield showHideSpinnerAndMessage(0, errorMessage, 1, 'error');\n        } else {\n            yield showHideSpinnerAndMessage(0, translations.commenttError, 1, 'error');\n        }\n    } catch(e) {\n        yield showHideSpinnerAndMessage(0, translations.commenttError, 1, 'error');\n    }\n}","import { createHeader } from './';\nimport axios from 'axios';\nimport helpers from '../helpers/Helpers';\nimport urls from '../urls';\nconst BaseUrl = helpers.UrlSniffer();\n\nexport const searchQuestionsByKeyApi = ({questionsearchkeyword}) => {\n    const headers = createHeader();\n    return axios.get(BaseUrl + urls.searchQuestionByKey + '/' + questionsearchkeyword, {headers}); \n}","import {reset} from 'redux-form';\nimport store from '../index.js';\nimport { put, call } from 'redux-saga/effects';\nimport messages from '../translations/SearchForQuestions';\nimport { searchQuestionsByKeyApi } from '../api/search';\nimport { showHideSpinnerAndMessage } from './sagaUtilities';\n\n\nexport function* searchQuestionsByKey({questionsearchkeyword}) {// route is the page url to store to be able to identify page\n    const translations = {\n        commentSuccess:   messages[store.getState().settingsReducer.language].searchSuccess,\n        commenttError:  messages[store.getState().settingsReducer.language].searchError,\n    }\n\n    try {\n        yield put({ type: 'SET_OVERLAY_VISIBILITY', visibility: 1 });\n        const responceData = yield call(searchQuestionsByKeyApi, {questionsearchkeyword});\n        if (responceData.data.payload.success === 'true'){\n            yield showHideSpinnerAndMessage(1, translations.commentSuccess, 1, 'success'); \n            yield put({ type: 'SET_SEARCH_QUESTIONS_BY_KEY_RESULT', questions: responceData.data.payload.questions });\n            yield put({ type: 'SET_OVERLAY_VISIBILITY', visibility: 0 });\n        } else {\n            yield showHideSpinnerAndMessage(0, translations.commenttError, 1, 'error');\n            yield put({ type: 'SET_OVERLAY_VISIBILITY', visibility: 0 });\n        }\n    } catch(e) {\n        yield showHideSpinnerAndMessage(0, translations.commenttError, 1, 'error');\n        yield put({ type: 'SET_OVERLAY_VISIBILITY', visibility: 0 });\n    }\n}","import store from '../index.js';\nimport { put, all, call, delay } from 'redux-saga/effects';\nimport { editQuestionPost, getQuestionsBySubjectAndStatus } from '../api/questions';\n\n\nexport function* postEditSearchQuestions({editedValues}) {\n    try {\n        yield put({ type: 'SET_OVERLAY_VISIBILITY', visibility: 1 });\n        const responceData = yield call(editQuestionPost, {editedValues});\n        if (responceData.data.payload.success === 'true'){\n            if(editedValues.ifNeedToRedirectToSearch){ yield put({ type: 'SET_REDIRECT_FLAG_TO_BACK_TO_QUESTIONS_LIST', n: 3 }); }\n            yield put({ type: 'SET_OVERLAY_VISIBILITY', visibility: 0 });\n            yield all([\n                put({ type: 'SET_FLASH_MESSAGES_MESSAGE_1', flashMessageMessage: 'success'}),\n                put({ type: 'SET_FLASH_MESSAGES_VISIBILITY', flashMessageVisibility: 1}),\n            ])\n            yield delay(3000);\n            yield put({ type: 'SET_FLASH_MESSAGES_VISIBILITY', flashMessageVisibility: 0 });\n        } else {\n            yield put({ type: 'SET_OVERLAY_VISIBILITY', visibility: 0 });\n            yield all([\n                put({ type: 'SET_FLASH_MESSAGES_MESSAGE_1', flashMessageMessage: 'error'}),\n                put({ type: 'SET_FLASH_MESSAGES_VISIBILITY', flashMessageVisibility: 1}),\n            ])\n            yield delay(3000);\n            yield put({ type: 'SET_FLASH_MESSAGES_VISIBILITY', flashMessageVisibility: 0 });\n        }\n    } catch (e){\n        yield put({ type: 'SET_OVERLAY_VISIBILITY', visibility: 0 });\n        yield all([\n            put({ type: 'SET_FLASH_MESSAGES_MESSAGE_1', flashMessageMessage: 'error'}),\n            put({ type: 'SET_FLASH_MESSAGES_VISIBILITY', flashMessageVisibility: 1}),\n        ])\n        yield delay(3000);\n        yield put({ type: 'SET_FLASH_MESSAGES_VISIBILITY', flashMessageVisibility: 0 });\n    }\n}","import { takeLatest, all } from 'redux-saga/effects';\nimport { postComment } from './comment';\nimport { postContribution } from './contribution';\nimport { postEditQuestions } from './questions';\nimport { getRateLimiter } from './ratelimiter';\nimport { addQuestReport } from './addquestionreport';\nimport { searchQuestionsByKey } from './search';\nimport { postEditSearchQuestions } from './searchQuestions';\n\nfunction* commentsActionWatcher() {\n    yield takeLatest('POST_COMMENT', postComment)\n}\n\nfunction* contributionActionWatcher() {\n    yield takeLatest('POST_CONTRIBUTION_SAGA', postContribution)\n}\n\nfunction* editQuestionsActionWatcher() {\n    yield takeLatest('POST_EDITED_QUESTIONS', postEditQuestions)\n}\n\nfunction* addQuestionReportWatcher() {\n    yield takeLatest('POST_REPORT', addQuestReport)\n}\n\nfunction* getRateLimiterWatcher() {\n    yield takeLatest('GET_RATE_LIMITER_SETTINGS', getRateLimiter)\n}\n\nfunction* searchQuestionsByKeyWordWatcher() {\n    yield takeLatest('SEARCH_QUESTION_BY_KEYWORD', searchQuestionsByKey)\n}\n\nfunction* editFoundByKeyWordQuestionsActionWatcher() {\n    yield takeLatest('POST_EDITED_SEARCH_QUESTIONS', postEditSearchQuestions)\n}\n\nexport default function* rootSaga() {\n    yield all([\n        commentsActionWatcher(),\n        contributionActionWatcher(),\n        editQuestionsActionWatcher(),\n        getRateLimiterWatcher(),\n        addQuestionReportWatcher(),\n        searchQuestionsByKeyWordWatcher(),\n        editFoundByKeyWordQuestionsActionWatcher()\n    ]);\n}","import { SET_CURRENT_SUBJECT_ID, SET_TESTING_SESSION_HASH, SET_CURRENT_SUBJECT_NAME, SET_CURRENT_QUESTION, SET_ANSWERS, \n    SET_NUMBER_OF_ANSWERED, SET_NUMBER_OF_CORRECT, SET_IF_REMAIN_QUESTIONS, SET_CORRECT_ANSWER_ID, SET_IF_TO_SHOW_TEST_HINTS_BORDER,\n    SET_IF_TO_SHOW_TEST_HINTS, SET_OVERLAY_VISIBILITY, SET_CURRENT_QUESTION_ID } from '../types'\n\nlet testState={\n    currentSubjectId: '',\n    testingSessionHash: '',\n    currentSubjectName: '',\n    currentQuestion: '',\n    currentQuestionId: '',\n    answers: [],\n    numberOfAnsweredQuestions: 0,\n    numberOfCorrectQuestions: 0,\n    ifRemainQuestions: 1,\n    correctAnswerId: '',\n    toShowTestingHints: \"0\",// in general , we can disable test hints in account settings\n    toShowTestHintsBorder: 0,\n    testHintsBorderTimeout: 3000,// how long to show test hints border\n    spinnerOverlayVisibility: false,\n}\n\nconst testReducer = (state=testState, action)=>{\n    switch (action.type){\n    case SET_CURRENT_SUBJECT_ID:\n        return {\n            ...state,\n            currentSubjectId: action.id     \n        } \n\n    case SET_CURRENT_SUBJECT_NAME:\n        return {\n            ...state,\n            currentSubjectName: action.name     \n    }\n\n    case SET_OVERLAY_VISIBILITY:\n        return {\n            ...state,\n            spinnerOverlayVisibility: action.visibility     \n    }\n\n    case 'SET_REMAINING_QUESTIONS_TO_ZERO':\n        return {\n            ...state,\n            ifRemainQuestions: 0,\n            currentQuestion: '',     \n    }\n\n    case SET_IF_TO_SHOW_TEST_HINTS_BORDER:\n        return {\n            ...state,\n            toShowTestHintsBorder: action.visibility \n    }\n\n    case SET_TESTING_SESSION_HASH:\n        return {\n            ...state,\n            testingSessionHash: action.testingSessionHash     \n    }\n\n    case SET_CURRENT_QUESTION:\n        return {\n            ...state,\n            currentQuestion: action.currentQuestion     \n    }\n\n    case SET_ANSWERS:\n        return {\n            ...state,\n            answers: action.answers    \n    }\n\n    case SET_NUMBER_OF_ANSWERED:\n        return {\n            ...state,\n            numberOfAnsweredQuestions: action.number    \n    }\n\n    case SET_NUMBER_OF_CORRECT:\n        return {\n            ...state,\n            numberOfCorrectQuestions: action.number    \n    }\n\n    case SET_IF_REMAIN_QUESTIONS:\n        return {\n            ...state,\n            ifRemainQuestions: action.number    \n    }\n\n    case SET_CORRECT_ANSWER_ID:\n        return {\n            ...state,\n            correctAnswerId: action.id    \n    }\n\n    case SET_IF_TO_SHOW_TEST_HINTS:\n        return {\n            ...state,\n            toShowTestingHints: action.ifToShowTestingHints    \n    }\n\n\n    case SET_CURRENT_QUESTION_ID:\n        return {\n            ...state,\n            currentQuestionId: action.id    \n    }\n\n    default: \n        return {\n            ...state\n        }\n    }\n} \n\nexport default testReducer;\n\n","import { SET_USERS, CLEAR_SENSITIVE_INFO } from '../types'\n\nlet usersState={\n    users: [],\n}\n\nconst usersReducer = (state=usersState, action)=>{\n    switch (action.type){\n\n    case SET_USERS:\n        return{\n            ...state,\n            users: action.users\n        }\n\n    case CLEAR_SENSITIVE_INFO:\n        return{\n            ...state,\n            users: []\n        }\n\n\n    default: \n        return {\n            ...state\n        }\n    }\n} \n\nexport default usersReducer;\n\n","import { LOAD_RESULTS, CLEAR_SENSITIVE_INFO, SET_RESULTS_FILTER_ACTIVE_SUBJECTS, SET_RESULTS_FILTERED, \n    SET_RESULTS_FILTER_ITEMS_PAGE, SET_RESULTS_FILTER_NUMBER_OF_PAGINATIONS, SET_RESULTS_FILTER_CURRENT_PAGINATION, SET_RESULTS_FILTER_SORTING_OPTION } from '../types'\n\nlet resultsState={\n    results: [],\n    resultsFiltered: [],\n    resultsFilterActiveSubjects: [],\n    resultsFilterPerPage: 10,\n    resultsFilterPaginationNumber: 0,// current pagination\n    resultsFilterPaginationQuantity: 0,// number of paginations\n    resultsFilterSortingOption: \"2\",\n}\n\nconst resultsReducer = (state=resultsState, action)=>{\n    switch (action.type){\n\n    case LOAD_RESULTS:\n        return {\n            ...state,\n            results: action.results,\n            //resultsFiltered: action.results,     \n        } \n\n    case CLEAR_SENSITIVE_INFO:\n        return {\n            ...state,\n            results: [],\n            resultsFiltered: [],\n            resultsFilterActiveSubjects: []\n        }\n\n    case SET_RESULTS_FILTER_ACTIVE_SUBJECTS:\n        return {\n            ...state,\n            resultsFilterActiveSubjects: action.resultsFilterActiveSubjects\n        }\n\n    case SET_RESULTS_FILTERED:\n        return {\n            ...state,\n            resultsFiltered: action.resultsFiltered\n        }\n\n    case SET_RESULTS_FILTER_ITEMS_PAGE:\n        return {\n            ...state,\n            resultsFilterPerPage: action.items\n        }\n\n    case SET_RESULTS_FILTER_NUMBER_OF_PAGINATIONS:\n        return {\n            ...state,\n            resultsFilterPaginationQuantity: action.numberOfPagination\n        }    \n\n    case SET_RESULTS_FILTER_CURRENT_PAGINATION:\n        return {\n            ...state,\n            resultsFilterPaginationNumber: action.currentPagination\n        }     \n\n    case SET_RESULTS_FILTER_SORTING_OPTION:\n        return {\n            ...state,\n            resultsFilterSortingOption: action.sortingOption\n        }          \n\n    default: \n        return {\n            ...state\n        }\n    }\n} \n\nexport default resultsReducer;\n\n","import { SET_LANGUAGE, SET_FLASH_MESSAGES_VISIBILITY, SET_FLASH_MESSAGES_MESSAGE, SET_FLASH_MESSAGES_TYPE, SET_GLOBAL_SETTINGS,\n    SET_COOKIE_CONSENT_VISIBILITY, SET_COOKIE_CONSENT_OBTAINED, CLEAR_SENSITIVE_INFO, SET_MUI_FLASH_MESSAGES_VISIBILITY, SET_MUI_FLASH_MESSAGES_MESSAGE, SET_MUI_FLASH_MESSAGES_TYPE } from '../types'\n\nlet settingsState={\n    language: 'en',\n    flashMessagesVisibility: 0,\n    flashMessagesMessage: '',\n    flashMessagesType: 'success',// 'error',\n    flashMessagesTimeout: 3000,/// how long user will be able to see flash message\n    needEmailConfirmation: 0,\n    needToShowRecaptcha: 1,\n    cookieConsentVisibility: 0,\n    cookieConsentObtained: 0,\n    muiFlashMessageVisibility: 0,\n    muiFlashMessagesMessage1: '',\n    muiFlashMessagesType: '',// 'error',\n    muiFlashMessagesTimeout: 3000,/// how long user will be able to see flash message\n}\n\nconst settingsReducer = (state=settingsState, action)=>{\n    switch (action.type){\n\n    case SET_LANGUAGE:\n        return{\n            ...state,\n            language: action.lang\n        }\n\n    case SET_FLASH_MESSAGES_VISIBILITY:\n        return{\n            ...state,\n            flashMessagesVisibility: action.flashMessageVisibility\n        }\n\n    case SET_MUI_FLASH_MESSAGES_VISIBILITY:\n        return{\n            ...state,\n            muiFlashMessageVisibility: action.muiFlashMessageVisibility\n        }\n\n    case SET_MUI_FLASH_MESSAGES_MESSAGE:\n        return{\n            ...state,\n            muiFlashMessagesMessage1: action.muiFlashMessageMessage\n        }\n\n    case SET_MUI_FLASH_MESSAGES_TYPE:\n        return{\n            ...state,\n            muiFlashMessagesType: action.muiFlashMessageType\n        }\n\n    case SET_FLASH_MESSAGES_MESSAGE:\n        return{\n            ...state,\n            flashMessagesMessage: action.flashMessageMessage\n        }\n\n    case 'SET_FLASH_MESSAGES_MESSAGE_1':\n        return{\n            ...state,\n            flashMessagesMessage: action.flashMessageMessage\n        }\n\n    case SET_FLASH_MESSAGES_TYPE:\n        return{\n            ...state,\n            flashMessagesType: action.flashMessageType\n        }\n\n    case SET_GLOBAL_SETTINGS:\n        return{\n            ...state,\n            needEmailConfirmation: action.settings.emailConfirmation,\n            needToShowRecaptcha: action.settings.signupRecaptcha,\n        }\n\n    case SET_COOKIE_CONSENT_VISIBILITY:\n        return{\n            ...state,\n            cookieConsentVisibility: action.cookieConsentVisibility,\n        }\n\n    case SET_COOKIE_CONSENT_OBTAINED:\n        return{\n            ...state,\n            cookieConsentObtained: action.cookieConsenGiven,\n        }\n\n    case CLEAR_SENSITIVE_INFO:\n        return{\n            ...state,\n            cookieConsentObtained: 0,\n        }\n\n    default: \n        return {\n            ...state\n        }\n    }\n} \n\nexport default settingsReducer;","let commentsState={\n    commentRateLimiterHours: 0,\n    commentRateLimiterQuantity: 0,\n    questionReportRatelimiterHours: 0,\n    questionReportRatelimiterReports: 0\n}\n\nconst commentsReducer = (state=commentsState, action) => {\n    switch (action.type) {\n       case 'SET_RATE_LIMITER':\n          return { ...state, \n            commentRateLimiterHours: action.commentRatelimiterHours, \n            commentRateLimiterQuantity: action.commentRatelimiterComments,\n            questionReportRatelimiterHours: action.questionReportRatelimiterHours,\n            questionReportRatelimiterReports: action.questionReportRatelimiterReports,\n         };\n       default:\n          return state;\n     }\n  };\n  \n  export default commentsReducer;","import { LOAD_SUBJECTS_ADMIN, LOAD_SUBJECTS_USER, CLEAR_SENSITIVE_INFO } from '../types'\n\nlet subjectsState={\n    subjectsAdmin: [],\n    subjectsUser: [],\n}\n\nconst subjectsReducer = (state=subjectsState, action)=>{\n    switch (action.type){\n\n    case LOAD_SUBJECTS_ADMIN:\n        return{// for admin is sensitive info\n            ...state,\n            subjectsAdmin: action.subjects\n        }\n\n    case LOAD_SUBJECTS_USER:\n        return{// for user is public info\n            ...state,\n            subjectsUser: action.subjectsUser\n        }    \n\n    case CLEAR_SENSITIVE_INFO:\n        return {\n            ...state,\n            subjectsN: []\n        }\n\n    default: \n        return {\n            ...state\n        }\n    }\n} \n\nexport default subjectsReducer;\n\n","import { SET_CURRENT_SUBJECT_ID_TO_ADD_QUESTION, SET_RESULTS_FILTERED, SET_RESULTS_FILTER_ITEMS_PAGE, \n    SET_CURRENT_QUESTIONS_BY_SUBJECT_TO_EDIT, SET_NUMBER_OF_CURRENT_QUESTIONS_BY_SUBJECT_TO_EDIT, SET_CURRENT_PAGINATION_QUESTIONS_BY_SUBJECT, SET_PAGINATED_QUESTIONS,\n    SET_QUESTIONS_TO_EDIT_STATUS, SET_ANSWERS_FOR_QUESTION_ID, SET_ADMIN_EDIT_QUESTION_ITEM, SET_CURRENT_SUBJECT_NAME_FOR_QUESTION_EDIT,\n    SET_REDIRECT_FLAG_TO_BACK_TO_QUESTIONS_LIST, PUSH_EDITED_QUESTION_ID_TO_ARRAY_TO_BE_ABLE_TO_SEE_RECENTLY_EDITED_QUESTIONS, CLEAR_EDITED_QUESTIONS_LIST } from '../types'\n\nlet questionsState={\n    questions: [],\n    questionsPaginated: [],\n    numberOfQuestionsBySubject: 0,\n    currentSubjectId: '',\n    currentSubjectName: '',\n    resultsFilterPerPage: 10,\n    currentPagination: 1,\n    currentStatus: '1',\n    currentQuestionId: '',\n    answers: [],\n    adminEditQuestionItem: '',\n    redirectAfterSuccesfullQuestionsSaving: 1,\n    recentlyEditedQuestionsarray: [],\n    foundQuestionsByWord: [],\n    foundQuestionsById: [],\n}\n\nconst questionsReducer = (state=questionsState, action)=>{\n    switch (action.type){\n\n    case SET_CURRENT_SUBJECT_ID_TO_ADD_QUESTION:\n        return{\n            ...state,\n            currentSubjectId: action.id\n        }  \n    \n    case SET_RESULTS_FILTER_ITEMS_PAGE:\n        return {\n            ...state,\n            resultsFilterPerPage: action.items\n        }    \n\n    case PUSH_EDITED_QUESTION_ID_TO_ARRAY_TO_BE_ABLE_TO_SEE_RECENTLY_EDITED_QUESTIONS:\n        return {\n            ...state,\n            recentlyEditedQuestionsarray: [...state.recentlyEditedQuestionsarray, action.id]\n        }  \n\n    case SET_QUESTIONS_TO_EDIT_STATUS:\n        return {\n            ...state,\n            currentStatus: action.status\n        } \n\n    case CLEAR_EDITED_QUESTIONS_LIST:\n        return {\n            ...state,\n            recentlyEditedQuestionsarray: []\n        } \n\n    case SET_REDIRECT_FLAG_TO_BACK_TO_QUESTIONS_LIST:\n        return {\n            ...state,\n            redirectAfterSuccesfullQuestionsSaving: action.n\n        } \n\n    case SET_CURRENT_SUBJECT_NAME_FOR_QUESTION_EDIT:\n        return {\n            ...state,\n            currentSubjectName: action.name\n        } \n\n    case SET_ANSWERS_FOR_QUESTION_ID:\n        return {\n            ...state,\n            answers: action.answers\n        } \n\n    case SET_RESULTS_FILTERED:\n        return {\n            ...state,\n            resultsFiltered: action.resultsFiltered\n        }\n\n    case SET_ADMIN_EDIT_QUESTION_ITEM:\n        return {\n            ...state,\n            adminEditQuestionItem: action.content\n        }\n\n    case SET_CURRENT_QUESTIONS_BY_SUBJECT_TO_EDIT:\n        return {\n            ...state,\n            questions: action.questions\n        }\n\n    case SET_PAGINATED_QUESTIONS:\n        return {\n            ...state,\n            questionsPaginated: action.results\n        }\n\n    case SET_NUMBER_OF_CURRENT_QUESTIONS_BY_SUBJECT_TO_EDIT:\n        return {\n            ...state,\n            numberOfQuestionsBySubject: action.number\n        }\n\n    case SET_CURRENT_PAGINATION_QUESTIONS_BY_SUBJECT:\n        return {\n            ...state,\n            currentPagination: action.number\n        }\n\n    case 'SET_SEARCH_QUESTIONS_BY_KEY_RESULT':\n        return {\n            ...state,\n            foundQuestionsByWord: action.questions\n        }\n///\n\n    default: \n        return {\n            ...state\n        }\n    }\n} \n\nexport default questionsReducer;","import { SET_USER_NAME, SET_ROLE_ID, SET_JWT_TOKEN, SET_USER_ID, CLEAR_SENSITIVE_INFO, \n    LOGIN_ERROR, SET_SIGNUP_CAPTCHA_TEXT, SET_SUSPENSION_REASON, SET_REDIRECT_FLAG_FOR_RESET_PASWORD_FUNCTION } from '../types'\n\nlet loginSignUpState={\n    loginError: '',\n    loginErrorVisibility: 'hidden',\n     \n    /* \n    userName: 'Petro',   \n    roleId: 2, //0 by default, 2 for admin\n    JWToken: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJyb2xlX2lkIjoyLCJsb2dpbl90aW1lc3RhbXAiOjE2NTg3NzI5Njd9.EwmceFz5uGiWWQeRYTyAemIrw6H+x2OtV4xFtWtA7n4=',\n    userId: '1',\n    */     \n\n    userName: '',   \n    roleId: 0, //0 by default, 2 for admin\n    JWToken: '',\n    userId: '',\n\n    signupCaptchaText: '',\n    suspensionReason: '',\n    redirectFlagForPasswordresetFunctionality: 1, // when password reset succesfully, we need to redirect user to login page, so this redirect will be controlled by this flag\n}\n\nconst loginSignUpReducer = (state=loginSignUpState, action)=>{\n    switch (action.type){\n    case LOGIN_ERROR:\n        return{\n            ...state,\n            loginError: action.loginError,\n            loginErrorVisibility: action.loginErrorVisibility\n        } \n\n    case SET_USER_NAME:\n        return{\n            ...state,\n            userName: action.userName\n        }\n\n    case SET_JWT_TOKEN:\n        return{\n            ...state,\n            JWToken: action.JWToken\n        }\n\n    case SET_ROLE_ID:\n        return{\n            ...state,\n            roleId: action.roleId\n        }  \n\n    case SET_USER_ID:\n        return{\n            ...state,\n            userId: action.userId\n        } \n\n    case SET_SIGNUP_CAPTCHA_TEXT:\n        return{\n            ...state,\n            signupCaptchaText: action.recaptchaText\n        }\n\n    case CLEAR_SENSITIVE_INFO:\n        return{\n            ...state,\n            userName: '',\n            JWToken: '',\n            userId: '',\n            roleId: 0,\n        }\n\n    case SET_SUSPENSION_REASON:\n        return{\n            ...state,\n            suspensionReason: action.suspensionReason,\n        }\n\n    case SET_REDIRECT_FLAG_FOR_RESET_PASWORD_FUNCTION:\n        return{\n            ...state,\n            redirectFlagForPasswordresetFunctionality: action.redirectFlagForPasswordResetFunction,\n        }\n\n    default: \n        return {\n            ...state\n        }\n    }\n} \n\nexport default loginSignUpReducer;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../../translations/forms/AddContributionForm';\nimport Button from '@mui/material/Button';\nimport TextAreaCounterPeter from '../formelements/TextAreaCounterPeter';\n\nconst validate = values => {\n    const errors = {}\n    if (!values.question) { errors.question = 'Required'  } else if (values.question.length > 1000) { errors.question = 'Must be 1000 characters or less'}\n    if (!values.firstAnswer) {  errors.firstAnswer = 'Required'  } else if (values.firstAnswer.length > 1000) { errors.firstAnswer = 'Must be 1000 characters or less'}\n    if (!values.secondAnswer) {  errors.secondAnswer = 'Required'  } else if (values.secondAnswer.length > 1000) { errors.secondAnswer = 'Must be 1000 characters or less'}\n    if (!values.thirdAnswer) { errors.thirdAnswer = 'Required' } else if (values.thirdAnswer.length > 1000) { errors.thirdAnswer = 'Must be 1000 characters or less'}\n    if (!values.fourthAnswer) { errors.fourthAnswer = 'Required'  } else if (values.fourthAnswer.length > 1000) { errors.fourthAnswer = 'Must be 1000 characters or less'}\n    return errors\n  }\n\nconst AddContributionForm = props => {\n  const { handleSubmit, pristine, reset, submitting, language, valid, navigateFunction } = props;\n  const translations = {\n    firstAnswer:  language === 'en' ? messages.en.firstAnswer : messages.ru.firstAnswer,\n    secondAnswer:  language === 'en' ? messages.en.secondAnswer : messages.ru.secondAnswer,\n    thirdAnswer:  language === 'en' ? messages.en.thirdAnswer : messages.ru.thirdAnswer,\n    fourthAnswer:  language === 'en' ? messages.en.fourthAnswer : messages.ru.fourthAnswer,\n    question: language === 'en' ? messages.en.question : messages.ru.question,\n    clearValues: language === 'en' ? messages.en.clearValues : messages.ru.clearValues,\n  }\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n      <form onSubmit={handleSubmit}>\n          <br/> <br />\n        <div>\n            <table style={{width: \"100%\"}} className=\"contributionForm\">\n                <tbody>\n                  <tr><td><Field  name=\"question\" component={TextAreaCounterPeter} limit={1000} label={translations.question} language={language}/></td></tr>\n                  <tr><td><br/></td></tr>\n                  <tr><td><Field  name=\"firstAnswer\" component={TextAreaCounterPeter} limit={1000} label={translations.firstAnswer} language={language}/></td></tr>\n                  <tr><td><Field  name=\"secondAnswer\" component={TextAreaCounterPeter} limit={1000} label={translations.secondAnswer} language={language}/></td></tr>\n                  <tr><td><Field  name=\"thirdAnswer\" component={TextAreaCounterPeter} limit={1000} label={translations.thirdAnswer} language={language}/></td></tr>\n                  <tr><td><Field  name=\"fourthAnswer\" component={TextAreaCounterPeter} limit={1000} label={translations.fourthAnswer} language={language}/></td></tr>\n\n                </tbody>\n            </table>\n        </div>\n        <br/><br/>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" disabled={pristine || submitting || !valid}><FormattedMessage id=\"sendQuestion\" /></Button>&nbsp;&nbsp;&nbsp;\n          <Button variant=\"contained\" color=\"error\" disabled={pristine || submitting} onClick={reset}><FormattedMessage id=\"clearValues\" /></Button>&nbsp;&nbsp;&nbsp;\n          <Button variant=\"contained\" onClick={navigateFunction}><FormattedMessage id=\"seeMyContributionStatus\" /></Button>\n        </div>\n      </form>\n    </IntlProvider>\n  );\n};\n\nexport default reduxForm({\n  form: 'addContibutionFormRedux', \n  validate\n})(AddContributionForm);","import React from 'react'\nimport MaterialUiNavigation from './MaterialUiNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Contribution';\nimport { withCookies } from 'react-cookie';\nimport AddContributionForm from \"./forms/AddContributionForm\";\nimport { formValueSelector } from 'redux-form';\nimport MuiDropDownMenu from './formelements/MuiDropDownMenu';\n\nclass AddMyQuestions extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    this.state = {\n        currentSubjectId: '',\n        currentSubjectName: '',\n    };\n  }\n\n  componentDidMount(){\n    this.props.setCurrentContributionSubjectId('');\n    this.props.loadSubjectsUsers();\n  }\n\n  onDropdownChange = (event) => {\n    const subjName = this.props.subjectsUser.filter(value => value.id === event.target.value);\n    this.setState({\n      currentSubjectId: event.target.value,\n      currentSubjectName: subjName\n    })\n    this.props.setCurrentContributionSubjectId(event.target.value);\n    if(subjName[0]){\n      this.props.setCurrentContributionSubjectname(subjName[0].name);\n    } else {\n      this.props.setCurrentContributionSubjectname('');\n    }\n  };\n\n  onMuiDropdownChange = (id, name) => {\n    this.setState({\n      currentSubjectId: id,\n      currentSubjectName: name\n    })\n    this.props.setCurrentContributionSubjectId(id);\n    if(!!name){\n      this.props.setCurrentContributionSubjectname(name);\n    } else {\n      this.props.setCurrentContributionSubjectname('');\n    }\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  navigateToMyContributionStatus = () =>{\n    this.props.history.push('/app/myquestionstatus');\n  }\n\n\n  render() {\n    const { question, firstAnswer, secondAnswer, thirdAnswer, fourthAnswer } = this.props;\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n          <MaterialUiNavigation logoutUser={this.props.logoutUser} userName={this.props.userName} \n            roleId={this.props.roleId} \n            toggleLanguage={this.toggleLanguage} \n            language={this.props.language} \n            />\n           <div className=\"container\">\n            <h2><FormattedMessage id=\"addMyQuestions\" /></h2>\n            <br />\n            <FormattedMessage id=\"youCanAddQuestions\" />\n            <br />\n            <MuiDropDownMenu options={this.props.subjectsUser} onMuiDropdownChange={this.onMuiDropdownChange} language={this.props.language} messages={messages}/>\n            {/*\n            <select className=\"form-control\" onChange={this.onDropdownChange}>\n                <FormattedMessage id=\"select\">{(formattedValue)=>(<option key=\"0\" value=\"\">{formattedValue}</option>)}</FormattedMessage> ugly way to get just translated string, but this works \n                {this.props.subjectsUser.map((value) => (<option key={value.id} value={value.id}>{value.name}</option>)) } </select> */}\n            <div style={this.props.contributionSubjectId === '' ? {display: 'none'} : {}} >\n              <AddContributionForm onSubmit={()=>{this.props.sentMyContributionSaga({ question, firstAnswer, secondAnswer, thirdAnswer, fourthAnswer, subjectId: this.props.contributionSubjectId })}} \n              navigateFunction = {this.navigateToMyContributionStatus.bind(this)} language={this.props.language}/>\n            </div>\n          </div>\n        </div>\n     </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.loginSignUpReducer, ...state.settingsReducer, ...state.subjectsReducer, ...state.testReducer, ...state.contributionsReducer\n  };\n}\n\nconst selector = formValueSelector('addContibutionFormRedux');\n\nAddMyQuestions = connect(\n  state => {\n    const question = selector(state, 'question');\n    const firstAnswer = selector(state, 'firstAnswer');\n    const secondAnswer = selector(state, 'secondAnswer');\n    const thirdAnswer = selector(state, 'thirdAnswer');\n    const fourthAnswer = selector(state, 'fourthAnswer');\n    return {\n      question, firstAnswer, secondAnswer, thirdAnswer, fourthAnswer\n    }\n  }\n)(AddMyQuestions) \n\nexport default connect(mapStateToProps, actionCreators)(withCookies(AddMyQuestions));","import { SET_CURRENT_CONTRIBUTION_SUBJECT_ID, SET_CURRENT_CONTRIBUTION_SUBJECT_NAME,  \n    SET_ADMIN_CONTRIBUTION, SET_CONTRIBUTION_CONTENT, SET_REDIRECT_FLAG_FORADMIN, SET_USER_CONTRIBUTION, SET_USER_CONTRIBUTION_ITEM, CLEAR_SENSITIVE_INFO } from '../types'\n\n\nlet contributionState={\n    contributionSubjectId: '',\n    contributionSubjectName: '',\n    adminContribution: '',/// set of all contributions \n    adminContributionItem: '',///particular contributions id \n    redirectAfterSuccesfullAdministeringForAdmin: 1,  /// if 2, will redirect to contributions page from contribution item page\n    userContribution: '',/// set of all contributions for given user \n    userContributionItem: '',///particular contributions for given user\n    contributionRateLimiterHours: 0,\n    contributionRateLimiterQuantity: 0\n}\n\nconst contributionsReducer = (state=contributionState, action)=>{\n    switch (action.type){\n\n    case SET_CURRENT_CONTRIBUTION_SUBJECT_ID:\n        return {\n            ...state,\n            contributionSubjectId: action.subjectId,\n        } \n\n    case 'SET_RATE_LIMITER':\n        return {\n            ...state,\n            contributionRateLimiterHours: action.contributeRatelimiterHours,\n            contributionRateLimiterQuantity: action.contributeRatelimiterContributions\n        } \n\n    case SET_CURRENT_CONTRIBUTION_SUBJECT_NAME:\n        return {\n            ...state,\n            contributionSubjectName: action.subjectName,\n        } \n\n    case SET_ADMIN_CONTRIBUTION:\n        return {\n            ...state,\n            adminContribution: action.contributionAdminResults,\n        } \n\n    case SET_CONTRIBUTION_CONTENT:\n        return {\n            ...state,\n            adminContributionItem: action.contributionAdminItemResults,\n        }\n\n    case SET_REDIRECT_FLAG_FORADMIN:\n        return {\n            ...state,\n            redirectAfterSuccesfullAdministeringForAdmin: action.redirectFlagForAdmin,\n        }\n\n    case SET_USER_CONTRIBUTION:\n        return {\n            ...state,\n            userContribution: action.userContribution,\n        }\n\n    case SET_USER_CONTRIBUTION_ITEM:\n        return {\n            ...state,\n            userContributionItem: action.contributionUserItemResults,\n        }\n\n    case CLEAR_SENSITIVE_INFO:\n        return{\n            ...state,\n            userContributionItem: '',\n            userContribution: '',\n            adminContributionItem: '',\n            adminContribution: 0,\n        }\n\n    default: \n        return {\n            ...state\n        }\n    }\n} \n\nexport default contributionsReducer;\n\n","import React from 'react';\nimport messages from '../../translations/EditContributionForm';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Link } from 'react-router-dom';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\n\n\n\nconst MuiMyContributionStatus = props => {\n  const { contributions, language } = props;\n\n  const translations = {\n    status:  language === 'en' ? messages.en.status : messages.ru.status,\n    createdAt:  language === 'en' ? messages.en.createdAt : messages.ru.createdAt,\n    subject: language === 'en' ? messages.en.subject : messages.ru.subject,\n    pending: language === 'en' ? messages.en.pending : messages.ru.pending,\n    approved: language === 'en' ? messages.en.approved : messages.ru.approved,\n    declined: language === 'en' ? messages.en.declined : messages.ru.declined,\n    noAddedQuestions: language === 'en' ? messages.en.noAddedQuestions : messages.ru.noAddedQuestions,\n  }\n\n  const renderLink = (params) => {\n    let statusWord = (params.row.status === 0 ? translations.pending : params.row.status === 1 ? translations.approved : translations.declined);\n    const url =  '/app/mycontribution/' + params.row.id;\n    return (\n      <Link to={url}>{ statusWord }</Link>\n    )\n}\n\n  function transform(value) {\n    let myres = value.reduce(\n    function(newArr, ind){\n      ind.createdAt = ind.createdAt.substring(0, 10);\n      let statusWord = (ind.status === 0 ? translations.pending : ind.status === 1 ? translations.approved : translations.declined);\n      let link = '<a href=\"/app/mycontribution/' + ind.id + '\">' + {statusWord} + '</a>';\n      ind = {...ind, statusWord: statusWord, link: link};\n      newArr.push(ind);\n      return newArr;\n    }, [])\n    return myres;\t\n  }\n\n  let contributionTransformed =[];\n  if(!!contributions){\n    contributionTransformed = transform(contributions);\n  }\n\n  const columns = [\n    { field: 'subjectName', headerName: translations.subject, headerClassName: 'dataGridHeaderClassName' },\n    { field: 'createdAt', headerName: translations.createdAt, headerClassName: 'dataGridHeaderClassName'  },\n    { field: 'link', headerName: translations.status, renderCell: renderLink, headerClassName: 'dataGridHeaderClassName' }\n  ];\n\n  return (\n    <IntlProvider locale={language} messages={messages[language]}>\n    <div style={contributionTransformed.length !== 0 ? {display: 'none', height: 800, width: 'auto'} : {height: 800, width: 'auto'}}>\n      <FormattedMessage id=\"noAddedQuestions\" />\n    </div>\n    <div style={contributionTransformed.length === 0 ? {display: 'none', height: 800, width: 'auto'} : {height: 800, width: 'auto'}}>\n        <DataGrid\n          rows={contributionTransformed}\n          columns={columns}\n          pageSize={20}\n          rowsPerPageOptions={[20]}\n          disableSelectionOnClick\n          disableExtendRowFullWidth={true}\n          sx={{\n            boxShadow: 2,\n            border: 2,\n            borderColor: 'primary.light',\n            '& .MuiDataGrid-cell:hover': {\n              color: 'primary.main',\n            },\n          }}\n          getCellClassName={(params) => {\n            let styleName = (params.row.status === 0 ? 'dataGridPending' : params.row.status === 1 ? 'dataGridApproved' : 'dataGridDeclined');\n            return styleName;\n          }}\n        />\n    </div>\n    </IntlProvider>\n\n  );\n};\n\nexport default MuiMyContributionStatus;","import React from 'react'\nimport MaterialUiNavigation from './MaterialUiNavigation';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../actions/index';\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport messages from '../translations/Contribution';\nimport { withCookies } from 'react-cookie';\nimport MuiMyContributionStatus from \"./forms/MuiMyContributionStatus\";\n\nclass MyQuestionsStatus extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n  }\n\n  componentDidMount(){\n    this.props.loadContributionUser();\n  }\n\n  toggleLanguage = (lang) =>{\n    this.props.setLanguage(lang);\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <div>\n          <MaterialUiNavigation logoutUser={this.props.logoutUser} \n            userName={this.props.userName} \n            roleId={this.props.roleId} \n            toggleLanguage={this.toggleLanguage} \n            language={this.props.language}\n          />           \n          <div className=\"container\">\n            <h2><FormattedMessage id=\"myQuestionsStatus\" /></h2>\n            <FormattedMessage id=\"onceAdded\" />\n            <br /><br />\n            <MuiMyContributionStatus  contributions={ this.props.userContribution } language={this.props.language} />\n          </div>\n      </div>\n     </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    ...state.loginSignUpReducer, ...state.settingsReducer, ...state.contributionsReducer, ...state.usersReducer\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(withCookies(MyQuestionsStatus));","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\n\nconst NonAuthorizedRoute = props => {\n  if (props.roleId !== 0) return <Redirect to=\"/app\" />;\n  return <Route {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  roleId: state.loginSignUpReducer.roleId\n});\n\nexport default connect(mapStateToProps)(NonAuthorizedRoute);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\n\nconst AuthorizedRouteUser = props => {\n  if (props.roleId === 0) return <Redirect to=\"/app\" />;\n  return <Route {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  roleId: state.loginSignUpReducer.roleId\n});\n\nexport default connect(mapStateToProps)(AuthorizedRouteUser);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\n\nconst AuthorizedRouteAdmin = props => {\n  if (props.roleId === 0 || props.roleId === 1) return <Redirect to=\"/app\" />;\n  return <Route {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  roleId: state.loginSignUpReducer.roleId\n});\n\nexport default connect(mapStateToProps)(AuthorizedRouteAdmin);","import 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './components/Home';\nimport './index.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport createSagaMiddleware from 'redux-saga';\n\n\nimport Test from './components/Test';\nimport Loginn from './components/LoginN';\nimport Users from './components/Users';\nimport Signup from './components/Signup';\nimport Resultsn from './components/Resultsn';\nimport Subjects from './components/Subjects';\nimport AboutCookie from './components/AboutCookie'\nimport CookieConsent from './components/CookieConsent';\nimport PasswordReset from './components/PasswordReset';\nimport AdminSettings from './components/AdminSettings';\nimport ForgotPassword from './components/ForgotPassword';\nimport AccountSettings from './components/AccountSettings';\nimport FlashMessage from './components/formelements/FlashMessage';\nimport FeedbackButton from './components/formelements/FeedbackButton';\nimport MuiFlashMessage from './components/formelements/MuiFlashMessage';\n\n\nimport SpinningOverlay from './components/SpinningOverlay';\nimport AdminEditQuestion from './components/AdminEditQuestion';\nimport AdminAddQuestions from './components/AdminAddQuestions';\nimport AdminContribution from './components/AdminContribution';\nimport AdmineditQuestions from './components/AdmineditQuestions';\nimport AdminContributionDetails from './components/AdminContributionDetails';\nimport UserContributionDetails from './components/UserContributionDetails';\nimport AdminSearchQuestion from './components/AdminSearchQuestion';\n\n\nimport {createStore, applyMiddleware, combineReducers } from 'redux';\nimport rootSaga from './sagas';\nimport thunk from 'redux-thunk';\nimport {Provider} from 'react-redux';\nimport testReducer from \"./reducers/testing\";\nimport usersReducer from \"./reducers/users\";\nimport resultsReducer from \"./reducers/results\";\nimport settingsReducer from \"./reducers/settings\";\nimport commentsReducer from './reducers/comments';\nimport subjectsReducer from \"./reducers/subjects\";\nimport questionsReducer from \"./reducers/questions\";\nimport loginSignUpReducer from \"./reducers/loginsignup\";\nimport AddMyQuestions from './components/AddMyQuestions';\nimport contributionsReducer from \"./reducers/contribution\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport MyQuestionsStatus from './components/MyQuestionsStatus';\nimport NonAuthorizedRoute from './components/authorization/NonAuthorized';\nimport AuthorizedRouteUser from './components/authorization/AuthorizedRouteUser';\nimport AuthorizedRouteAdmin from './components/authorization/AuthorizedRouteAdmin';\nimport { reducer as formReducer } from 'redux-form';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst rootReducer = combineReducers({\n  testReducer,\n  usersReducer,\n  loginSignUpReducer,\n  resultsReducer,\n  subjectsReducer,\n  settingsReducer,\n  contributionsReducer,\n  questionsReducer,\n  commentsReducer,\n  form: formReducer\n})\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware, thunk)));\nsagaMiddleware.run(rootSaga);\n\nclass App extends React.Component{\n  render(){\n    return(\n        <Router>\n          <div>\n            <FeedbackButton/>\n            <SpinningOverlay />\n            <FlashMessage />\n            <MuiFlashMessage />\n            <CookieConsent />\n            <Route exact path=\"/app\" component={Home} />\n            <NonAuthorizedRoute exact path=\"/app/test\" component={Test}/>\n            <NonAuthorizedRoute exact path=\"/app/resetpassword\" component={PasswordReset} />\n            <NonAuthorizedRoute exact path=\"/app/login\" component={Loginn}/>\n            <NonAuthorizedRoute exact path=\"/app/signup\" component={Signup} />\n            <NonAuthorizedRoute exact path=\"/app/forgotpassword\" component={ForgotPassword} />\n            <NonAuthorizedRoute exact path=\"/app/aboutcookie\" component={AboutCookie}/>\n \n            <AuthorizedRouteUser exact path=\"/app/resultsn\" component={Resultsn} />\n            <AuthorizedRouteUser exact path=\"/app/test\" component={Test} />\n            <AuthorizedRouteUser exact path=\"/app/aboutcookie\" component={AboutCookie}/>\n            <AuthorizedRouteUser exact path=\"/app/addmyquestion\" component={AddMyQuestions} />\n            <AuthorizedRouteUser exact path=\"/app/myquestionstatus\" component={MyQuestionsStatus} />\n            <AuthorizedRouteUser exact path=\"/app/accountsettings\" component={AccountSettings} />\n            <AuthorizedRouteUser exact path=\"/app/mycontribution/:id\" component={UserContributionDetails} />\n \n            <AuthorizedRouteAdmin exact path=\"/app/users\" component={Users} />\n            <AuthorizedRouteAdmin exact path=\"/app/adminsettings\" component={AdminSettings} />\n            <AuthorizedRouteAdmin exact path=\"/app/subjects\" component={Subjects} />\n            <AuthorizedRouteAdmin exact path=\"/app/admincontribution\" component={AdminContribution} />\n            <AuthorizedRouteAdmin exact path=\"/app/admincontribution/:id\" component={AdminContributionDetails} />\n            <AuthorizedRouteAdmin exact path=\"/app/admineditquestions/:id\" component={AdminEditQuestion} />\n            <AuthorizedRouteAdmin exact path=\"/app/adminaddquestion\" component={AdminAddQuestions} />\n            <AuthorizedRouteAdmin exact path=\"/app/admineditquestion\" component={AdmineditQuestions} />\n            <AuthorizedRouteAdmin exact path=\"/app/adminsearchquestion\" component={AdminSearchQuestion} />\n\n          </div>\n      </Router>\n    )\n  }\n}\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('app'));\n\nexport default store;\n\n\n"],"sourceRoot":""}